{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506102c2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b1117e9e1461003b578063eea4773014610050575b600080fd5b61004e6100493660046101c3565b610063565b005b61004e61005e366004610222565b6100f0565b6040516367d47da160e11b815233600482015230602482015285151560448201526064810185905260ff8416608482015260a4810183905260c481018290526001600160a01b0387169063cfa8fb429060e401600060405180830381600087803b1580156100d057600080fd5b505af11580156100e4573d6000803e3d6000fd5b50505050505050505050565b604051630b3367b560e21b81523360048201523060248201526044810187905285151560648201526084810185905260ff841660a482015260c4810183905260e481018290526001600160a01b03881690632ccd9ed49061010401600060405180830381600087803b15801561016557600080fd5b505af1158015610179573d6000803e3d6000fd5b5050505050505050505050565b80356001600160a01b038116811461019d57600080fd5b919050565b8035801515811461019d57600080fd5b803560ff8116811461019d57600080fd5b60008060008060008060c087890312156101dc57600080fd5b6101e587610186565b95506101f3602088016101a2565b945060408701359350610208606088016101b2565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561023d57600080fd5b61024688610186565b96506020880135955061025b604089016101a2565b945060608801359350610270608089016101b2565b925060a0880135915060c088013590509295989194975092955056fea26469706673582212207108e2444e908069a6978ad50f2f240b1539712c89d9a13ccf3a99a658b4b04764736f6c634300080d0033",
    "sourceMap": "92:39:43:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063b1117e9e1461003b578063eea4773014610050575b600080fd5b61004e6100493660046101c3565b610063565b005b61004e61005e366004610222565b6100f0565b6040516367d47da160e11b815233600482015230602482015285151560448201526064810185905260ff8416608482015260a4810183905260c481018290526001600160a01b0387169063cfa8fb429060e401600060405180830381600087803b1580156100d057600080fd5b505af11580156100e4573d6000803e3d6000fd5b50505050505050505050565b604051630b3367b560e21b81523360048201523060248201526044810187905285151560648201526084810185905260ff841660a482015260c4810183905260e481018290526001600160a01b03881690632ccd9ed49061010401600060405180830381600087803b15801561016557600080fd5b505af1158015610179573d6000803e3d6000fd5b5050505050505050505050565b80356001600160a01b038116811461019d57600080fd5b919050565b8035801515811461019d57600080fd5b803560ff8116811461019d57600080fd5b60008060008060008060c087890312156101dc57600080fd5b6101e587610186565b95506101f3602088016101a2565b945060408701359350610208606088016101b2565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a03121561023d57600080fd5b61024688610186565b96506020880135955061025b604089016101a2565b945060608801359350610270608089016101b2565b925060a0880135915060c088013590509295989194975092955056fea26469706673582212207108e2444e908069a6978ad50f2f240b1539712c89d9a13ccf3a99a658b4b04764736f6c634300080d0033",
    "sourceMap": "92:39:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1816:368:58;;;;;;:::i;:::-;;:::i;:::-;;926:400;;;;;;:::i;:::-;;:::i;1816:368::-;1995:182;;-1:-1:-1;;;1995:182:58;;2036:10;1995:182;;;2002:34:115;2068:4:58;2052:18:115;;;2045:43;2131:14;;2124:22;2104:18;;;2097:50;2163:18;;;2156:34;;;2239:4;2227:17;;2206:19;;;2199:46;2261:19;;;2254:35;;;2305:19;;;2298:35;;;-1:-1:-1;;;;;1995:27:58;;;;;1936:19:115;;1995:182:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1816:368;;;;;;:::o;926:400::-;1123:196;;-1:-1:-1;;;1123:196:58;;1161:10;1123:196;;;2715:34:115;1193:4:58;2765:18:115;;;2758:43;2817:18;;;2810:34;;;2887:14;;2880:22;2860:18;;;2853:50;2919:19;;;2912:35;;;2996:4;2984:17;;2963:19;;;2956:46;3018:19;;;3011:35;;;3062:19;;;3055:35;;;-1:-1:-1;;;;;1123:24:58;;;;;2649:19:115;;1123:196:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:400;;;;;;;:::o;14:173:115:-;82:20;;-1:-1:-1;;;;;131:31:115;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:160::-;257:20;;313:13;;306:21;296:32;;286:60;;342:1;339;332:12;357:156;423:20;;483:4;472:16;;462:27;;452:55;;503:1;500;493:12;518:531;617:6;625;633;641;649;657;710:3;698:9;689:7;685:23;681:33;678:53;;;727:1;724;717:12;678:53;750:29;769:9;750:29;:::i;:::-;740:39;;798:35;829:2;818:9;814:18;798:35;:::i;:::-;788:45;;880:2;869:9;865:18;852:32;842:42;;903:36;935:2;924:9;920:18;903:36;:::i;:::-;893:46;;986:3;975:9;971:19;958:33;948:43;;1038:3;1027:9;1023:19;1010:33;1000:43;;518:531;;;;;;;;:::o;1054:600::-;1162:6;1170;1178;1186;1194;1202;1210;1263:3;1251:9;1242:7;1238:23;1234:33;1231:53;;;1280:1;1277;1270:12;1231:53;1303:29;1322:9;1303:29;:::i;:::-;1293:39;;1379:2;1368:9;1364:18;1351:32;1341:42;;1402:35;1433:2;1422:9;1418:18;1402:35;:::i;:::-;1392:45;;1484:2;1473:9;1469:18;1456:32;1446:42;;1507:37;1539:3;1528:9;1524:19;1507:37;:::i;:::-;1497:47;;1591:3;1580:9;1576:19;1563:33;1553:43;;1643:3;1632:9;1628:19;1615:33;1605:43;;1054:600;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "selfPermit(address,uint256,bool,uint256,uint8,bytes32,bytes32)": "eea47730",
    "selfPermitAll(address,bool,uint256,uint8,bytes32,bytes32)": "b1117e9e"
  },
  "ast": {
    "absolutePath": "src/mocks/MockPermitter.sol",
    "id": 18645,
    "exportedSymbols": {
      "IFERC1155": [
        17436
      ],
      "MockPermitter": [
        18644
      ],
      "SelfPermit": [
        23002
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:100:43",
    "nodes": [
      {
        "id": 18640,
        "nodeType": "PragmaDirective",
        "src": "32:23:43",
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 18641,
        "nodeType": "ImportDirective",
        "src": "57:33:43",
        "absolutePath": "src/utils/SelfPermit.sol",
        "file": "../utils/SelfPermit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 18645,
        "sourceUnit": 23003,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 18644,
        "nodeType": "ContractDefinition",
        "src": "92:39:43",
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18642,
              "name": "SelfPermit",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23002,
              "src": "118:10:43"
            },
            "id": 18643,
            "nodeType": "InheritanceSpecifier",
            "src": "118:10:43"
          }
        ],
        "canonicalName": "MockPermitter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          18644,
          23002
        ],
        "name": "MockPermitter",
        "nameLocation": "101:13:43",
        "scope": 18645,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 43
}