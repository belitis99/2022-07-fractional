{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "msg",
          "type": "string"
        }
      ],
      "name": "WARNING_Deprecated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_domainSeparator",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_structHash",
          "type": "bytes32"
        }
      ],
      "name": "computeDigest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "computeDomainSeparator",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_privateKey",
          "type": "uint256"
        }
      ],
      "name": "createUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_fractions",
          "type": "uint256"
        }
      ],
      "name": "deployBaseVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getETHBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getFractionBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "initializeBatchMigrationERC1155",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "batchMigrationERC1155",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_count",
          "type": "uint256"
        }
      ],
      "name": "initializeBatchWithdrawalERC1155",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "batchWithdrawERC1155",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user2",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_approval",
          "type": "bool"
        }
      ],
      "name": "initializeBuyout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeDeploy",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "deployVault",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_count",
          "type": "uint256"
        }
      ],
      "name": "initializeDepositERC1155",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "depositERC1155",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "initializeDepositERC20",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "depositERC721",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_count",
          "type": "uint256"
        }
      ],
      "name": "initializeDepositERC721",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "depositERC721",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "initializeERC20Migration",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "migrateERC20",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "initializeERC721Migration",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "migrateERC721",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user2",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_approval",
          "type": "bool"
        }
      ],
      "name": "initializeMigration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeNFTReceiver",
      "outputs": [
        {
          "internalType": "bytes4[]",
          "name": "",
          "type": "bytes4[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "initializeWithdrawalERC1155",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "withdrawERC1155",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "initializeWithdrawalERC20",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "withdrawERC20",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "initializeWithdrawalERC721",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "withdrawERC721",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_count",
          "type": "uint256"
        }
      ],
      "name": "mintERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum State",
          "name": "_expected",
          "type": "uint8"
        },
        {
          "internalType": "enum State",
          "name": "_actual",
          "type": "uint8"
        }
      ],
      "name": "revertBuyoutState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approval",
          "type": "bool"
        }
      ],
      "name": "setApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user2",
          "type": "tuple"
        }
      ],
      "name": "setUpBatchWithdrawERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user2",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_fractions",
          "type": "uint256"
        }
      ],
      "name": "setUpBuyout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user2",
          "type": "tuple"
        }
      ],
      "name": "setUpBuyoutCash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUpContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user",
          "type": "tuple"
        }
      ],
      "name": "setUpCreateFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user",
          "type": "tuple"
        }
      ],
      "name": "setUpExecute",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_ferc1155",
          "type": "address"
        }
      ],
      "name": "setUpFERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user",
          "type": "tuple"
        }
      ],
      "name": "setUpMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user2",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_fractions",
          "type": "uint256"
        }
      ],
      "name": "setUpMigration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user",
          "type": "tuple"
        }
      ],
      "name": "setUpMulticall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "setUpPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUpProof",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_privateKey",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setUpUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "user",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUpWETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user2",
          "type": "tuple"
        }
      ],
      "name": "setUpWithdrawERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user2",
          "type": "tuple"
        }
      ],
      "name": "setUpWithdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user1",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_user2",
          "type": "tuple"
        }
      ],
      "name": "setUpWithdrawERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_owner",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_bool",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "signPermit",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pkey",
              "type": "uint256"
            },
            {
              "internalType": "contract Blacksmith",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract BaseVaultBS",
              "name": "baseVault",
              "type": "address"
            },
            {
              "internalType": "contract BuyoutBS",
              "name": "buyoutModule",
              "type": "address"
            },
            {
              "internalType": "contract MigrationBS",
              "name": "migrationModule",
              "type": "address"
            },
            {
              "internalType": "contract MockERC721BS",
              "name": "erc721",
              "type": "address"
            },
            {
              "internalType": "contract MockERC1155BS",
              "name": "erc1155",
              "type": "address"
            },
            {
              "internalType": "contract MockERC20BS",
              "name": "erc20",
              "type": "address"
            },
            {
              "internalType": "contract TransferBS",
              "name": "transfer",
              "type": "address"
            },
            {
              "internalType": "contract VaultRegistryBS",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract FERC1155BS",
              "name": "ferc1155",
              "type": "address"
            },
            {
              "internalType": "contract VaultBS",
              "name": "vaultProxy",
              "type": "address"
            }
          ],
          "internalType": "struct TestUtil.User",
          "name": "_owner",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_bool",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "signPermitAll",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBatchWithdrawERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBatchWithdrawERC1155Redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBatchWithdrawERC1155RevertNotAVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBatchWithdrawERC1155RevertNotAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBatchWithdrawERC1155RevertStateINACTIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuyFractionsNoDepositAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuyFractionsNotAVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuyFractionsRevertInvalidPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuyFractionsRevertStateINACTIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuyFractionsRevertTimeExpired",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBuyFractionsSingle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCashRevertNoFractions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCashRevertNotAVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCashRevertStateINACTIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCashRevertStateLIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEndRevertNotAVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEndRevertStateINACTIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEndRevertTimeNotElapsed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEndSuccesfull",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEndUnsuccesfull",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRedeemRevertNotAVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRedeemRevertNotTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRedeemRevertStateLIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSellFractions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSellFractionsNoDepositAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSellFractionsRevertNotAVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSellFractionsRevertNotApproved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSellFractionsRevertStateINACTIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSellFractionsRevertTimeExpired",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSellFractionsSelfPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStart",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStartNoFractions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStartRevertNotAVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStartRevertNotApproved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStartRevertStateLIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStartRevertTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStartRevertZeroDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC1155Redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC1155RevertNotAVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC1155RevertNotAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC1155RevertStateINACTIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC20Redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC20RevertNotAVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC20RevertNotAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC20RevertStateINACTIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC721Redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC721RevertNotAVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC721RevertNotAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdrawERC721RevertStateINACTIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1572:26:0:-:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;3111:1:65;89:29745:60;3097:16:65;;;;89:29745:60;3097:16:65;;;89:29745:60;;3111:1:65;3097:16;;89:29745:60;3097:16:65;;;-1:-1:-1;;3077:36:65;;;;;;-1:-1:-1;3077:36:65;;;;:::i;:::-;-1:-1:-1;3189:16:65;;;3203:1;3189:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;3170:35:65;;;;;;-1:-1:-1;3170:35:65;;;;:::i;:::-;-1:-1:-1;3233:16:65;;;3247:1;3233:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;3211:38:65;;;;;;-1:-1:-1;3211:38:65;;;;:::i;:::-;-1:-1:-1;3277:16:65;;;3291:1;3277:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;3255:38:65;;;;;;-1:-1:-1;3255:38:65;;;;:::i;:::-;-1:-1:-1;3330:16:65;;;3344:1;3330:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;3299:47:65;;;;;;-1:-1:-1;3299:47:65;;;;:::i;:::-;-1:-1:-1;3384:16:65;;;3398:1;3384:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;3352:48:65;;;;;;-1:-1:-1;3352:48:65;;;;:::i;:::-;-1:-1:-1;3439:16:65;;;3453:1;3439:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;3406:49:65;;;;;;-1:-1:-1;3406:49:65;;;;:::i;:::-;-1:-1:-1;3499:16:65;;;3513:1;3499:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;3461:54:65;;;;;;-1:-1:-1;3461:54:65;;;;:::i;:::-;-1:-1:-1;3554:15:65;;;3567:1;3554:15;;;;;;;;;3522:47;;;;;;:::i;:::-;-1:-1:-1;3606:16:65;;;3620:1;3606:16;;;;;;;;;3575:47;;;;;;:::i;:::-;;89:29745:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;89:29745:60;-1:-1:-1;;;;;89:29745:60;;;;;;;;;;;-1:-1:-1;89:29745:60;;;;;;;-1:-1:-1;89:29745:60;;;-1:-1:-1;89:29745:60;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;89:29745:60;;;-1:-1:-1;89:29745:60;;;;;;;;;;;;;;;14:127:115;89:29745:60;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;;20914:548:65;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2103:290:60;;;:::i;18565:588:65:-;;;;;;:::i;:::-;;:::i;205:246:60:-;;;:::i;28140:602::-;;;:::i;1351:116:1:-;;;;;;:::i;:::-;;:::i;22694:257:65:-;;;;;;:::i;:::-;;:::i;24876:634:60:-;;;:::i;15337:349:65:-;;;:::i;24194:676:60:-;;;:::i;698:96:1:-;;;;;;:::i;:::-;;:::i;21465:625:60:-;;;:::i;14743:446::-;;;:::i;912:120:1:-;;;;;;:::i;:::-;;:::i;3689:287::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8562:32:115;;;8544:51;;8532:2;8517:18;3689:287:1;8398:203:115;22399:172:65;;;;;;:::i;:::-;;:::i;:::-;;;8752:25:115;;;8740:2;8725:18;22399:172:65;8606:177:115;550:85:1;;;;;;:::i;:::-;;:::i;10751:517:60:-;;;:::i;7410:896:65:-;;;:::i;12669:413::-;;;;;;:::i;:::-;;:::i;12492:227:60:-;;;:::i;3216:680::-;;;:::i;17341:636:65:-;;;:::i;:::-;;;;;;;;:::i;9008:462:60:-;;;:::i;17791:712::-;;;:::i;9742:536::-;;;:::i;310:40:1:-;;-1:-1:-1;;;;;;;;;;;310:40:1;;27004:560:60;;;:::i;22577:111:65:-;;;;;;:::i;:::-;-1:-1:-1;;;;;22665:16:65;;;22577:111;1722:140:1;;;;;;:::i;:::-;;:::i;13476:177:65:-;;;;;;:::i;:::-;;:::i;19701:509:60:-;;;:::i;2885:220::-;;;:::i;11785:590:65:-;;;;;;:::i;:::-;;:::i;13659:387::-;;;;;;:::i;:::-;;:::i;20327:560:60:-;;;:::i;13353:619::-;;;:::i;8280:722::-;;;:::i;19845:356:65:-;;;;;;:::i;:::-;;:::i;10623:180::-;;;;;;:::i;:::-;;:::i;13978:384:60:-;;;:::i;9236:335:65:-;;;;;;:::i;:::-;;:::i;16018:351:60:-;;;:::i;26348:539::-;;;:::i;2501:107:1:-;;;;;;:::i;:::-;;:::i;23320:361:65:-;;;:::i;20207:701::-;;;;;;:::i;:::-;;:::i;1239:106:1:-;;;;;;:::i;:::-;;:::i;19513:326:65:-;;;;;;:::i;:::-;;:::i;14368:369:60:-;;;:::i;11274:750::-;;;:::i;12381:282:65:-;;;;;;:::i;:::-;;:::i;21792:340::-;;;;;;:::i;:::-;;:::i;22222:171::-;;;;;;:::i;:::-;;:::i;18509:604:60:-;;;:::i;13088:382:65:-;;;;;;:::i;:::-;;:::i;5776:518:60:-;;;:::i;3951:1825:65:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2614:915:1:-;;;;;;:::i;:::-;;:::i;10284:368:60:-;;;:::i;3982:244:1:-;;;;;;:::i;:::-;;:::i;3902:1186:60:-;;;:::i;7573:701::-;;;:::i;7165:239:65:-;;;:::i;23687:664::-;;;;;;:::i;:::-;;:::i;:::-;;;;17527:4:115;17515:17;;;17497:36;;17564:2;17549:18;;17542:34;;;;17592:18;;;17585:34;17485:2;17470:18;23687:664:65;17299:326:115;15692:437:65;;;;;;:::i;:::-;;:::i;17089:696:60:-;;;:::i;28748:573::-;;;:::i;1038:130:1:-;;;;;;:::i;:::-;;:::i;22698:530:60:-;;;:::i;11275:423:65:-;;;;;;:::i;:::-;;:::i;22096:596:60:-;;;:::i;9476:260::-;;;:::i;1159:578::-;;;:::i;29327:505::-;;;:::i;461:83:1:-;;;;;;:::i;:::-;;:::i;1819:584:0:-;;;:::i;:::-;;;17795:14:115;;17788:22;17770:41;;17758:2;17743:18;1819:584:0;17630:187:115;10097:520:65;;;;;;:::i;:::-;;:::i;5863:1296::-;;;:::i;12030:456:60:-;;;:::i;6974:491::-;;;:::i;25516:826::-;;;:::i;20893:566::-;;;:::i;2296:81:1:-;;;;;;:::i;:::-;;:::i;14052:379:65:-;;;;;;:::i;:::-;;:::i;16375:364:60:-;;;:::i;8312:225:65:-;;;;;;:::i;:::-;;:::i;2647:232:60:-;;;:::i;1586:130:1:-;;;;;;:::i;:::-;;:::i;14545:678:65:-;;;;;;:::i;:::-;;:::i;17983:576::-;;;;;;:::i;:::-;;:::i;1906:297:1:-;;;;;;:::i;:::-;;:::i;2399:242:60:-;;;:::i;23050:264:65:-;;;;;;:::i;:::-;;:::i;16745:230:60:-;;;:::i;16135:505:65:-;;;;;;:::i;:::-;;:::i;19119:576:60:-;;;:::i;8639:486:65:-;;;;;;:::i;:::-;;:::i;6724:244:60:-;;;:::i;5094:676::-;;;:::i;10902:367:65:-;;;;;;:::i;:::-;;:::i;19159:348::-;;;;;;:::i;:::-;;:::i;556:597:60:-;;;:::i;800:106:1:-;;;;;;:::i;:::-;;:::i;16646:689:65:-;;;;;;:::i;:::-;;:::i;1743:354:60:-;;;:::i;24357:646:65:-;;;;;;:::i;:::-;;:::i;6300:418:60:-;;;:::i;9664:427:65:-;;;;;;:::i;:::-;;:::i;15739:273:60:-;;;:::i;21468:318:65:-;;;;;;:::i;:::-;;:::i;15195:448:60:-;;;:::i;27570:564::-;;;:::i;1572:26:0:-;;;;;;;;;23363:825:60;;;:::i;12725:535::-;12781:61;;;;;;;;;12798:5;12781:61;-1:-1:-1;;;;;12781:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12805:3;12781:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;12781:61:60;3711:5:65;3753:16;:::i;:::-;12837:4:60;12781:16;:61::i;:::-;12853:16;;12892:5;;12853:45;;-1:-1:-1;;;12853:45:60;;-1:-1:-1;;;;;12892:5:60;;;12853:16;:45;;8544:51:115;12853:16:60;;;:22;;12883:7;;8517:18:115;;12853:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12908:18:60;;12958:5;;12908:62;;-1:-1:-1;;;12908:62:60;;-1:-1:-1;;;;;12908:18:60;;;;-1:-1:-1;12908:31:60;;-1:-1:-1;12947:9:60;;-1:-1:-1;12908:62:60;;12958:5;;;;12965:4;;12908:18;:62;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12988:15:60;;12980:24;;-1:-1:-1;;;12980:24:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;12980:7:60;;-1:-1:-1;12980:24:60;;-1:-1:-1;12980:24:60;;8752:25:115;;;8740:2;8725:18;;8606:177;12980:24:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13044:151:60;;;13133:15;13044:151;;;19870:25:115;;;19911:18;;;;19904:34;;;;13044:151:60;;;;;;;;;;19843:18:115;;;;13044:151:60;;;;;;;-1:-1:-1;;;;;13044:151:60;-1:-1:-1;;;13044:151:60;;;13015:190;;-1:-1:-1;;;13015:190:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;13015:15:60;;-1:-1:-1;13015:190:60;;13044:151;13015:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13215:16:60;;13236:5;;13215:38;;-1:-1:-1;;;13215:38:60;;-1:-1:-1;;;;;13215:16:60;;;;-1:-1:-1;13215:20:60;;-1:-1:-1;13215:38:60;;13236:5;;;;13243:9;;13215:16;:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12725:535::o;20914:548:65:-;21199:15;;21332:7;;21171:284;;21101:34;;-1:-1:-1;;;;;21199:15:65;;;;:40;;21171:284;;21271:6;;21295:11;;21332:7;;;21358:4;;21380:8;;21406:25;;21171:284;;;:::i;:::-;;;;-1:-1:-1;;21171:284:65;;;;;;;;;;;;;;-1:-1:-1;;;;;21171:284:65;;;;;;;;;;;;;;20914:548;-1:-1:-1;;;;;;20914:548:65:o;2103:290:60:-;2156:61;;;;;;;;;2173:5;2156:61;-1:-1:-1;;;;;2156:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:3;2156:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;2156:61:60;3711:5:65;3753:16;:::i;2156:61:60:-;2228:18;;2269:5;;2228:47;;-1:-1:-1;;;2228:47:60;;-1:-1:-1;;;;;2269:5:60;;;2228:18;:47;;8544:51:115;2228:18:60;;;:24;;2260:7;;8517:18:115;;2228:47:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2286:45;2304:14;2320:10;2286:17;:45::i;:::-;2341:16;;2380:5;;2341:45;;-1:-1:-1;;;2341:45:60;;-1:-1:-1;;;;;2380:5:60;;;2341:16;:45;;8544:51:115;2341:16:60;;;:22;;2371:7;;8517:18:115;;2341:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2103:290::o;18565:588:65:-;18752:44;18767:6;18775;18783:12;18752:14;:44::i;:::-;18806:15;;;;18852:11;;18877;;18806:144;;-1:-1:-1;;;18806:144:65;;-1:-1:-1;;;;;18806:32:65;;;;;;:144;;18852:11;;18902:1;;18917:7;;18806:144;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18980:5:65;;18960:37;;-1:-1:-1;18972:6:65;;-1:-1:-1;;;;;;18980:5:65;18987:9;18960:11;:37::i;:::-;19027:9;;19007:41;;19019:6;;-1:-1:-1;;;;;19027:9:65;19038;19007:11;:41::i;:::-;19078:5;;19058:37;;19070:6;;-1:-1:-1;;;;;19078:5:65;19085:9;19058:11;:37::i;:::-;19125:9;;19105:41;;19117:6;;-1:-1:-1;;;;;19125:9:65;19136;19105:11;:41::i;205:246:60:-;239:15;:13;:15::i;:::-;272:17;282:3;287:1;272:9;:17::i;:::-;264:25;;:5;:25;;-1:-1:-1;;;;;;264:25:60;;;-1:-1:-1;;;;;264:25:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:17;315:3;264:25;305:9;:17::i;:::-;299:23;;:3;:23;;-1:-1:-1;;;;;;299:23:60;;;-1:-1:-1;;;;;299:23:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;333:37;;-1:-1:-1;;;333:37:60;;350:4;299:23;333:37;;23172:51:115;23239:18;;;23232:30;23298:2;23278:18;;;23271:30;-1:-1:-1;;;23317:18:115;;;23310:40;-1:-1:-1;;;;;;;;;;;1671:64:0;333:8:60;;23367:19:115;;333:37:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;389:5:60;:10;380:29;;;-1:-1:-1;;;380:29:60;;-1:-1:-1;;;;;389:10:60;;;380:29;;;23609:51:115;23676:18;;;23669:30;23735:1;23715:18;;;23708:29;-1:-1:-1;;;23753:18:115;;;23746:35;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;380:8:60;;-1:-1:-1;23798:19:115;;380:29:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;428:3:60;:8;419:25;;;-1:-1:-1;;;419:25:60;;-1:-1:-1;;;;;428:8:60;;;419:25;;;24040:51:115;24107:18;;;24100:30;24166:1;24146:18;;;24139:29;-1:-1:-1;;;24184:18:115;;;24177:33;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;419:8:60;;-1:-1:-1;24227:19:115;;419:25:60;23828:424:115;28140:602:60;28201:61;;;;;;;;;28218:5;28201:61;-1:-1:-1;;;;;28201:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28225:3;28201:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;28201:61:60;3711:5:65;3753:16;:::i;28201:61:60:-;28272:32;;;;;;;;;28293:5;28272:32;-1:-1:-1;;;;;28272:32:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28300:3;28272:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:20;:32::i;:::-;28391:9;;28415:3;:8;28315:26;;28344:105;;-1:-1:-1;;;;;28391:9:60;;;;28415:8;28437:2;28344:25;:105::i;:::-;28481:14;;;28493:1;28481:14;;;;;;;;;28315:134;;-1:-1:-1;28459:19:60;;28481:14;;;;;;;;;;;;;;;;;;;;;28459:36;;28515:13;28505:4;28510:1;28505:7;;;;;;;;:::i;:::-;;;;;;;;;;:23;28659:9;;28568:115;;-1:-1:-1;;;;;28659:9:60;;;28568:115;;;8544:51:115;-1:-1:-1;;;;;;;;;;;1671:64:0;28539:15:60;;-1:-1:-1;;;28608:25:60;8517:18:115;;28568:115:60;;;-1:-1:-1;;28568:115:60;;;;;;;;;;;;;;-1:-1:-1;;;;;28568:115:60;-1:-1:-1;;;;;;28568:115:60;;;;;;28539:154;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;28703:16:60;;:32;;-1:-1:-1;;;28703:32:60;;-1:-1:-1;;;;;28703:16:60;;;;-1:-1:-1;28703:26:60;;-1:-1:-1;28703:32:60;;28730:4;;28703:16;:32;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;28703:32:60;;;;;;;;;;;;:::i;:::-;;28191:551;;28140:602::o;1351:116:1:-;1414:18;;-1:-1:-1;;;1414:18:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1414:7:1;;:18;;1422:3;;1427:4;;1414:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1442:18:1;;-1:-1:-1;;;1442:18:1;;-1:-1:-1;;;;;8562:32:115;;1442:18:1;;;8544:51:115;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1442:13:1;;-1:-1:-1;8517:18:115;;1442::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1351:116;;:::o;22694:257:65:-;22799:135;;-1:-1:-1;;;;;;;;;;;1671:64:0;22770:15:65;;-1:-1:-1;;;22839:29:65;22799:135;;22886:9;;22913:7;;22799:135;;;:::i;:::-;;;;-1:-1:-1;;22799:135:65;;;;;;;;;;;;;;-1:-1:-1;;;;;22799:135:65;-1:-1:-1;;;;;;22799:135:65;;;;;;22770:174;;;;;;;;;;;;;;;:::i;24876:634:60:-;24944:61;;;;;;;;;24961:5;24944:61;-1:-1:-1;;;;;24944:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24968:3;24944:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;24944:61:60;3711:5:65;3753:16;:::i;24944:61:60:-;25015:37;;;;;;;;;25041:5;25015:37;-1:-1:-1;;;;;25015:37:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25048:3;25015:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;:37::i;:::-;25153:9;;25177:3;:8;25063:33;;25099:111;;-1:-1:-1;;;;;25153:9:60;;;;25177:8;25199:1;25099:32;:111::i;15337:349:65:-;15464:9;;15436:243;;15386:24;;-1:-1:-1;;;;;15464:9:65;;:21;;15436:243;;3711:5;;15547:7;;15572:18;;15608:20;;15646:9;;15436:243;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15436:243:65;;;;;;;;;;;15422:257;;15337:349;:::o;24194:676:60:-;24253:62;;;;;;;;;24270:5;24253:62;-1:-1:-1;;;;;24253:62:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24277:3;24253:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;;24253:62:60;:16;:62::i;:::-;24337:5;;24325:21;;-1:-1:-1;;;;;24337:5:60;24344:1;24325:11;:21::i;:::-;24356:16;;24380:5;;24356:41;;-1:-1:-1;;;24356:41:60;;-1:-1:-1;;;;;24356:16:60;;;;:23;;:41;;24380:5;;;24387:9;;24356:16;:41;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24490:5:60;;24509:3;:8;24408:33;;-1:-1:-1;24444:98:60;;-1:-1:-1;;;;;;24490:5:60;;;;24509:8;24531:1;24444:32;:98::i;:::-;24574:14;;;24586:1;24574:14;;;;;;;;;24408:134;;-1:-1:-1;24552:19:60;;24574:14;;;;;;;;;;;;;;;;;;;;;24552:36;;24608:20;24598:4;24603:1;24598:7;;;;;;;;:::i;:::-;;;;;;;;;;:30;24639:16;;:32;;-1:-1:-1;;;24639:32:60;;-1:-1:-1;;;;;24639:16:60;;;;:26;;:32;;24666:4;;24639:16;:32;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;24639:32:60;;;;;;;;;;;;:::i;:::-;-1:-1:-1;24699:7:60;;24718:3;:8;24690:40;;-1:-1:-1;;;24690:40:60;;24681:54;;-1:-1:-1;;;;;24699:7:60;;;;24690:27;;:40;;24718:8;;;;24699:7;;24690:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24732:2;24681:8;:54::i;:::-;24763:7;;24782:3;:8;24754:40;;-1:-1:-1;;;24754:40:60;;24745:54;;-1:-1:-1;;;;;24763:7:60;;;;24754:27;;:40;;24782:8;;;;24792:1;;24754:40;;;:::i;24745:54::-;24827:7;;24846:3;:8;24818:40;;-1:-1:-1;;;24818:40:60;;24809:54;;-1:-1:-1;;;;;24827:7:60;;;;24818:27;;:40;;24846:8;;;;24856:1;;24818:40;;;:::i;24809:54::-;24243:627;;24194:676::o;698:96:1:-;742:22;;-1:-1:-1;;;742:22:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;742:7:1;;:22;;750:3;;-1:-1:-1;;;755:8:1;742:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;774:13:1;;-1:-1:-1;;;774:13:1;;-1:-1:-1;;;;;8562:32:115;;774:13:1;;;8544:51:115;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;774:8:1;;-1:-1:-1;8517:18:115;;774:13:1;;;;;;;;;;;;;;;;;;;;21465:625:60;21528:61;;;;;;;;;21545:5;21528:61;-1:-1:-1;;;;;21528:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21552:3;21528:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;21528:61:60;3711:5:65;3753:16;:::i;21528:61:60:-;21599:32;;;;;;;;;21620:5;21599:32;-1:-1:-1;;;;;21599:32:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21627:3;21599:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:20;:32::i;:::-;21722:9;;21746:3;:8;21642:28;;21673:122;;-1:-1:-1;;;;;21722:9:60;;;;21746:8;21722:9;21783:2;21673:27;:122::i;14743:446::-;14799:61;;;;;;;;;14816:5;14799:61;-1:-1:-1;;;;;14799:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14823:3;14799:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;14799:61:60;3711:5:65;3753:16;:::i;14799:61:60:-;14871:16;;14910:5;;14871:45;;-1:-1:-1;;;14871:45:60;;-1:-1:-1;;;;;14910:5:60;;;14871:16;:45;;8544:51:115;14871:16:60;;;:22;;14901:7;;8517:18:115;;14871:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14926:18:60;;14976:5;;14926:62;;-1:-1:-1;;;14926:62:60;;-1:-1:-1;;;;;14926:18:60;;;;-1:-1:-1;14926:31:60;;-1:-1:-1;14965:9:60;;-1:-1:-1;14926:62:60;;14976:5;;;;14983:4;;14926:18;:62;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15006:15:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;14998:7:60;;-1:-1:-1;15006:19:60;;-1:-1:-1;15024:1:60;15006:19;:::i;:::-;14998:28;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;14998:28:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15036:16:60;;15057:5;;15036:38;;-1:-1:-1;;;15036:38:60;;-1:-1:-1;;;;;15036:16:60;;;;-1:-1:-1;15036:20:60;;-1:-1:-1;15036:38:60;;15057:5;;;;15064:9;;15036:16;:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15085:48;15103:13;15118:14;15085:17;:48::i;:::-;15143:16;;15165:5;;15143:39;;-1:-1:-1;;;15143:39:60;;-1:-1:-1;;;;;15143:16:60;;;;:21;;:39;;15165:5;;;15172:9;;15143:16;:39;;:::i;912:120:1:-;972:22;;-1:-1:-1;;;972:22:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;972:7:1;;:22;;980:3;;-1:-1:-1;;;985:8:1;972:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1004:21:1;;-1:-1:-1;;;1004:21:1;;-1:-1:-1;;;;;33829:15:115;;;1004:21:1;;;33811:34:115;33881:15;;33861:18;;;33854:43;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1004:8:1;;-1:-1:-1;33746:18:115;;1004:21:1;33599:304:115;3689:287:1;3849:16;;-1:-1:-1;;;3849:16:1;;3780:12;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;3849:10:1;;:16;;3860:4;;3849:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3849:16:1;;;;;;;;;;;;:::i;:::-;3867:4;3832:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3808:64;;3950:8;3944:15;3937:4;3927:8;3923:19;3920:1;3913:47;3905:55;3689:287;-1:-1:-1;;;;3689:287:1:o;22399:172:65:-;22529:5;;22556:7;;22520:44;;-1:-1:-1;;;22520:44:65;;22490:7;;-1:-1:-1;;;;;22529:5:65;;22520:25;;:44;;22546:8;;22520:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22513:51;22399:172;-1:-1:-1;;22399:172:65:o;550:85:1:-;-1:-1:-1;;;;;;;;;;;597:7:1;605:22;623:4;605:15;:22;:::i;:::-;597:31;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;10751:517:60;10797:61;;;;;;;;;10814:5;10797:61;-1:-1:-1;;;;;10797:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10821:3;10797:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;10797:61:60;3711:5:65;3753:16;:::i;10797:61:60:-;10869:16;;10908:5;;10869:45;;-1:-1:-1;;;10869:45:60;;-1:-1:-1;;;;;10908:5:60;;;10869:16;:45;;8544:51:115;10869:16:60;;;:22;;10899:7;;8517:18:115;;10869:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10924:18:60;;10957:5;;10924:45;;-1:-1:-1;;;10924:45:60;;-1:-1:-1;;;;;10924:18:60;;;;-1:-1:-1;10924:32:60;;-1:-1:-1;10924:45:60;;-1:-1:-1;10957:5:60;;;10964:4;;10924:18;:45;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10987:15:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;10979:7:60;;-1:-1:-1;10987:19:60;;11005:1;10987:19;:::i;:::-;10979:28;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;10979:28:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11046:3:60;:8;11018:41;;-1:-1:-1;11027:28:60;;-1:-1:-1;;;;;;11046:8:60;11027:18;:28::i;:::-;11057:1;11018:8;:41::i;:::-;11097:6;;11069:42;;11078:26;;-1:-1:-1;;;;;11097:6:60;11078:18;:26::i;:::-;11106:4;11069:8;:42::i;:::-;11122:16;;11143:5;;11122:38;;-1:-1:-1;;;11122:38:60;;-1:-1:-1;;;;;11122:16:60;;;;:20;;:38;;11143:5;;;11150:9;;11122:16;:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11199:3:60;:8;11171:41;;-1:-1:-1;11180:28:60;;-1:-1:-1;;;;;;11199:8:60;11180:18;:28::i;11171:41::-;11250:6;;11222:39;;11231:26;;-1:-1:-1;;;;;11250:6:60;11231:18;:26::i;11222:39::-;10751:517::o;7410:896:65:-;7470:9;;7449:7;:10;;-1:-1:-1;;;;;7470:9:65;;;;;;7449:10;;;;:::i;:::-;;;;;;;;;;:31;;-1:-1:-1;;;;;;7449:31:65;-1:-1:-1;;;;;7449:31:65;;;;;;7511:12;;7490:7;:10;;7511:12;;;;;7490:7;-1:-1:-1;;7490:10:65;;;;;;:::i;:::-;;;;;;;;;:34;;-1:-1:-1;;;;;;7490:34:65;-1:-1:-1;;;;;7490:34:65;;;;;;7547:9;;:24;;;-1:-1:-1;;;7547:24:65;;;;:9;;;;;:22;;:24;;;;;7490:10;;7547:24;;;;;:9;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7547:24:65;;;;;;;;;;;;:::i;:::-;7572:1;7547:27;;;;;;;;:::i;:::-;;;;;;;7535:6;7542:1;7535:9;;;;;;;;:::i;:::-;;;;;;;;;:39;;;;7596:12;;:27;;;-1:-1:-1;;;7596:27:65;;;;-1:-1:-1;;;;;7596:12:65;;;;:25;;:27;;;;;;;;;;:12;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7596:27:65;;;;;;;;;;;;:::i;:::-;7624:1;7596:30;;;;;;;;:::i;:::-;;;;;;;7584:6;7591:1;7584:9;;;;;;;;:::i;:::-;;;;;;;;;:42;;;;7648:12;;:27;;;-1:-1:-1;;;7648:27:65;;;;-1:-1:-1;;;;;7648:12:65;;;;:25;;:27;;;;;;;;;;:12;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7648:27:65;;;;;;;;;;;;:::i;:::-;7676:1;7648:30;;;;;;;;:::i;:::-;;;;;;;7636:6;7643:1;7636:9;;;;;;;;:::i;:::-;;;;;;;;;:42;;;;7700:12;;:27;;;-1:-1:-1;;;7700:27:65;;;;-1:-1:-1;;;;;7700:12:65;;;;:25;;:27;;;;;;;;;;:12;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7700:27:65;;;;;;;;;;;;:::i;:::-;7728:1;7700:30;;;;;;;;:::i;:::-;;;;;;;7688:6;7695:1;7688:9;;;;;;;;:::i;:::-;;;;;;;;;:42;;;;7752:12;;:27;;;-1:-1:-1;;;7752:27:65;;;;-1:-1:-1;;;;;7752:12:65;;;;:25;;:27;;;;;;;;;;:12;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7752:27:65;;;;;;;;;;;;:::i;:::-;7780:1;7752:30;;;;;;;;:::i;:::-;;;;;;;7740:6;7747:1;7740:9;;;;;;;;:::i;:::-;;;;;;;;;:42;;;;7804:12;;:27;;;-1:-1:-1;;;7804:27:65;;;;-1:-1:-1;;;;;7804:12:65;;;;:25;;:27;;;;;;;;;;:12;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7804:27:65;;;;;;;;;;;;:::i;:::-;7832:1;7804:30;;;;;;;;:::i;:::-;;;;;;;7792:6;7799:1;7792:9;;;;;;;;:::i;:::-;;;;;;;;;;:42;7858:9;;:37;;-1:-1:-1;;;7858:37:65;;-1:-1:-1;;;;;7858:9:65;;;;:28;;:37;;7887:7;;7858:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7858:37:65;;;;;;;;;;;;:::i;:::-;7845:50;;;;:10;;:50;;;;;;:::i;:::-;-1:-1:-1;7918:9:65;;:29;;-1:-1:-1;;;7918:29:65;;-1:-1:-1;;;;;7918:9:65;;;;:17;;:29;;7936:10;;7918:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7905:10;:42;7969:9;;:29;;-1:-1:-1;;;7969:29:65;;-1:-1:-1;;;;;7969:9:65;;;;:18;;:29;;7988:6;;7969:9;;:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7969:29:65;;;;;;;;;;;;:::i;:::-;7957:41;;;;:9;;:41;;;;;;:::i;:::-;-1:-1:-1;8020:9:65;;:29;;-1:-1:-1;;;8020:29:65;;-1:-1:-1;;;;;8020:9:65;;;;:18;;:29;;8039:6;;8020:9;;:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8020:29:65;;;;;;;;;;;;:::i;:::-;8008:41;;;;:9;;:41;;;;;;:::i;:::-;-1:-1:-1;8080:9:65;;:29;;-1:-1:-1;;;8080:29:65;;-1:-1:-1;;;;;8080:9:65;;;;:18;;:29;;8099:6;;8107:1;;8080:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8080:29:65;;;;;;;;;;;;:::i;:::-;8059:50;;;;:18;;:50;;;;;;:::i;:::-;-1:-1:-1;8141:9:65;;:29;;-1:-1:-1;;;8141:29:65;;-1:-1:-1;;;;;8141:9:65;;;;:18;;:29;;8160:6;;8168:1;;8141:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8141:29:65;;;;;;;;;;;;:::i;:::-;8119:51;;;;:19;;:51;;;;;;:::i;:::-;-1:-1:-1;8203:9:65;;:29;;-1:-1:-1;;;8203:29:65;;-1:-1:-1;;;;;8203:9:65;;;;:18;;:29;;8222:6;;8230:1;;8203:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8203:29:65;;;;;;;;;;;;:::i;:::-;8180:52;;;;:20;;:52;;;;;;:::i;:::-;-1:-1:-1;8270:9:65;;:29;;-1:-1:-1;;;8270:29:65;;-1:-1:-1;;;;;8270:9:65;;;;:18;;:29;;8289:6;;8297:1;;8270:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8270:29:65;;;;;;;;;;;;:::i;:::-;8242:57;;;;:25;;:57;;;;;;:::i;:::-;;7410:896::o;12669:413::-;12767:13;;;;12798:11;;12811:5;;12767:53;;-1:-1:-1;;;12767:53:65;;-1:-1:-1;;;;;12767:30:65;;;;;;:53;;12798:11;;12811:5;;;12818:1;;12767:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;12830:19:65;;;;12872:5;;12830:48;;-1:-1:-1;;;12830:48:65;;-1:-1:-1;;;;;12872:5:65;;;12830:48;;;8544:51:115;12830:25:65;;;;;12863:7;;8517:18:115;;12830:48:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;12888:19:65;;;;12922:5;;12888:46;;-1:-1:-1;;;12888:46:65;;-1:-1:-1;;;;;12888:33:65;;;;-1:-1:-1;12888:33:65;;:46;;12922:5;;12929:4;;12888:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12952:15:65;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;12944:7:65;;-1:-1:-1;12952:19:65;;12970:1;12952:19;:::i;:::-;12944:28;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;12944:28:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12982:19:65;;;;13006:5;;12982:41;;-1:-1:-1;;;12982:41:65;;-1:-1:-1;;;;;12982:23:65;;;;-1:-1:-1;12982:23:65;;:41;;13006:5;;13013:9;;12982:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13033:19:65;;;;13058:5;;13033:42;;-1:-1:-1;;;13033:42:65;;-1:-1:-1;;;;;13033:24:65;;;;-1:-1:-1;13033:24:65;;:42;;13058:5;;13065:9;;13033:42;;;:::i;12492:227:60:-;12547:61;;;;;;;;;12564:5;12547:61;-1:-1:-1;;;;;12547:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12571:3;12547:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;12547:61:60;3711:5:65;3753:16;:::i;12547:61:60:-;12619:45;12637:10;12649:14;12619:17;:45::i;:::-;12674:16;;12695:5;;12674:38;;-1:-1:-1;;;12674:38:60;;-1:-1:-1;;;;;12674:16:60;;;;:20;;:38;;12695:5;;;12702:9;;12674:16;:38;;:::i;3216:680::-;3262:61;;;;;;;;;3279:5;3262:61;-1:-1:-1;;;;;3262:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3286:3;3262:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;3262:61:60;3711:5:65;3753:16;:::i;3262:61:60:-;3334:16;;3373:5;;3334:45;;-1:-1:-1;;;3334:45:60;;-1:-1:-1;;;;;3373:5:60;;;3334:16;:45;;8544:51:115;3334:16:60;;;:22;;3364:7;;8517:18:115;;3334:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3418:5:60;:10;3390:53;;-1:-1:-1;3399:30:60;;-1:-1:-1;;;;;;3418:10:60;;-1:-1:-1;3399:18:60;:30::i;:::-;3753:16:65;3768:1;3711:5;3753:16;:::i;:::-;3390:8:60;:53::i;:::-;3481:6;;3453:49;;3462:26;;-1:-1:-1;;;;;3481:6:60;3462:18;:26::i;3453:49::-;3535:5;:10;3512:52;;-1:-1:-1;;;;;3535:10:60;22665:16:65;3521:25:60;3664:9:65;3512:8:60;:52::i;:::-;3597:6;;3574:40;;-1:-1:-1;;;;;3597:6:60;22665:16:65;3583:21:60;3606:7;3574:8;:40::i;:::-;3625:18;;3658:5;;3625:45;;-1:-1:-1;;;3625:45:60;;-1:-1:-1;;;;;3625:18:60;;;;:32;;:45;;3658:5;;;3665:4;;3625:18;:45;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3709:5:60;:10;3681:46;;-1:-1:-1;3690:30:60;;-1:-1:-1;;;;;;3709:10:60;3690:18;:30::i;:::-;3722:4;3681:8;:46::i;:::-;3765:6;;3737:42;;3746:26;;-1:-1:-1;;;;;3765:6:60;3746:18;:26::i;3737:42::-;3812:5;:10;3789:48;;-1:-1:-1;;;;;3812:10:60;22665:16:65;3798:25:60;3825:11;3789:8;:48::i;:::-;3870:6;;3847:42;;-1:-1:-1;;;;;3870:6:60;22665:16:65;3856:21:60;3879:9;3847:8;:42::i;17341:636:65:-;17495:16;;;17509:1;17495:16;;;;;;;;;17419:15;;;;17468:24;;17495:16;;;17419:15;;17495:16;;;-1:-1:-1;;17549:15:65;;;17562:1;17549:15;;;;;;;;;17468:43;;-1:-1:-1;17521:25:65;;17549:15;-1:-1:-1;17549:15:65;;;;;;;;-1:-1:-1;;17636:8:65;;17576:10;;17521:43;;-1:-1:-1;;;;;;17636:8:65;;;;-1:-1:-1;17636:8:65;;17576:10;;17636:8;;17576:10;;;;:::i;:::-;;;;;;17588:7;17596:1;17588:10;;;;;;;;:::i;:::-;;;;;;17600:7;17608:1;17600:10;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17575:142:65;;;17600:10;;;;;;;;;17575:142;;;;;;;;;;;;;17728:12;;-1:-1:-1;;;17786:35:65;-1:-1:-1;;;17835:40:65;-1:-1:-1;;;17889:34:65;17728:9;;17738:1;;17728:12;;;;:::i;:::-;;;;;;17742:9;17752:1;17742:12;;;;;;;;:::i;:::-;;;;;;17756:9;17766:1;17756:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;17727:206:65;;;17756:12;;;;;;;;;17727:206;;;;;;;;;;;;;17951:9;17962:7;;-1:-1:-1;17341:636:65;-1:-1:-1;17341:636:65:o;9008:462:60:-;9062:61;;;;;;;;;9079:5;9062:61;-1:-1:-1;;;;;9062:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9086:3;9062:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;9062:61:60;3711:5:65;3753:16;:::i;9062:61:60:-;9134:16;;9173:5;;9134:45;;-1:-1:-1;;;9134:45:60;;-1:-1:-1;;;;;9173:5:60;;;9134:16;:45;;8544:51:115;9134:16:60;;;:22;;9164:7;;8517:18:115;;9134:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9310:9:60;;9219:115;;;-1:-1:-1;;;;;9310:9:60;;;9219:115;;;;8544:51:115;;;;9219:115:60;;;;;;;;;;8517:18:115;;;;9219:115:60;;;;;;;-1:-1:-1;;;;;9219:115:60;-1:-1:-1;;;9219:115:60;;;9190:154;-1:-1:-1;;;9190:154:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;9190:15:60;;-1:-1:-1;9190:154:60;;-1:-1:-1;9190:154:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9354:18:60;;9425:9;;9354:109;;-1:-1:-1;;;9354:109:60;;-1:-1:-1;;;;;9354:18:60;;;;-1:-1:-1;9354:31:60;;-1:-1:-1;9393:9:60;;9354:109;;9425:9;;9449:4;;9354:18;:109;;:::i;17791:712::-;17844:62;;;;;;;;;17861:5;17844:62;-1:-1:-1;;;;;17844:62:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17868:3;17844:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;;17844:62:60;:16;:62::i;:::-;17916:10;;:3;17944:8;17954:5;;17916:47;;-1:-1:-1;;;17916:47:60;;-1:-1:-1;;;;;17916:10:60;;;;:27;;:47;;17944:8;;;;17954:5;;;17961:1;;17916:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17973:16:60;;17997:5;;17973:41;;-1:-1:-1;;;17973:41:60;;-1:-1:-1;;;;;17973:16:60;;;;-1:-1:-1;17973:23:60;;-1:-1:-1;17973:41:60;;17997:5;;;;18004:9;;17973:16;:41;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18095:5:60;;18114:3;:8;18025:27;;-1:-1:-1;18055:92:60;;-1:-1:-1;;;;;;18095:5:60;;;;18114:8;18095:5;18055:26;:92::i;:::-;18228:5;;18247:3;:8;18025:122;;-1:-1:-1;18157:28:60;;18188:92;;-1:-1:-1;;;;;18228:5:60;;;;18247:8;18269:1;18188:26;:92::i;:::-;18312:14;;;18324:1;18312:14;;;;;;;;;18157:123;;-1:-1:-1;18290:19:60;;18312:14;;;;;;;;;;;;;;;;;;;;;18290:36;;18346:14;18336:4;18341:1;18336:7;;;;;;;;:::i;:::-;;;;;;:24;;;;18380:15;18370:4;18375:1;18370:7;;;;;;;;:::i;:::-;;;;;;;;;;:25;18406:16;;:32;;-1:-1:-1;;;18406:32:60;;-1:-1:-1;;;;;18406:16:60;;;;:26;;:32;;18433:4;;18406:16;:32;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18406:32:60;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18465:6:60;;18483:3;:8;18457:35;;-1:-1:-1;;;18457:35:60;;-1:-1:-1;;;;;18483:8:60;;;18457:35;;;8544:51:115;18448:48:60;;18465:6;;;;;18457:25;;8517:18:115;;18457:35:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18494:1;18448:8;:48::i;9742:536::-;9804:61;;;;;;;;;9821:5;9804:61;-1:-1:-1;;;;;9804:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9828:3;9804:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;9804:61:60;3711:5:65;3753:16;:::i;9804:61:60:-;9876:16;;9915:5;;9876:45;;-1:-1:-1;;;9876:45:60;;-1:-1:-1;;;;;9915:5:60;;;9876:16;:45;;8544:51:115;9876:16:60;;;:22;;9906:7;;8517:18:115;;9876:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9939:15:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;9931:7:60;;-1:-1:-1;9939:19:60;;-1:-1:-1;9957:1:60;9939:19;:::i;:::-;9931:28;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;9931:28:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9969:16;10006:1;9988:15;:19;;;;:::i;:::-;10047:141;;;10133:15;10047:141;;;19870:25:115;19911:18;;;;19904:34;;;10047:141:60;;;;;;;;;;19843:18:115;;;;10047:141:60;;;;;;;-1:-1:-1;;;;;10047:141:60;-1:-1:-1;;;10047:141:60;;;10018:180;;-1:-1:-1;;;10018:180:60;;19904:34:115;;-1:-1:-1;;;;;;;;;;;;1671:64:0;10018:15:60;;:180;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10209:18:60;;10259:5;;10209:62;;-1:-1:-1;;;10209:62:60;;-1:-1:-1;;;;;10209:18:60;;;;-1:-1:-1;10209:31:60;;-1:-1:-1;10248:9:60;;10209:62;;10259:5;;10266:4;;10209:18;:62;;:::i;:::-;;;;;;;;;;;;;;;;;;;;27004:560;27050:61;;;;;;;;;27067:5;27050:61;-1:-1:-1;;;;;27050:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27074:3;27050:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;27050:61:60;3711:5:65;3753:16;:::i;27050:61:60:-;27121:30;;;;;;;;;27140:5;27121:30;-1:-1:-1;;;;;27121:30:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27147:3;27121:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:30::i;:::-;27230:5;;27249:3;:8;27162:26;;27191:92;;-1:-1:-1;;;;;27230:5:60;;;;27249:8;27271:2;27191:25;:92::i;:::-;27315:14;;;27327:1;27315:14;;;;;;;;;27162:121;;-1:-1:-1;27293:19:60;;27315:14;;;;;;;;;;;;;;;;;;;;;27293:36;;27349:13;27339:4;27344:1;27339:7;;;;;;;;:::i;:::-;;;;;;;;;;:23;27379:5;;27396;;27372:30;;-1:-1:-1;;;27372:30:60;;-1:-1:-1;;;;;27396:5:60;;;27372:30;;;8544:51:115;27379:5:60;;;27372:23;;8517:18:115;;27372:30:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27428:5:60;;27445:3;:8;27421:33;;-1:-1:-1;;;27421:33:60;;-1:-1:-1;;;;;27445:8:60;;;27421:33;;;8544:51:115;27412:46:60;;27428:5;;;;;27421:23;;8517:18:115;;27421:33:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;27412:46::-;27468:16;;:32;;-1:-1:-1;;;27468:32:60;;-1:-1:-1;;;;;27468:16:60;;;;:26;;:32;;27495:4;;27468:16;:32;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27468:32:60;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27526:5:60;;27543:3;:8;27519:33;;-1:-1:-1;;;27519:33:60;;-1:-1:-1;;;;;27543:8:60;;;27519:33;;;8544:51:115;27510:47:60;;27526:5;;;;;27519:23;;8517:18:115;;27519:33:60;8398:203:115;1722:140:1;1801:18;;-1:-1:-1;;;1801:18:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1801:7:1;;:18;;1809:3;;1814:4;;1801:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1829:26:1;;-1:-1:-1;;;1829:26:1;;-1:-1:-1;;;;;33829:15:115;;;1829:26:1;;;33811:34:115;33881:15;;33861:18;;;33854:43;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1829:13:1;;-1:-1:-1;33746:18:115;;1829:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1722:140;;;:::o;13476:177:65:-;13560:1;13543:104;13568:6;13563:1;:11;13543:104;;13607:7;;13595:41;;-1:-1:-1;;;13595:41:65;;-1:-1:-1;;;;;39618:32:115;;;13595:41:65;;;39600:51:115;39667:18;;;39660:34;;;13629:2:65;39710:18:115;;;39703:34;39773:3;39753:18;;;39746:31;-1:-1:-1;39793:19:115;;;39786:30;13607:7:65;;;;13595:25;;39833:19:115;;13595:41:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13576:3;;;;;:::i;:::-;;;;13543:104;;19701:509:60;19764:61;;;;;;;;;19781:5;19764:61;-1:-1:-1;;;;;19764:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19788:3;19764:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;19764:61:60;3711:5:65;3753:16;:::i;19764:61:60:-;19835:31;;;;;;;;;19855:5;19835:31;-1:-1:-1;;;;;19835:31:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19862:3;19835:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;:31::i;:::-;19947:5;;19966;:10;19877:27;;19907:94;;-1:-1:-1;;;;;19947:5:60;;;;19966:10;19947:5;19907:26;:94::i;:::-;20033:14;;;20045:1;20033:14;;;;;;;;;19877:124;;-1:-1:-1;20011:19:60;;20033:14;;;;;;;;;;;;;;;;;;;;;20011:36;;20067:14;20057:4;20062:1;20057:7;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;;20108:50;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20108:50:60;-1:-1:-1;;;20108:50:60;;;20092:67;;-1:-1:-1;;;20092:67:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;20092:15:60;;:67;;20108:50;;20092:67;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20169:18:60;;:34;;-1:-1:-1;;;20169:34:60;;-1:-1:-1;;;;;20169:18:60;;;;-1:-1:-1;20169:28:60;;-1:-1:-1;20169:34:60;;20198:4;;20169:18;:34;;:::i;2885:220::-;2940:51;;;;;;;;;2957:5;2940:51;-1:-1:-1;;;;;2940:51:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2964:3;2940:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;-1:-1:-1;2940:51:60;:16;:51::i;:::-;4477:47:1;;4519:4;4477:47;;;40156:36:115;-1:-1:-1;;;;;;;;;;;1671:64:0;3002:15:60;;40129:18:115;;4477:47:1;;;-1:-1:-1;;4477:47:1;;;;;;;;;;;;;;-1:-1:-1;;;;;4477:47:1;-1:-1:-1;;;4477:47:1;;;3002:39:60;;;;;-1:-1:-1;;;;;;3002:39:60;;;;;4477:47:1;3002:39:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3051:18:60;;3092:5;;3051:47;;-1:-1:-1;;;3051:47:60;;-1:-1:-1;;;;;3092:5:60;;;3051:18;:47;;8544:51:115;3051:18:60;;;-1:-1:-1;3051:24:60;;-1:-1:-1;3083:7:60;;8517:18:115;;3051:47:60;8398:203:115;11785:590:65;11913:35;11929:6;11937:10;11913:15;:35::i;:::-;11977:8;;11999:5;;11977:28;;-1:-1:-1;;;11977:28:65;;-1:-1:-1;;;;;11999:5:65;;;11977:28;;;8544:51:115;11977:8:65;;;:21;;8517:18:115;;11977:28:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11966:7;11958:47;11959:5;11958:47;;-1:-1:-1;;;;;11958:47:65;;;-1:-1:-1;;;;;;11958:47:65;;;;;;;12033:38;;11959:5;;12060:3;;12033:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12015:56:65;;;:15;;;:56;12131:5;;12099:38;;12122:1;;12126:3;;12131:5;;12099:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12081:56:65;;;:15;;;:56;12165:12;;12148:6;:30;;-1:-1:-1;;;;;;12148:30:65;12165:12;;;;12148:30;;;;;;12205;;;-1:-1:-1;;;12205:30:65;;;;:28;;:30;;;;;;;;;;;;;;;12165:12;12205:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12188:14;:47;12263:12;;:31;;;-1:-1:-1;;;12263:31:65;;;;-1:-1:-1;;;;;12263:12:65;;;;:29;;:31;;;;;;;;;;;;;;;:12;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12245:15;:49;12314:5;;12305:29;;-1:-1:-1;;;12305:29:65;;-1:-1:-1;;;;;;;;;;;1671:64:0;12305:8:65;;:29;;-1:-1:-1;;;;;12314:5:65;;12305:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12353:5:65;;12344:24;;-1:-1:-1;;;12344:24:65;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;12344:8:65;;-1:-1:-1;12344:24:65;;-1:-1:-1;;;;;12353:5:65;;12344:24;;;:::i;13659:387::-;13775:5;;13763:21;;-1:-1:-1;;;;;13775:5:65;13782:1;13763:11;:21::i;:::-;13794:19;;;;13836:5;;13794:48;;-1:-1:-1;;;13794:48:65;;-1:-1:-1;;;;;13836:5:65;;;13794:48;;;8544:51:115;13794:25:65;;;;;13827:7;;8517:18:115;;13794:48:65;8398:203:115;20327:560:60;20375:61;;;;;;;;;20392:5;20375:61;-1:-1:-1;;;;;20375:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20399:3;20375:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;20375:61:60;3711:5:65;3753:16;:::i;20375:61:60:-;20446:32;;;;;;;;;20467:5;20446:32;-1:-1:-1;;;;;20446:32:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20474:3;20446:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:20;:32::i;:::-;20561:5;;20580:3;:8;20489:28;;20520:109;;-1:-1:-1;;;;;20561:5:60;;;;20580:8;20561:5;20617:2;20520:27;:109::i;:::-;20661:14;;;20673:1;20661:14;;;;;;;;;20489:140;;-1:-1:-1;20639:19:60;;20661:14;;;;;;;;;;;;;;;;;;;;;20639:36;;20695:15;20685:4;20690:1;20685:7;;;;;;;;:::i;:::-;;;;;;;;;;:25;20739:7;;20758:3;:8;20730:40;;-1:-1:-1;;;20730:40:60;;20721:53;;-1:-1:-1;;;;;20739:7:60;;;;20730:27;;:40;;20758:8;;;;20739:7;;20730:40;;;:::i;20721:53::-;20784:16;;:32;;-1:-1:-1;;;20784:32:60;;-1:-1:-1;;;;;20784:16:60;;;;:26;;:32;;20811:4;;20784:16;:32;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20784:32:60;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20844:7:60;;20863:3;:8;20835:40;;-1:-1:-1;;;20835:40:60;;20826:54;;-1:-1:-1;;;;;20844:7:60;;;;20835:27;;:40;;20863:8;;;;20844:7;;20835:40;;;:::i;13353:619::-;13390:61;;;;;;;;;13407:5;13390:61;-1:-1:-1;;;;;13390:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13414:3;13390:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;13390:61:60;3711:5:65;3753:16;:::i;13390:61:60:-;13461:27;;;;;;;;;13477:5;13461:27;-1:-1:-1;;;;;13461:27:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13484:3;13461:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:27::i;:::-;13527:5;:10;13499:46;;13508:30;;-1:-1:-1;;;;;13527:10:60;13508:18;:30::i;13499:46::-;13583:6;;13555:39;;13564:26;;-1:-1:-1;;;;;13583:6:60;13564:18;:26::i;13555:39::-;13627:5;:10;13604:48;;-1:-1:-1;;;;;13627:10:60;22665:16:65;13613:25:60;22577:111:65;13604:48:60;13685:6;;13662:42;;-1:-1:-1;;;;;13685:6:60;22665:16:65;13671:21:60;22577:111:65;13662:42:60;13715:18;;13739:5;;13715:41;;-1:-1:-1;;;13715:41:60;;-1:-1:-1;;;;;13715:18:60;;;;:23;;:41;;13739:5;;;13746:9;;13715:18;:41;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13795:5:60;:10;13767:43;;-1:-1:-1;13776:30:60;;-1:-1:-1;;;;;;13795:10:60;13776:18;:30::i;13767:43::-;13848:6;;13820:39;;13829:26;;-1:-1:-1;;;;;13848:6:60;13829:18;:26::i;13820:39::-;13892:5;:10;13869:46;;-1:-1:-1;;;;;13892:10:60;22665:16:65;13905:9:60;13869:8;:46::i;:::-;13948:6;;13925:40;;-1:-1:-1;;;;;13948:6:60;22665:16:65;13934:21:60;22577:111:65;8280:722:60;8340:61;;;;;;;;;8357:5;8340:61;-1:-1:-1;;;;;8340:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8364:3;8340:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;8340:61:60;3711:5:65;3753:16;:::i;8340:61:60:-;8412:16;;8451:5;;8412:45;;-1:-1:-1;;;8412:45:60;;-1:-1:-1;;;;;8451:5:60;;;8412:16;:45;;8544:51:115;8412:16:60;;;:22;;8442:7;;8517:18:115;;8412:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8496:5:60;:10;8468:53;;-1:-1:-1;8477:30:60;;-1:-1:-1;;;;;;8496:10:60;;-1:-1:-1;8477:18:60;:30::i;8468:53::-;8559:6;;8531:49;;8540:26;;-1:-1:-1;;;;;8559:6:60;8540:18;:26::i;8531:49::-;8613:5;:10;8590:52;;-1:-1:-1;;;;;8613:10:60;22665:16:65;8599:25:60;22577:111:65;8590:52:60;8675:6;;8652:40;;-1:-1:-1;;;;;8675:6:60;22665:16:65;8661:21:60;22577:111:65;8652:40:60;8703:18;;8751:5;;8703:57;;-1:-1:-1;;;8703:57:60;;-1:-1:-1;;;;;8703:18:60;;;;:31;;:18;;:57;;8751:5;;;;8703:18;;;:57;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8799:5:60;:10;8771:53;;-1:-1:-1;8780:30:60;;-1:-1:-1;;;;;;8799:10:60;;-1:-1:-1;8780:18:60;:30::i;8771:53::-;8862:6;;8834:49;;8843:26;;-1:-1:-1;;;;;8862:6:60;8843:18;:26::i;8834:49::-;8916:5;:10;8893:52;;-1:-1:-1;;;;;8916:10:60;22665:16:65;8902:25:60;22577:111:65;8893:52:60;8978:6;;8955:40;;-1:-1:-1;;;;;8978:6:60;22665:16:65;8964:21:60;22577:111:65;19845:356;20085:12;;20135:7;;20057:137;;19999:28;;-1:-1:-1;;;;;20085:12:65;;;;:28;;20057:137;;20128:5;;20135:7;;20144:3;;20149;;20154:7;;20163:20;;20057:137;;;:::i;10623:180::-;10735:1;10739:5;:10;;;10751:9;10712:49;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10701:8:65;:60;;-1:-1:-1;;;;;;10701:60:65;-1:-1:-1;;;;;10701:60:65;;;;;;10781:5;;10772:24;;-1:-1:-1;;;10772:24:65;;-1:-1:-1;;;;;;;;;;;1671:64:0;10772:8:65;;:24;;10781:5;;;10772:24;;;:::i;13978:384:60:-;14030:61;;;;;;;;;14047:5;14030:61;-1:-1:-1;;;;;14030:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14054:3;14030:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;14030:61:60;3711:5:65;3753:16;:::i;14030:61:60:-;14101:27;;;;;;;;;14117:5;14101:27;-1:-1:-1;;;;;14101:27:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14124:3;14101:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:27::i;:::-;14259:9;;14168:115;;;-1:-1:-1;;;;;14259:9:60;;;14168:115;;;;8544:51:115;;;;14168:115:60;;;;;;;;;;8517:18:115;;;;14168:115:60;;;;;;;-1:-1:-1;;;;;14168:115:60;-1:-1:-1;;;14168:115:60;;;14139:154;-1:-1:-1;;;14139:154:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;14139:15:60;;:154;;14168:115;14139:154;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14303:16:60;;14333:9;;14303:52;;-1:-1:-1;;;14303:52:60;;-1:-1:-1;;;;;14303:16:60;;;;-1:-1:-1;14303:21:60;;-1:-1:-1;14303:52:60;;14333:9;;;;14345;;14303:16;:52;;:::i;9236:335:65:-;9341:23;:21;:23::i;:::-;9296:68;;9297:20;;;;9296:68;;9319:18;;9296:68;;;;;:::i;:::-;-1:-1:-1;;9296:68:65;;;;;;;;;;:::i;:::-;-1:-1:-1;;9382:8:65;;9414:10;;9438;;9382:142;;-1:-1:-1;;;9382:142:65;;-1:-1:-1;;;;;9382:8:65;;;;-1:-1:-1;9382:18:65;;:142;;9414:10;9438;9462:18;;9494:20;;9382:142;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9374:5;:150;;-1:-1:-1;;;;;;9374:150:65;-1:-1:-1;;;;;9374:150:65;;;;;;;;;9535:29;;-1:-1:-1;;;9535:29:65;;-1:-1:-1;;;;;;;;;;;1671:64:0;9535:8:65;;:29;;9374:150;9535:29;;;:::i;16018:351:60:-;16072:61;;;;;;;;;16089:5;16072:61;-1:-1:-1;;;;;16072:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16096:3;16072:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;16072:61:60;3711:5:65;3753:16;:::i;16072:61:60:-;16264:9;;16173:115;;;-1:-1:-1;;;;;16264:9:60;;;16173:115;;;;8544:51:115;;;;16173:115:60;;;;;;;;;;8517:18:115;;;;16173:115:60;;;;;;;-1:-1:-1;;;;;16173:115:60;-1:-1:-1;;;16173:115:60;;;16144:154;-1:-1:-1;;;16144:154:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;16144:15:60;;:154;;16173:115;16144:154;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16308:16:60;;16340:9;;16308:54;;-1:-1:-1;;;16308:54:60;;-1:-1:-1;;;;;16308:16:60;;;;-1:-1:-1;16308:23:60;;-1:-1:-1;16308:54:60;;16340:9;;;;16352;;16308:16;:54;;:::i;26348:539::-;26417:61;;;;;;;;;26434:5;26417:61;-1:-1:-1;;;;;26417:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26441:3;26417:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;26417:61:60;3711:5:65;3753:16;:::i;26417:61:60:-;26488:37;;;;;;;;;26514:5;26488:37;-1:-1:-1;;;;;26488:37:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26521:3;26488:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;:37::i;:::-;26618:5;;26637;:10;26536:33;;26572:100;;-1:-1:-1;;;;;26618:5:60;;;;26637:10;26661:1;26572:32;:100::i;2501:107:1:-;2573:28;2578:5;2585:2;2589:4;2595:5;2573:4;:28::i;23320:361:65:-;23519:17;;;;;;;;;;;-1:-1:-1;;;23519:17:65;;;;;23569:10;;;;;;;;;;-1:-1:-1;;;23569:10:65;;;;23637:5;;23440:220;;148:101:19;23440:220:65;;;44692:25:115;23509:28:65;44733:18:115;;;44726:34;23559:21:65;44776:18:115;;;44769:34;23602:13:65;44819:18:115;;;44812:34;-1:-1:-1;;;;;23637:5:65;;;44862:19:115;;;;44855:61;;;;23440:220:65;;;;;;;;;;44664:19:115;;;;23440:220:65;;;23413:261;;;;;;23320:361::o;20207:701::-;20344:33;20389:20;20426:6;-1:-1:-1;;;;;20412:21:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20412:21:65;;20389:44;;20443:24;20484:6;-1:-1:-1;;;;;20470:21:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20470:21:65;;20443:48;;20506:9;20501:101;20521:6;20517:1;:10;20501:101;;;20557:5;:1;20561;20557:5;:::i;:::-;20548:3;20552:1;20548:6;;;;;;;;:::i;:::-;;;;;;:14;;;;;20589:2;20576:7;20584:1;20576:10;;;;;;;;:::i;:::-;;;;;;;;;;:15;20529:3;;;;:::i;:::-;;;;20501:101;;;-1:-1:-1;20663:12:65;;20759:7;;20635:266;;-1:-1:-1;;;;;20663:12:65;;;;:33;;20635:266;;20728:5;;20759:7;;;;20785:3;;20806;;20827:7;;20852:25;;20635:266;;;:::i;:::-;;;;-1:-1:-1;;20635:266:65;;;;;;;;;;;;;;-1:-1:-1;;;;;20635:266:65;;;;;;;;;;;;;;20207:701;-1:-1:-1;;;;;;;20207:701:65:o;1239:106:1:-;1288:22;;-1:-1:-1;;;1288:22:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1288:7:1;;:22;;1296:3;;-1:-1:-1;;;1301:8:1;1288:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1320:18:1;;-1:-1:-1;;;1320:18:1;;-1:-1:-1;;;;;8562:32:115;;1320:18:1;;;8544:51:115;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1320:13:1;;-1:-1:-1;8517:18:115;;1320::1;8398:203:115;19513:326:65;19730:12;;19779:6;;19702:130;;19646:27;;-1:-1:-1;;;;;19730:12:65;;;;:27;;19702:130;;19772:5;;19779:6;;19787:3;;19792:8;;19802:19;;19702:130;;;:::i;:::-;;;;-1:-1:-1;;19702:130:65;;;;;;;;;;;;;;-1:-1:-1;;;;;19702:130:65;;;;;;;;;;;;;;19513:326;-1:-1:-1;;;;;19513:326:65:o;14368:369:60:-;14420:61;;;;;;;;;14437:5;14420:61;-1:-1:-1;;;;;14420:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14444:3;14420:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;14420:61:60;3711:5:65;3753:16;:::i;14420:61:60:-;14492:16;;14531:5;;14492:45;;-1:-1:-1;;;14492:45:60;;-1:-1:-1;;;;;14531:5:60;;;14492:16;:45;;8544:51:115;14492:16:60;;;:22;;14522:7;;8517:18:115;;14492:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14547:18:60;;14580:5;;14547:45;;-1:-1:-1;;;14547:45:60;;-1:-1:-1;;;;;14547:18:60;;;;-1:-1:-1;14547:32:60;;-1:-1:-1;14547:45:60;;-1:-1:-1;14580:5:60;;;14587:4;;14547:18;:45;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14610:15:60;;14602:24;;-1:-1:-1;;;14602:24:60;;;;;8752:25:115;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;14602:7:60;;-1:-1:-1;8725:18:115;;14602:24:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14637:44;14655:13;14670:10;14637:17;:44::i;11274:750::-;11322:61;;;;;;;;;11339:5;11322:61;-1:-1:-1;;;;;11322:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11346:3;11322:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;11322:61:60;3711:5:65;3753:16;:::i;11322:61:60:-;11394:16;;11433:5;;11394:45;;-1:-1:-1;;;11394:45:60;;-1:-1:-1;;;;;11433:5:60;;;11394:16;:45;;8544:51:115;11394:16:60;;;:22;;11424:7;;8517:18:115;;11394:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11449:18:60;;11499:5;;11449:62;;-1:-1:-1;;;11449:62:60;;-1:-1:-1;;;;;11449:18:60;;;;-1:-1:-1;11449:31:60;;-1:-1:-1;11488:9:60;;-1:-1:-1;11449:62:60;;11499:5;;;;11506:4;;11449:18;:62;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11529:15:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;11521:7:60;;-1:-1:-1;11529:19:60;;-1:-1:-1;11547:1:60;11529:19;:::i;:::-;11521:28;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;11521:28:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11588:3:60;:8;11560:41;;-1:-1:-1;11569:28:60;;-1:-1:-1;;;;;;11588:8:60;11569:18;:28::i;11560:41::-;11639:6;;11611:42;;11620:26;;-1:-1:-1;;;;;11639:6:60;11620:18;:26::i;11611:42::-;11686:3;:8;11663:43;;-1:-1:-1;;;;;11686:8:60;22665:16:65;11672:23:60;11697:8;11663;:43::i;:::-;11739:6;;11716:42;;-1:-1:-1;;;;;11739:6:60;22665:16:65;11725:21:60;11748:9;11716:8;:42::i;:::-;11769:16;;11790:5;;11769:38;;-1:-1:-1;;;11769:38:60;;-1:-1:-1;;;;;11769:16:60;;;;:20;;:38;;11790:5;;;11797:9;;11769:16;:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11846:3:60;:8;11818:44;;-1:-1:-1;11827:28:60;;-1:-1:-1;;;;;;11846:8:60;11827:18;:28::i;11818:44::-;11900:6;;11872:39;;11881:26;;-1:-1:-1;;;;;11900:6:60;11881:18;:26::i;11872:39::-;11944:3;:8;11921:46;;-1:-1:-1;;;;;11944:8:60;22665:16:65;11930:23:60;22577:111:65;12381:282;12463:19;;;;12505:5;;12463:48;;-1:-1:-1;;;12463:48:65;;-1:-1:-1;;;;;12505:5:65;;;12463:48;;;8544:51:115;12463:25:65;;;;;12496:7;;8517:18:115;;12463:48:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;12521:19:65;;;;12555:5;;12521:46;;-1:-1:-1;;;12521:46:65;;-1:-1:-1;;;;;12521:33:65;;;;-1:-1:-1;12521:33:65;;:46;;12555:5;;12562:4;;12521:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12585:15:65;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;12577:7:65;;-1:-1:-1;12585:19:65;;12603:1;12585:19;:::i;:::-;12577:28;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;12577:28:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12615:19:65;;;;12639:5;;12615:41;;-1:-1:-1;;;12615:41:65;;-1:-1:-1;;;;;12615:23:65;;;;-1:-1:-1;12615:23:65;;:41;;12639:5;;12646:9;;12615:41;;;:::i;21792:340::-;22011:15;;22080:5;;21983:142;;21931:25;;-1:-1:-1;;;;;22011:15:65;;;;:33;;21983:142;;22059:6;;22067:11;;22080:5;;;22087:7;;22096:18;;21983:142;;;:::i;22222:171::-;22338:14;;;;:48;;-1:-1:-1;;;22338:48:65;;-1:-1:-1;;;;;47311:32:115;;;22338:48:65;;;47293:51:115;47387:14;;47380:22;47360:18;;;47353:50;22338:32:65;;;;;;47266:18:115;;22338:48:65;47125:284:115;18509:604:60;18571:61;;;;;;;;;18588:5;18571:61;-1:-1:-1;;;;;18571:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18595:3;18571:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;18571:61:60;3711:5:65;3753:16;:::i;18571:61:60:-;18642:31;;;;;;;;;18662:5;18642:31;-1:-1:-1;;;;;18642:31:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18669:3;18642:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;:31::i;:::-;18762:9;;18786:3;:8;18684:27;;18714:105;;-1:-1:-1;;;;;18762:9:60;;;;18786:8;18762:9;18714:26;:105::i;13088:382:65:-;13199:5;;13187:21;;-1:-1:-1;;;;;13199:5:65;;13187:11;:21::i;5776:518:60:-;5839:61;;;;;;;;;5856:5;5839:61;-1:-1:-1;;;;;5839:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5863:3;5839:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;5839:61:60;3711:5:65;3753:16;:::i;5839:61:60:-;5911:16;;5950:5;;5911:45;;-1:-1:-1;;;5911:45:60;;-1:-1:-1;;;;;5950:5:60;;;5911:16;:45;;8544:51:115;5911:16:60;;;:22;;5941:7;;8517:18:115;;5911:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5974:14:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;5966:7:60;;-1:-1:-1;5974:18:60;;-1:-1:-1;5991:1:60;5974:18;:::i;:::-;5966:27;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;5966:27:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6004:16;6041:1;6023:15;:19;;;;:::i;:::-;6081:141;;;6167:15;6081:141;;;19870:25:115;19911:18;;;;19904:34;;;6081:141:60;;;;;;;;;;19843:18:115;;;;6081:141:60;;;;;;;-1:-1:-1;;;;;6081:141:60;-1:-1:-1;;;6081:141:60;;;6052:180;;-1:-1:-1;;;6052:180:60;;19904:34:115;;-1:-1:-1;;;;;;;;;;;;1671:64:0;6052:15:60;;:180;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6242:18:60;;6275:5;;6242:45;;-1:-1:-1;;;6242:45:60;;-1:-1:-1;;;;;6242:18:60;;;;-1:-1:-1;6242:32:60;;-1:-1:-1;6242:45:60;;6275:5;;;;6282:4;;6242:18;:45;;:::i;3951:1825:65:-;4039:11;;:::i;:::-;4066:15;4099:5;4106:11;4084:34;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4066:52;;4128:19;4179:5;4198:11;4231:9;;;;;;;;;-1:-1:-1;;;;;4231:9:65;4150:101;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4128:123;;4261:16;4306:5;4325:11;4358:12;;;;;;;;;-1:-1:-1;;;;;4358:12:65;4280:101;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4261:120;;4391:22;4445:5;4464:11;4497:15;;;;;;;;;-1:-1:-1;;;;;4497:15:65;4416:107;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4391:132;;4533:20;4586:5;4605:11;4638:6;;;;;;;;;-1:-1:-1;;;;;4638:6:65;4556:99;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4533:122;;4665:22;4721:5;4740:11;4773:7;;;;;;;;;-1:-1:-1;;;;;4773:7:65;4690:101;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4665:126;;4801:18;4851:5;4870:11;4903:5;;;;;;;;;-1:-1:-1;;;;;4903:5:65;4822:97;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4801:118;;4929:20;4980:5;4999:11;5032:14;;;;;;;;;-1:-1:-1;;;;;5032:14:65;4952:105;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4929:128;;5067:25;5128:5;5147:11;5180:8;;;;;;;;;-1:-1:-1;;;;;5180:8:65;5095:104;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;5067:132;;5209:20;5247:5;5254:11;5275:1;5232:46;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;5209:69;;5288:14;5317:5;5324:11;5345:1;5305:43;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5358:26:65;;-1:-1:-1;;;5358:26:65;;3664:9;5358:26;;;8752:25:115;5288:60:65;;-1:-1:-1;;;;;;5358:9:65;;;;;8725:18:115;;5358:26:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5413:356;;;;;;;;5435:4;-1:-1:-1;;;;;5435:9:65;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5413:356:65;;;;;5464:4;-1:-1:-1;;;;;5464:9:65;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5413:356;;-1:-1:-1;;;;;5413:356:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3951:1825;-1:-1:-1;;;3951:1825:65:o;2614:915:1:-;2768:38;;;-1:-1:-1;;;;;8562:32:115;;;2768:38:1;;;;8544:51:115;;;;2768:38:1;;;;;;;;;;8517:18:115;;;;2768:38:1;;;;;;;-1:-1:-1;;;;;2768:38:1;-1:-1:-1;;;2768:38:1;;;2757:50;;2733:20;;2757:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2730:77;;;2817:15;2846:7;2835:30;;;;;;;;;;;;:::i;:::-;2817:48;-1:-1:-1;2902:123:1;3020:4;2902:90;2989:2;2902:64;-1:-1:-1;;;2902:35:1;:8;2931:5;2902:28;:35::i;:::-;:52;9851:9;;;:16;;-1:-1:-1;;9851:16:1;;;;;;;;;;;;:9;9752:143;2902:64;:86;10167:10;;;:47;;;;;;;-1:-1:-1;10167:47:1;;;;;;;-1:-1:-1;;;;;10191:21:1;;;;10167:47;;;:10;10063:179;2902:90;:117;;:123::i;:::-;3070:6;3067:456;;;3132:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3132:34:1;-1:-1:-1;;;3132:34:1;;;3121:46;;3094:23;;-1:-1:-1;;;;;3121:10:1;;;:46;;3132:34;3121:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3091:76;;;3181:14;3209:10;3198:33;;;;;;;;;;;;:::i;:::-;3181:50;;3255:7;3248:4;:14;3245:143;;;3293:14;3303:4;3293:7;:14;:::i;:::-;3282:26;;;;:::i;:::-;;;3245:143;;;3358:14;3365:7;3358:4;:14;:::i;:::-;3347:26;;;;:::i;:::-;;;3245:143;3401:111;3505:6;3401:72;-1:-1:-1;;;3401:39:1;:8;3434:5;3401:32;:39::i;:111::-;3077:446;;2689:840;;2614:915;;;;:::o;10284:368:60:-;10349:61;;;;;;;;;10366:5;10349:61;-1:-1:-1;;;;;10349:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10373:3;10349:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;10349:61:60;3711:5:65;3753:16;:::i;10349:61:60:-;10421:16;;10460:5;;10421:45;;-1:-1:-1;;;10421:45:60;;-1:-1:-1;;;;;10460:5:60;;;10421:16;:45;;8544:51:115;10421:16:60;;;:22;;10451:7;;8517:18:115;;10421:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10506:55:60;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10506:55:60;-1:-1:-1;;;10506:55:60;;;10477:94;;-1:-1:-1;;;10477:94:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;10477:15:60;;-1:-1:-1;10477:94:60;;-1:-1:-1;10506:55:60;;10477:94;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10582:18:60;;10633:5;;10582:63;;-1:-1:-1;;;10582:63:60;;-1:-1:-1;;;;;10582:18:60;;;;-1:-1:-1;10582:31:60;;-1:-1:-1;10621:10:60;;10582:63;;10633:5;;10640:4;;10582:18;:63;;:::i;3982:244:1:-;4106:16;;-1:-1:-1;;;4106:16:1;;4054:12;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;4106:10:1;;:16;;4117:4;;4106:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4106:16:1;;;;;;;;;;;;:::i;:::-;4082:40;;4200:8;4194:15;4187:4;4177:8;4173:19;4170:1;4163:47;4155:55;3982:244;-1:-1:-1;;;3982:244:1:o;3902:1186:60:-;3958:61;;;;;;;;;3975:5;3958:61;-1:-1:-1;;;;;3958:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3982:3;3958:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;3958:61:60;3711:5:65;3753:16;:::i;3958:61:60:-;4030:16;;4069:5;;4030:45;;-1:-1:-1;;;4030:45:60;;-1:-1:-1;;;;;4069:5:60;;;4030:16;:45;;8544:51:115;4030:16:60;;;:22;;4060:7;;8517:18:115;;4030:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4114:5:60;:10;4086:53;;-1:-1:-1;4095:30:60;;-1:-1:-1;;;;;;4114:10:60;;-1:-1:-1;4095:18:60;:30::i;4086:53::-;4177:6;;4149:49;;4158:26;;-1:-1:-1;;;;;4177:6:60;4158:18;:26::i;4149:49::-;4231:5;:10;4208:52;;-1:-1:-1;;;;;4231:10:60;22665:16:65;4217:25:60;22577:111:65;4208:52:60;4293:6;;4270:40;;-1:-1:-1;;;;;4293:6:60;22665:16:65;4279:21:60;22577:111:65;4270:40:60;4370:5;;4338:38;;4361:1;;4365:3;;-1:-1:-1;;;;;4370:5:60;;;;4338:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4321:14:60;:55;;-1:-1:-1;;;;;;4321:55:60;-1:-1:-1;;;;;4321:55:60;;;;;;;;;4419:6;;4386:47;;-1:-1:-1;;;4386:47:60;;4419:6;;4386:47;;;47293:51:115;-1:-1:-1;47360:18:115;;;47353:50;4321:55:60;4386:32;;47266:18:115;;4386:47:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4477:161:60;;;;;;;;4504:5;4477:161;-1:-1:-1;;;;;4477:161:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4523:6;;4570:5;;4561:34;;-1:-1:-1;;;4561:34:60;;4477:161;4561:34;;8544:51:115;;;;-1:-1:-1;;;;;;;;4477:161:60;;;4523:6;;;;4477:161;;4570:5;;;;;4561:22;;8517:18:115;;4561:34:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4609:19;:15;4627:1;4609:19;:::i;4477:161::-;4649:18;;4695:5;;4443:195;;-1:-1:-1;4443:195:60;;-1:-1:-1;4443:195:60;-1:-1:-1;;;;;;4649:18:60;;;;:32;;4695:5;4649:18;4732:19;:15;4649:18;4732:19;:::i;:::-;4649:157;;-1:-1:-1;;;;;;4649:157:60;;;;;;;-1:-1:-1;;;;;47988:32:115;;;4649:157:60;;;47970:51:115;48064:14;;48057:22;48037:18;;;48030:50;48096:18;;;48089:34;48171:4;48159:17;;48139:18;;;48132:45;48193:19;;;48186:35;;;48237:19;;;48230:35;;;47942:19;;4649:157:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4817:18:60;;4850:5;;4817:45;;-1:-1:-1;;;4817:45:60;;-1:-1:-1;;;;;4817:18:60;;;;-1:-1:-1;4817:32:60;;-1:-1:-1;4817:45:60;;4850:5;;;;4857:4;;4817:18;:45;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4901:5:60;:10;4873:46;;-1:-1:-1;4882:30:60;;-1:-1:-1;;;;;;4901:10:60;4882:18;:30::i;4873:46::-;4957:6;;4929:42;;4938:26;;-1:-1:-1;;;;;4957:6:60;4938:18;:26::i;4929:42::-;5004:5;:10;4981:48;;-1:-1:-1;;;;;5004:10:60;22665:16:65;4990:25:60;22577:111:65;4981:48:60;5062:6;;5039:42;;-1:-1:-1;;;;;5062:6:60;22665:16:65;5048:21:60;22577:111:65;7573:701:60;7624:61;;;;;;;;;7641:5;7624:61;-1:-1:-1;;;;;7624:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7648:3;7624:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;7624:61:60;3711:5:65;3753:16;:::i;7624:61:60:-;7696:16;;7735:5;;7696:45;;-1:-1:-1;;;7696:45:60;;-1:-1:-1;;;;;7735:5:60;;;7696:16;:45;;8544:51:115;7696:16:60;;;:22;;7726:7;;8517:18:115;;7696:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7780:5:60;:10;7752:53;;-1:-1:-1;7761:30:60;;-1:-1:-1;;;;;;7780:10:60;;-1:-1:-1;7761:18:60;:30::i;7752:53::-;7843:6;;7815:49;;7824:26;;-1:-1:-1;;;;;7843:6:60;7824:18;:26::i;7815:49::-;7897:5;:10;7874:52;;-1:-1:-1;;;;;7897:10:60;22665:16:65;7883:25:60;22577:111:65;7874:52:60;7959:6;;7936:40;;-1:-1:-1;;;;;7959:6:60;22665:16:65;7945:21:60;22577:111:65;7936:40:60;7987:18;;8037:5;;7987:62;;-1:-1:-1;;;7987:62:60;;-1:-1:-1;;;;;7987:18:60;;;;:31;;8026:9;;7987:62;;8037:5;;;;8044:4;;7987:18;:62;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8088:5:60;:10;8060:46;;-1:-1:-1;8069:30:60;;-1:-1:-1;;;;;;8088:10:60;;-1:-1:-1;8069:18:60;:30::i;8060:46::-;8144:6;;8116:42;;8125:26;;-1:-1:-1;;;;;8144:6:60;8125:18;:26::i;8116:42::-;8191:5;:10;8168:47;;-1:-1:-1;;;;;8191:10:60;22665:16:65;8204:10:60;8168:8;:47::i;:::-;8248:6;;8225:42;;-1:-1:-1;;;;;8248:6:60;22665:16:65;8234:21:60;22577:111:65;7165:239;7203:10;7216;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7203:23;;7236:17;7264:5;-1:-1:-1;;;;;7256:19:65;;;;;;;;;;;;;;;;;;;;;;;;7285:27;;-1:-1:-1;;;7285:27:65;;7236:39;;-1:-1:-1;;;;;;;;;;;;1671:64:0;7285:7:65;;:27;;3823:42;;7236:39;;7285:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7322:4:65;:34;;-1:-1:-1;;;;;;7322:34:65;3823:42;7322:34;;;;;;7367:30;;-1:-1:-1;;;7367:30:65;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;7367:8:65;;-1:-1:-1;7367:30:65;;3823:42;7367:30;;-1:-1:-1;;;;;48825:32:115;;;;48807:51;;48894:2;48889;48874:18;;48867:30;;;48933:1;48913:18;;;48906:29;-1:-1:-1;;;48966:2:115;48951:18;;48944:34;49010:3;48995:19;;48595:425;23687:664:65;23884:7;23905:9;23928;23962:18;360:118:19;24067:6:65;:11;;;24096:9;24123:7;;24148:5;24171:8;;;;;:::i;:::-;24006:214;;;;;;49334:25:115;;;;-1:-1:-1;;;;;49433:15:115;;;49413:18;;;49406:43;49485:15;;;;49465:18;;;49458:43;49517:18;;;49510:34;;;;49588:14;49581:22;49560:19;;;49553:51;49620:19;;;49613:35;49664:19;;;49657:35;;;24171:8:65;-1:-1:-1;49306:19:115;;24006:214:65;;;;;;;;;;;;;23983:247;;;;;;23962:268;;24253:6;:11;;;-1:-1:-1;;;;;24253:16:65;;24283:51;24297:24;:22;:24::i;:::-;24323:10;24283:13;:51::i;:::-;24253:91;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;24253:91:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24241:103;;;;-1:-1:-1;24241:103:65;;-1:-1:-1;23687:664:65;-1:-1:-1;;;;;;;23687:664:65:o;15692:437::-;15854:16;;;15868:1;15854:16;;;;;;;;;15786:26;;15828:23;;15854:16;;;;;;;;;;-1:-1:-1;;15892:5:65;;15880:9;;;;-1:-1:-1;;;;;;15892:5:65;;15880:9;;-1:-1:-1;15892:5:65;;15880:9;;;;:::i;:::-;-1:-1:-1;;;;;15880:17:65;;;;:9;;;;;;;;;;;:17;15934:16;;;15948:1;15934:16;;;;;;;;;15907:24;;15934:16;;;;;;;;;;;;-1:-1:-1;15934:16:65;15907:43;;15973:7;15960;15968:1;15960:10;;;;;;;;:::i;:::-;;;;;;;;;;:20;16035:9;;16077:5;:10;16089:5;;16007:115;;-1:-1:-1;;;;;16035:9:65;;;;:27;;16007:115;;16077:10;;;;16089:5;;;16096:6;;16104:7;;16007:115;;;:::i;17089:696:60:-;17136:61;;;;;;;;;17153:5;17136:61;-1:-1:-1;;;;;17136:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17160:3;17136:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;17136:61:60;3711:5:65;3753:16;:::i;17136:61:60:-;17207:31;;;;;;;;;17227:5;17207:31;-1:-1:-1;;;;;17207:31:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17234:3;17207:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;:31::i;:::-;17319:5;;17338:3;:8;17249:27;;17279:92;;-1:-1:-1;;;;;17319:5:60;;;;17338:8;17319:5;17279:26;:92::i;:::-;17452:5;;17471:3;:8;17249:122;;-1:-1:-1;17381:28:60;;17412:92;;-1:-1:-1;;;;;17452:5:60;;;;17471:8;17493:1;17412:26;:92::i;:::-;17536:14;;;17548:1;17536:14;;;;;;;;;17381:123;;-1:-1:-1;17514:19:60;;17536:14;;;;;;;;;;;;;;;;;;;;;17514:36;;17570:14;17560:4;17565:1;17560:7;;;;;;;;:::i;:::-;;;;;;:24;;;;17604:15;17594:4;17599:1;17594:7;;;;;;;;:::i;:::-;;;;;;;;;;:25;17647:6;;17665:3;:8;17639:35;;-1:-1:-1;;;17639:35:60;;-1:-1:-1;;;;;17665:8:60;;;17639:35;;;8544:51:115;17630:48:60;;17647:6;;;;;17639:25;;8517:18:115;;17639:35:60;8398:203:115;17630:48:60;17688:16;;:32;;-1:-1:-1;;;17688:32:60;;-1:-1:-1;;;;;17688:16:60;;;;:26;;:32;;17715:4;;17688:16;:32;;:::i;28748:573::-;28813:61;;;;;;;;;28830:5;28813:61;-1:-1:-1;;;;;28813:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28837:3;28813:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;28813:61:60;3711:5:65;3753:16;:::i;28813:61:60:-;28885:16;;28924:5;;28885:45;;-1:-1:-1;;;28885:45:60;;-1:-1:-1;;;;;28924:5:60;;;28885:16;:45;;8544:51:115;28885:16:60;;;:22;;28915:7;;8517:18:115;;28885:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;28940:18:60;;28990:5;;28940:62;;-1:-1:-1;;;28940:62:60;;-1:-1:-1;;;;;28940:18:60;;;;-1:-1:-1;28940:31:60;;-1:-1:-1;28979:9:60;;-1:-1:-1;28940:62:60;;28990:5;;;;28997:4;;28940:18;:62;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29020:15:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;29012:7:60;;-1:-1:-1;29020:19:60;;-1:-1:-1;29038:1:60;29020:19;:::i;:::-;29012:28;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;29012:28:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;29050:16:60;;29071:5;;29050:38;;-1:-1:-1;;;29050:38:60;;-1:-1:-1;;;;;29050:16:60;;;;-1:-1:-1;29050:20:60;;-1:-1:-1;29050:38:60;;29071:5;;;;29078:9;;29050:16;:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29099:48;29117:13;29132:14;29099:17;:48::i;:::-;29157:16;;29201:5;;29228;;29157:3;29248:8;29157:157;;-1:-1:-1;;;29157:157:60;;-1:-1:-1;;;;;29157:16:60;;;;:30;;:157;;29201:5;;;;29228;;;;29248:8;;;29270:2;;29286:18;;29157:16;:157;;:::i;1038:130:1:-;1112:18;;-1:-1:-1;;;1112:18:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1112:7:1;;:18;;1120:3;;1125:4;;1112:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1140:21:1;;-1:-1:-1;;;1140:21:1;;-1:-1:-1;;;;;33829:15:115;;;1140:21:1;;;33811:34:115;33881:15;;33861:18;;;33854:43;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1140:8:1;;-1:-1:-1;33746:18:115;;1140:21:1;33599:304:115;22698:530:60;22762:61;;;;;;;;;22779:5;22762:61;-1:-1:-1;;;;;22762:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22786:3;22762:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;22762:61:60;3711:5:65;3753:16;:::i;22762:61:60:-;22833:32;;;;;;;;;22854:5;22833:32;-1:-1:-1;;;;;22833:32:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22861:3;22833:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:20;:32::i;:::-;22948:5;;22967;:10;22876:28;;22907:111;;-1:-1:-1;;;;;22948:5:60;;;;22967:10;22948:5;23006:2;22907:27;:111::i;11275:423:65:-;11345:5;;11357:10;;11335:37;;-1:-1:-1;;;11335:37:65;;-1:-1:-1;;;;;11345:5:65;;;;11335:21;;:37;;11369:2;;11335:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11393:6:65;;11406:10;;11382:38;;-1:-1:-1;;;11382:38:65;;-1:-1:-1;;;;;11393:6:65;;;;-1:-1:-1;11382:23:65;;-1:-1:-1;11382:38:65;;11418:1;;11382:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11441:6:65;;11454:10;;11430:38;;-1:-1:-1;;;11430:38:65;;-1:-1:-1;;;;;11441:6:65;;;;-1:-1:-1;11430:23:65;;-1:-1:-1;11430:38:65;;11466:1;;11430:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11478:26;11490:5;:10;;;11502:1;11478:11;:26::i;:::-;11515:11;;;;11543:9;;11515:43;;-1:-1:-1;;;11515:43:65;;-1:-1:-1;;;;;11515:19:65;;;;;;:43;;11543:9;;;11555:2;;11515:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11568:12:65;;;;11607:9;;11568:56;;-1:-1:-1;;;11568:56:65;;-1:-1:-1;;;;;11607:9:65;;;11568:56;;;47293:51:115;11607:9:65;47360:18:115;;;47353:50;11568:30:65;;;;;47266:18:115;;11568:56:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;11634:13:65;;;;11674:9;;11634:57;;-1:-1:-1;;;11634:57:65;;-1:-1:-1;;;;;11674:9:65;;;11634:57;;;47293:51:115;11674:9:65;47360:18:115;;;47353:50;11634:31:65;;;;;47266:18:115;;11634:57:65;47125:284:115;22096:596:60;22163:61;;;;;;;;;22180:5;22163:61;-1:-1:-1;;;;;22163:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22187:3;22163:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;22163:61:60;3711:5:65;3753:16;:::i;22163:61:60:-;22235:16;;22274:5;;22235:45;;-1:-1:-1;;;22235:45:60;;-1:-1:-1;;;;;22274:5:60;;;22235:16;:45;;8544:51:115;22235:16:60;;;:22;;22265:7;;8517:18:115;;22235:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22290:18:60;;22340:5;;22290:62;;-1:-1:-1;;;22290:62:60;;-1:-1:-1;;;;;22290:18:60;;;;-1:-1:-1;22290:31:60;;-1:-1:-1;22329:9:60;;-1:-1:-1;22290:62:60;;22340:5;;;;22347:4;;22290:18;:62;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22370:15:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;22362:7:60;;-1:-1:-1;22370:19:60;;-1:-1:-1;22388:1:60;22370:19;:::i;:::-;22362:28;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;22362:28:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22400:16:60;;22421:5;;22400:38;;-1:-1:-1;;;22400:38:60;;-1:-1:-1;;;;;22400:16:60;;;;-1:-1:-1;22400:20:60;;-1:-1:-1;22400:38:60;;22421:5;;;;22428:9;;22400:16;:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22449:48;22467:13;22482:14;22449:17;:48::i;:::-;22507:16;;22553:5;;22580:7;;22507:3;22602:8;22507:178;;-1:-1:-1;;;22507:178:60;;-1:-1:-1;;;;;22507:16:60;;;;:32;;:178;;22553:5;;;;22580:7;;;;22602:8;;;22507:16;;22639:2;;22655:20;;22507:16;:178;;:::i;9476:260::-;9540:61;;;;;;;;;9557:5;9540:61;-1:-1:-1;;;;;9540:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9564:3;9540:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;9540:61:60;3711:5:65;3753:16;:::i;9540:61:60:-;9612:45;9630:10;9642:14;9612:17;:45::i;:::-;9667:18;;9717:5;;9667:62;;-1:-1:-1;;;9667:62:60;;-1:-1:-1;;;;;9667:18:60;;;;:31;;9706:9;;9667:62;;9717:5;;;;9724:4;;9667:18;:62;;:::i;1159:578::-;1208:51;;;;;;;;;1225:5;1208:51;-1:-1:-1;;;;;1208:51:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1232:3;1208:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;-1:-1:-1;1208:51:60;:16;:51::i;:::-;1298:3;:8;1270:41;;1279:28;;-1:-1:-1;;;;;1298:8:60;1279:18;:28::i;1270:41::-;1349:6;;1321:39;;1330:26;;-1:-1:-1;;;;;1349:6:60;1330:18;:26::i;1321:39::-;1393:3;:8;1370:50;;-1:-1:-1;;;;;1393:8:60;22665:16:65;1379:23:60;22577:111:65;1370:50:60;1453:6;;1430:40;;-1:-1:-1;;;;;1453:6:60;22665:16:65;1439:21:60;22577:111:65;1430:40:60;1481:16;;1520:5;;1481:45;;-1:-1:-1;;;1481:45:60;;-1:-1:-1;;;;;1520:5:60;;;1481:16;:45;;8544:51:115;1481:16:60;;;:22;;1511:7;;8517:18:115;;1481:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1565:3:60;:8;1537:41;;-1:-1:-1;1546:28:60;;-1:-1:-1;;;;;;1565:8:60;;-1:-1:-1;1546:18:60;:28::i;1537:41::-;1616:6;;1588:39;;1597:26;;-1:-1:-1;;;;;1616:6:60;1597:18;:26::i;1588:39::-;1660:3;:8;1637:43;;-1:-1:-1;;;;;1660:8:60;22665:16:65;1646:23:60;22577:111:65;29327:505:60;29389:61;;;;;;;;;29406:5;29389:61;-1:-1:-1;;;;;29389:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29413:3;29389:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;29389:61:60;3711:5:65;3753:16;:::i;29389:61:60:-;29460:30;;;;;;;;;29479:5;29460:30;-1:-1:-1;;;;;29460:30:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29486:3;29460:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:30::i;:::-;29569:5;;29588;:10;29501:26;;29530:94;;-1:-1:-1;;;;;29569:5:60;;;;29588:10;29612:2;29530:25;:94::i;461:83:1:-;-1:-1:-1;;;;;;;;;;;506:7:1;514:22;532:4;514:15;:22;:::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:0;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;10097:520:65:-;10201:23;:21;:23::i;:::-;10156:68;;10157:20;;;;10156:68;;10179:18;;10156:68;;;;;:::i;:::-;-1:-1:-1;;10156:68:65;;;;;;;;;;:::i;:::-;-1:-1:-1;;10251:8:65;;10293:10;;10317;;10251:152;;-1:-1:-1;;;10251:152:65;;-1:-1:-1;;;;;10251:8:65;;;;-1:-1:-1;10251:28:65;;:152;;10293:10;10317;10341:18;;10373:20;;10251:152;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10242:5;10234:169;;-1:-1:-1;;;;;;10234:169:65;;;-1:-1:-1;;;;;10234:169:65;;;;;;;10235:5;10234:169;;;;;;;;;;;;;10427:8;;:37;;-1:-1:-1;;;10427:37:65;;;;;8544:51:115;;;;10427:8:65;;:21;;8517:18:115;;10427:37:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10416:7;10413:51;-1:-1:-1;10495:5:65;;10474:27;;10488:5;;-1:-1:-1;;;;;10495:5:65;10474:13;:27::i;:::-;10535:8;;;;;;;;;-1:-1:-1;;;;;10535:8:65;-1:-1:-1;;;;;10535:22:65;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10522:38;;;;;:::i;:::-;-1:-1:-1;;;;;8562:32:115;;;8544:51;;8532:2;8517:18;10522:38:65;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10511:8:65;:49;;-1:-1:-1;;;;;;10511:49:65;-1:-1:-1;;;;;10511:49:65;;;;;;;;;10571:39;;;-1:-1:-1;;;10571:39:65;;;;;53912:51:115;;;;53979:18;;;53972:30;54038:1;54018:18;;;54011:29;-1:-1:-1;;;54056:18:115;;;54049:38;-1:-1:-1;;;;;;;;;;;1671:64:0;10571:8:65;;54104:19:115;;10571:39:65;53700:429:115;5863:1296:65;5916:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5905:8:65;:30;;-1:-1:-1;;;;;;5905:30:65;-1:-1:-1;;;;;5905:30:65;;;;;;;;;5960:29;;;;;:::i;:::-;-1:-1:-1;;;;;8562:32:115;;;8544:51;;8532:2;8517:18;5960:29:65;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5945:12:65;:44;;-1:-1:-1;;;;;;5945:44:65;-1:-1:-1;;;;;5945:44:65;;;;;;;;;6008:33;;;;;:::i;:::-;-1:-1:-1;;;;;8562:32:115;;;8544:51;;8532:2;8517:18;6008:33:65;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5999:6:65;:42;;-1:-1:-1;;;;;;5999:42:65;-1:-1:-1;;;;;5999:42:65;;;;;;;;;;6068:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6051:14:65;:31;;-1:-1:-1;;;;;;6051:31:65;-1:-1:-1;;;;;6051:31:65;;;;;;;;;;6103:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6092:8:65;:28;;-1:-1:-1;;;;;;6092:28:65;-1:-1:-1;;;;;6092:28:65;;;;;;6177:8;;6208:12;;6243:14;;6145:123;;6177:8;;;;6208:12;;;;6243:14;;;6145:123;;;:::i;:::-;-1:-1:-1;;;;;54392:15:115;;;54374:34;;54444:15;;;54439:2;54424:18;;54417:43;54496:15;;;54491:2;54476:18;;54469:43;54324:2;54309:18;6145:123:65;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6130:12:65;:138;;-1:-1:-1;;;;;;6130:138:65;-1:-1:-1;;;;;6130:138:65;;;;;;;;;6366:8;;6397:12;;6296:124;;6130:138;;6366:8;;;;6397:12;;;6296:124;;;:::i;:::-;-1:-1:-1;;;;;54392:15:115;;;54374:34;;54444:15;;;54439:2;54424:18;;54417:43;54496:15;;;54491:2;54476:18;;54469:43;54324:2;54309:18;6296:124:65;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6278:15:65;:142;;-1:-1:-1;;;;;;6278:142:65;-1:-1:-1;;;;;6278:142:65;;;;;;6464:8;;6483:12;;6442:55;;6464:8;;;;6483:12;;6442:55;;;:::i;:::-;-1:-1:-1;;;;;33829:15:115;;;33811:34;;33881:15;;33876:2;33861:18;;33854:43;33761:2;33746:18;6442:55:65;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6430:9:65;:67;;-1:-1:-1;;;;;;6430:67:65;-1:-1:-1;;;;;6430:67:65;;;;;;;;;;6523:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6507:5:65;:32;;-1:-1:-1;;;;;;6507:32:65;-1:-1:-1;;;;;6507:32:65;;;;;;;;;;6566:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6549:6:65;:34;;-1:-1:-1;;;;;;6549:34:65;-1:-1:-1;;;;;6549:34:65;;;;;;;;;;6611:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6593:7:65;:36;;-1:-1:-1;;;;;;6593:36:65;-1:-1:-1;;;;;6593:36:65;;;;;;6657:8;;6640:44;;;-1:-1:-1;;;6640:44:65;;6657:8;;;;6640:44;;;54735:51:115;54802:18;;;54795:30;;;;54861:2;54841:18;;;54834:30;-1:-1:-1;;;54880:18:115;;;54873:43;-1:-1:-1;;;;;;;;;;;1671:64:0;6640:8:65;;54933:19:115;;6640:44:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6711:12:65;;6694:47;;;-1:-1:-1;;;6694:47:65;;-1:-1:-1;;;;;6711:12:65;;;6694:47;;;55175:51:115;55242:18;;;55235:30;55301:2;55281:18;;;55274:30;-1:-1:-1;;;55320:18:115;;;55313:42;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;6694:8:65;;-1:-1:-1;55372:19:115;;6694:47:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6768:14:65;;6751:51;;;-1:-1:-1;;;6751:51:65;;-1:-1:-1;;;;;6768:14:65;;;6751:51;;;55614::115;55681:18;;;55674:30;55740:2;55720:18;;;55713:30;-1:-1:-1;;;55759:18:115;;;55752:44;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;6751:8:65;;-1:-1:-1;55813:19:115;;6751:51:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6829:9:65;;6812:41;;;-1:-1:-1;;;6812:41:65;;-1:-1:-1;;;;;6829:9:65;;;6812:41;;;56055:51:115;56122:18;;;56115:30;56181:1;56161:18;;;56154:29;-1:-1:-1;;;56199:18:115;;;56192:39;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;6812:8:65;;-1:-1:-1;56248:19:115;;6812:41:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6880:12:65;;6863:47;;;-1:-1:-1;;;6863:47:65;;-1:-1:-1;;;;;6880:12:65;;;6863:47;;;56490:51:115;56557:18;;;56550:30;56616:2;56596:18;;;56589:30;-1:-1:-1;;;56635:18:115;;;56628:42;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;6863:8:65;;-1:-1:-1;56687:19:115;;6863:47:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6937:15:65;;6920:53;;;-1:-1:-1;;;6920:53:65;;-1:-1:-1;;;;;6937:15:65;;;6920:53;;;56929:51:115;56996:18;;;56989:30;57055:2;57035:18;;;57028:30;-1:-1:-1;;;57074:18:115;;;57067:45;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;6920:8:65;;-1:-1:-1;57129:19:115;;6920:53:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7000:5:65;;6983:33;;;-1:-1:-1;;;6983:33:65;;-1:-1:-1;;;;;7000:5:65;;;6983:33;;;57371:51:115;57438:18;;;57431:30;57497:1;57477:18;;;57470:29;-1:-1:-1;;;57515:18:115;;;57508:35;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;6983:8:65;;-1:-1:-1;57560:19:115;;6983:33:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7043:6:65;;7026:35;;;-1:-1:-1;;;7026:35:65;;-1:-1:-1;;;;;7043:6:65;;;7026:35;;;57802:51:115;57869:18;;;57862:30;57928:1;57908:18;;;57901:29;-1:-1:-1;;;57946:18:115;;;57939:36;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;7026:8:65;;-1:-1:-1;57992:19:115;;7026:35:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7088:7:65;;7071:37;;;-1:-1:-1;;;7071:37:65;;-1:-1:-1;;;;;7088:7:65;;;7071:37;;;58234:51:115;58301:18;;;58294:30;58360:1;58340:18;;;58333:29;-1:-1:-1;;;58378:18:115;;;58371:37;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;7071:8:65;;-1:-1:-1;58425:19:115;;7071:37:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7119:11;:9;:11::i;:::-;7140:12;:10;:12::i;12030:456:60:-;12081:61;;;;;;;;;12098:5;12081:61;-1:-1:-1;;;;;12081:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12105:3;12081:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;12081:61:60;3711:5:65;3753:16;:::i;12081:61:60:-;12153:16;;12192:5;;12153:45;;-1:-1:-1;;;12153:45:60;;-1:-1:-1;;;;;12192:5:60;;;12153:16;:45;;8544:51:115;12153:16:60;;;:22;;12183:7;;8517:18:115;;12153:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12208:18:60;;12241:5;;12208:45;;-1:-1:-1;;;12208:45:60;;-1:-1:-1;;;;;12208:18:60;;;;-1:-1:-1;12208:32:60;;-1:-1:-1;12208:45:60;;-1:-1:-1;12241:5:60;;;12248:4;;12208:18;:45;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12384:9:60;;12293:115;;;-1:-1:-1;;;;;12384:9:60;;;12293:115;;;;8544:51:115;;;;12293:115:60;;;;;;;;;;8517:18:115;;;;12293:115:60;;;;;;;-1:-1:-1;;;;;12293:115:60;-1:-1:-1;;;12293:115:60;;;12264:154;-1:-1:-1;;;12264:154:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;12264:15:60;;-1:-1:-1;12264:154:60;;12293:115;12264:154;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12428:16:60;;12457:9;;12428:51;;-1:-1:-1;;;12428:51:60;;-1:-1:-1;;;;;12428:16:60;;;;-1:-1:-1;12428:20:60;;-1:-1:-1;12428:51:60;;12457:9;;;;12469;;12428:16;:51;;:::i;6974:491::-;7037:36;;;;;;;;7053:5;7037:36;-1:-1:-1;;;;;7037:36:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;7037:15:60;:36::i;:::-;7102:8;;7124:5;;7102:28;;-1:-1:-1;;;7102:28:60;;-1:-1:-1;;;;;7124:5:60;;;7102:28;;;8544:51:115;7102:8:60;;;:21;;8517:18:115;;7102:28:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7091:7;7083:47;7084:5;7083:47;;-1:-1:-1;;;;;7083:47:60;;;-1:-1:-1;;;;;;7083:47:60;;;;;;;7155;;7084:5;;7182:3;;7155:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7140:12:60;:62;;-1:-1:-1;;;;;;7140:62:60;-1:-1:-1;;;;;7140:62:60;;;;;;;;;7212:29;;;;;;;;7140:3;7212:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7140:62;7212:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7229:5;;7212:29;;7229:5;-1:-1:-1;7212:11:60;:29::i;:::-;7251:45;;;;;;;;7263:3;7251:45;-1:-1:-1;;;;;7251:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7276:12;7251:45;;7276:12;7251:45;:11;:45::i;:::-;7307:16;;7346:5;;7307:45;;-1:-1:-1;;;7307:45:60;;-1:-1:-1;;;;;7346:5:60;;;7307:16;:45;;8544:51:115;7307:16:60;;;:22;;7337:7;;8517:18:115;;7307:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7379:23:60;;;;;;;;;;;-1:-1:-1;;;7379:23:60;;;;7363:40;;-1:-1:-1;;;7363:40:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;7363:15:60;;-1:-1:-1;7363:40:60;;-1:-1:-1;7363:40:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7413:18:60;;7446:5;;7413:45;;-1:-1:-1;;;7413:45:60;;-1:-1:-1;;;;;7413:18:60;;;;-1:-1:-1;7413:32:60;;-1:-1:-1;7413:45:60;;7446:5;;;;7453:4;;7413:18;:45;;:::i;25516:826::-;25588:61;;;;;;;;;25605:5;25588:61;-1:-1:-1;;;;;25588:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25612:3;25588:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;25588:61:60;3711:5:65;3753:16;:::i;25588:61:60:-;25660:16;;25699:5;;25660:45;;-1:-1:-1;;;25660:45:60;;-1:-1:-1;;;;;25699:5:60;;;25660:16;:45;;8544:51:115;25660:16:60;;;:22;;25690:7;;8517:18:115;;25660:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25715:18:60;;25765:5;;25715:62;;-1:-1:-1;;;25715:62:60;;-1:-1:-1;;;;;25715:18:60;;;;-1:-1:-1;25715:31:60;;-1:-1:-1;25754:9:60;;-1:-1:-1;25715:62:60;;25765:5;;;;25772:4;;25715:18;:62;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25795:15:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;25787:7:60;;-1:-1:-1;25795:19:60;;-1:-1:-1;25813:1:60;25795:19;:::i;:::-;25787:28;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;25787:28:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;25825:16:60;;25846:5;;25825:38;;-1:-1:-1;;;25825:38:60;;-1:-1:-1;;;;;25825:16:60;;;;-1:-1:-1;25825:20:60;;-1:-1:-1;25825:38:60;;25846:5;;;;25853:9;;25825:16;:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25874:20:60;;-1:-1:-1;25911:1:60;;-1:-1:-1;25897:16:60;;-1:-1:-1;25897:16:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25897:16:60;-1:-1:-1;25950:16:60;;;25964:1;25950:16;;;;;;;;;25874:39;;-1:-1:-1;25923:24:60;;25950:16;;;;;;;;;;;-1:-1:-1;25950:16:60;25923:43;;25981:9;25976:96;25996:1;25992;:5;25976:96;;;26027:5;:1;26031;26027:5;:::i;:::-;26018:3;26022:1;26018:6;;;;;;;;:::i;:::-;;;;;;:14;;;;;26059:2;26046:7;26054:1;26046:10;;;;;;;;:::i;:::-;;;;;;;;;;:15;25999:3;;;;:::i;:::-;;;;25976:96;;;;26082:48;26100:13;26115:14;26082:17;:48::i;:::-;26140:16;;26191:5;;26218:7;;26140:3;26240:8;26140:195;;-1:-1:-1;;;26140:195:60;;-1:-1:-1;;;;;26140:16:60;;;;:37;;:195;;26191:5;;;;26218:7;;;;26240:8;;;26262:3;;26279:7;;26300:25;;26140:16;:195;;:::i;20893:566::-;20947:62;;;;;;;;;20964:5;20947:62;-1:-1:-1;;;;;20947:62:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20971:3;20947:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;;20947:62:60;:16;:62::i;:::-;21031:7;;21045:5;;21019:43;;-1:-1:-1;;;21019:43:60;;-1:-1:-1;;;;;21045:5:60;;;21019:43;;;39600:51:115;21031:7:60;39667:18:115;;;39660:34;21055:2:60;39710:18:115;;;39703:34;39773:3;39753:18;;;39746:31;-1:-1:-1;39793:19:115;;;39786:30;21031:7:60;;;21019:25;;39833:19:115;;21019:43:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21072:16:60;;21096:5;;21072:41;;-1:-1:-1;;;21072:41:60;;-1:-1:-1;;;;;21072:16:60;;;;-1:-1:-1;21072:23:60;;-1:-1:-1;21072:41:60;;21096:5;;;;21103:9;;21072:16;:41;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21196:5:60;;21215:3;:8;21124:28;;-1:-1:-1;21155:109:60;;-1:-1:-1;;;;;;21196:5:60;;;;21215:8;21196:5;21252:2;21155:27;:109::i;:::-;21296:14;;;21308:1;21296:14;;;;;;;;;21124:140;;-1:-1:-1;21274:19:60;;21296:14;;;;;;;;;;;;;;;;;;;;;21274:36;;21330:15;21320:4;21325:1;21320:7;;;;;;;;:::i;:::-;;;;;;;;;;:25;21356:16;;:32;;-1:-1:-1;;;21356:32:60;;-1:-1:-1;;;;;21356:16:60;;;;:26;;:32;;21383:4;;21356:16;:32;;:::i;2296:81:1:-;2353:17;;-1:-1:-1;;;2353:17:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;2353:7:1;;:17;;2361:2;;2365:4;;2353:17;;;:::i;14052:379:65:-;14147:5;;14159;;14137:32;;-1:-1:-1;;;14137:32:65;;-1:-1:-1;;;;;14147:5:65;;;;14137:21;;:32;;14159:5;;;14166:2;;14137:32;;;:::i;16375:364:60:-;16429:61;;;;;;;;;16446:5;16429:61;-1:-1:-1;;;;;16429:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16453:3;16429:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;16429:61:60;3711:5:65;3753:16;:::i;16429:61:60:-;16501:16;;16540:5;;16501:45;;-1:-1:-1;;;16501:45:60;;-1:-1:-1;;;;;16540:5:60;;;16501:16;:45;;8544:51:115;16501:16:60;;;:22;;16531:7;;8517:18:115;;16501:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16556:18:60;;16604:5;;-1:-1:-1;;;;;16556:18:60;;;;-1:-1:-1;16556:31:60;;-1:-1:-1;16595:7:60;;-1:-1:-1;16604:5:60;3753:16:65;3768:1;3711:5;3753:16;:::i;:::-;16556:67:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16634:45;16652:14;16668:10;16634:17;:45::i;:::-;16689:18;;16715:5;;16689:43;;-1:-1:-1;;;16689:43:60;;-1:-1:-1;;;;;16689:18:60;;;;:25;;:43;;16715:5;;;16722:9;;16689:18;:43;;:::i;8312:225:65:-;8402:16;;:::i;:::-;8441:35;8460:1;8464:11;8441:10;:35::i;:::-;8497:6;;8510:9;;8486:44;;-1:-1:-1;;;8486:44:65;;8434:42;;-1:-1:-1;;;;;;8497:6:65;;;;8486:23;;:44;;8521:8;;8486:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8312:225;;;;:::o;2647:232:60:-;2702:62;;;;;;;;;2719:5;2702:62;-1:-1:-1;;;;;2702:62:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2726:3;2702:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;2702:62:60;3711:5:65;3753:16;:::i;:::-;2758:5:60;2702:16;:62::i;:::-;2791:23;;;;;;;;;;;-1:-1:-1;;;2791:23:60;;;;2775:40;;-1:-1:-1;;;2775:40:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;2775:15:60;;:40;;2791:23;2775:40;;;:::i;1586:130:1:-;1651:22;;-1:-1:-1;;;1651:22:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1651:7:1;;:22;;1659:3;;-1:-1:-1;;;1664:8:1;1651:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1683:26:1;;-1:-1:-1;;;1683:26:1;;-1:-1:-1;;;;;33829:15:115;;;1683:26:1;;;33811:34:115;33881:15;;33861:18;;;33854:43;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1683:13:1;;-1:-1:-1;33746:18:115;;1683:26:1;33599:304:115;14545:678:65;14676:35;14692:6;14700:10;14676:15;:35::i;:::-;14740:8;;14762:5;;14740:28;;-1:-1:-1;;;14740:28:65;;-1:-1:-1;;;;;14762:5:65;;;14740:28;;;8544:51:115;14740:8:65;;;:21;;8517:18:115;;14740:28:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14729:7;14721:47;14722:5;14721:47;;-1:-1:-1;;;;;14721:47:65;;;-1:-1:-1;;;;;;14721:47:65;;;;;;;14796:38;;14722:5;;14823:3;;14796:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14778:56:65;;;:15;;;:56;14894:5;;14862:38;;14885:1;;14889:3;;14894:5;;14862:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14844:56:65;:15;;;:56;14924:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14911:10:65;:29;;-1:-1:-1;;;;;14911:29:65;;;-1:-1:-1;;;;;;14911:29:65;;;;;;;14967:12;;14950:6;:30;;;;14967:12;;;14950:30;;;;;15010:15;;14990:9;:36;;;;;15010:15;;14990:36;;;;;;15053:30;;;-1:-1:-1;;;15053:30:65;;;;:28;;:30;;;;;;;;;;;;;;;14967:12;15053:30;;;;;;;;;;;;;;17983:576;18167:41;18179:6;18187;18195:12;18167:11;:41::i;:::-;18218:15;;;;18264:11;;18289;;18218:144;;-1:-1:-1;;;18218:144:65;;-1:-1:-1;;;;;18218:32:65;;;;;;:144;;18264:11;;18314:1;;18329:7;;18218:144;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18392:5:65;;18372:37;;-1:-1:-1;18384:6:65;;-1:-1:-1;;;;;;18392:5:65;18399:9;18372:11;:37::i;:::-;18439:6;;18419:38;;18431:6;;-1:-1:-1;;;;;18439:6:65;18447:9;18419:11;:38::i;:::-;18487:5;;18467:37;;18479:6;;-1:-1:-1;;;;;18487:5:65;18494:9;18467:11;:37::i;:::-;18534:6;;18514:38;;18526:6;;-1:-1:-1;;;;;18534:6:65;18542:9;18514:11;:38::i;1906:297:1:-;1982:81;;;;;59204:2:115;59186:21;;;59243:2;59223:18;;;59216:30;59282:34;59277:2;59262:18;;59255:62;59353:29;59348:2;59333:18;;59326:57;59415:3;59400:19;;59002:423;1982:81:1;;;;;;;;2073:123;2191:4;2073:90;2160:2;2073:64;-1:-1:-1;;;2073:35:1;:8;2102:5;2073:28;:35::i;2399:242:60:-;2454:61;;;;;;;;;2471:5;2454:61;-1:-1:-1;;;;;2454:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2478:3;2454:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;2454:61:60;3711:5:65;3753:16;:::i;2454:61:60:-;2542:52;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2542:52:60;-1:-1:-1;;;2542:52:60;;;2526:69;;-1:-1:-1;;;2526:69:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;2526:15:60;;:69;;2542:52;;2526:69;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2605:16:60;;2628:5;;2605:29;;-1:-1:-1;;;2605:29:60;;-1:-1:-1;;;;;2628:5:60;;;2605:16;:29;;8544:51:115;2605:16:60;;;-1:-1:-1;2605:22:60;;-1:-1:-1;8517:18:115;;2605:29:60;8398:203:115;23050:264:65;23234:59;;-1:-1:-1;;;23234:59:65;;;59688:27:115;59731:11;;;59724:27;;;59767:12;;;59760:28;;;23165:7:65;;59804:12:115;;23234:59:65;;;;;;;;;;;;23207:100;;;;;;23188:119;;23050:264;;;;:::o;16745:230:60:-;16804:61;;;;;;;;;16821:5;16804:61;-1:-1:-1;;;;;16804:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16828:3;16804:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;16804:61:60;3711:5:65;3753:16;:::i;16804:61:60:-;4386:47:1;;4428:4;4386:47;;;40156:36:115;-1:-1:-1;;;;;;;;;;;1671:64:0;16876:15:60;;40129:18:115;;4386:47:1;;;-1:-1:-1;;4386:47:1;;;;;;;;;;;;;;-1:-1:-1;;;;;4386:47:1;-1:-1:-1;;;4386:47:1;;;16876:41:60;;;;;-1:-1:-1;;;;;;16876:41:60;;;;;4386:47:1;16876:41:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16927:16:60;;16951:5;;16927:41;;-1:-1:-1;;;16927:41:60;;-1:-1:-1;;;;;16927:16:60;;;;-1:-1:-1;16927:23:60;;-1:-1:-1;16927:41:60;;16951:5;;;;16958:9;;16927:16;:41;;:::i;16135:505:65:-;16229:26;16271:21;16309:6;-1:-1:-1;;;;;16295:21:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16295:21:65;;16271:45;;16326:25;16368:6;-1:-1:-1;;;;;16354:21:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16354:21:65;;16326:49;;16390:9;16385:107;16405:6;16401:1;:10;16385:107;;;16442:6;;16432:7;;-1:-1:-1;;;;;16442:6:65;;;;16432:4;;16437:1;;16432:7;;;;;;:::i;:::-;-1:-1:-1;;;;;16432:16:65;;;:7;;;;;;;;;;;:16;16476:5;:1;16480;16476:5;:::i;:::-;16462:8;16471:1;16462:11;;;;;;;;:::i;:::-;;;;;;;;;;:19;16413:3;;;;:::i;:::-;;;;16385:107;;;-1:-1:-1;16546:9:65;;16589:5;:10;16601:5;;16518:115;;-1:-1:-1;;;;;16546:9:65;;;;:28;;16518:115;;16589:10;;;;16601:5;;;16608:4;;16614:8;;16518:115;;;:::i;19119:576:60:-;19185:61;;;;;;;;;19202:5;19185:61;-1:-1:-1;;;;;19185:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19209:3;19185:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;19185:61:60;3711:5:65;3753:16;:::i;19185:61:60:-;19257:16;;19296:5;;19257:45;;-1:-1:-1;;;19257:45:60;;-1:-1:-1;;;;;19296:5:60;;;19257:16;:45;;8544:51:115;19257:16:60;;;:22;;19287:7;;8517:18:115;;19257:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19312:18:60;;19362:5;;19312:62;;-1:-1:-1;;;19312:62:60;;-1:-1:-1;;;;;19312:18:60;;;;-1:-1:-1;19312:31:60;;-1:-1:-1;19351:9:60;;-1:-1:-1;19312:62:60;;19362:5;;;;19369:4;;19312:18;:62;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19392:15:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;19384:7:60;;-1:-1:-1;19392:19:60;;-1:-1:-1;19410:1:60;19392:19;:::i;:::-;19384:28;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;19384:28:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19422:16:60;;19443:5;;19422:38;;-1:-1:-1;;;19422:38:60;;-1:-1:-1;;;;;19422:16:60;;;;-1:-1:-1;19422:20:60;;-1:-1:-1;19422:38:60;;19443:5;;;;19450:9;;19422:16;:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19471:48;19489:13;19504:14;19471:17;:48::i;:::-;19529:16;;19574:5;;19601:6;;19529:3;19622:8;19529:159;;-1:-1:-1;;;19529:159:60;;-1:-1:-1;;;;;19529:16:60;;;;:31;;:159;;19574:5;;;;19601:6;;;;19622:8;;;19529:16;;19659:19;;19529:16;:159;;:::i;8639:486:65:-;8752:5;;8745:20;;;-1:-1:-1;;;8745:20:65;;;;8712:17;;-1:-1:-1;;;;;8752:5:65;;8745:18;;:20;;;;;8752:5;;8745:20;;;;;;;8752:5;;8745:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8820:23;:21;:23::i;:::-;8775:68;;8776:20;;;;8775:68;;8798:18;;8775:68;;;;;:::i;:::-;-1:-1:-1;;8775:68:65;;;;;;;;;;:::i;:::-;-1:-1:-1;;8860:5:65;;8853:63;;-1:-1:-1;;;8853:63:65;;-1:-1:-1;;;;;8860:5:65;;;;-1:-1:-1;8853:21:65;;:63;;8875:20;;8897:18;;8853:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8926:12:65;;;;8956:10;;8968:5;;8926:51;;-1:-1:-1;;;8926:51:65;;-1:-1:-1;;;;;8926:29:65;;;;-1:-1:-1;8926:29:65;;:51;;8956:10;8968:5;;;;8926:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9078:6:65;;9087:5;;9094:10;;8994:124;;;-1:-1:-1;;;;;9078:6:65;;;8994:124;;;61800:34:115;9087:5:65;;;61850:18:115;;;61843:43;61922:15;;61902:18;;;61895:43;9022:14:65;61954:18:115;;;;61947:34;;;;8994:124:65;;;;;;;;;;61734:19:115;;;;8994:124:65;;-1:-1:-1;;;8994:124:65;;;;;-1:-1:-1;;;;;8994:124:65;-1:-1:-1;;;8994:124:65;;;;8639:486::o;6724:244:60:-;6789:61;;;;;;;;;6806:5;6789:61;-1:-1:-1;;;;;6789:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6813:3;6789:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;6789:61:60;3711:5:65;3753:16;:::i;6789:61:60:-;6861:45;6879:10;6891:14;6861:17;:45::i;:::-;6916:18;;6949:5;;6916:45;;-1:-1:-1;;;6916:45:60;;-1:-1:-1;;;;;6916:18:60;;;;:32;;:45;;6949:5;;;6956:4;;6916:18;:45;;:::i;5094:676::-;5155:61;;;;;;;;;5172:5;5155:61;-1:-1:-1;;;;;5155:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5179:3;5155:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;5155:61:60;3711:5:65;3753:16;:::i;5155:61:60:-;5227:18;;5268:5;;5227:47;;-1:-1:-1;;;5227:47:60;;-1:-1:-1;;;;;5268:5:60;;;5227:18;:47;;8544:51:115;5227:18:60;;;:24;;5259:7;;8517:18:115;;5227:47:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5313:5:60;:10;5285:43;;-1:-1:-1;5294:30:60;;-1:-1:-1;;;;;;5313:10:60;;-1:-1:-1;5294:18:60;:30::i;5285:43::-;5366:6;;5338:49;;5347:26;;-1:-1:-1;;;;;5366:6:60;5347:18;:26::i;5338:49::-;5420:5;:10;5397:45;;-1:-1:-1;;;;;5420:10:60;22665:16:65;5406:25:60;22577:111:65;5397:45:60;5475:6;;5452:40;;-1:-1:-1;;;;;5475:6:60;22665:16:65;5461:21:60;22577:111:65;5452:40:60;5503:18;;5536:5;;5503:42;;-1:-1:-1;;;5503:42:60;;-1:-1:-1;;;;;5503:18:60;;;;:32;;:42;;5536:5;;;5503:18;;;:42;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5584:5:60;:10;5556:43;;-1:-1:-1;5565:30:60;;-1:-1:-1;;;;;;5584:10:60;5565:18;:30::i;5556:43::-;5637:6;;5609:49;;5618:26;;-1:-1:-1;;;;;5637:6:60;5618:18;:26::i;5609:49::-;5691:5;:10;5668:45;;-1:-1:-1;;;;;5691:10:60;22665:16:65;5677:25:60;22577:111:65;10902:367;10991:5;:15;;;-1:-1:-1;;;;;10991:27:65;;11032:10;11056:7;11077:18;11109:20;11143:9;10991:171;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10983:5;:179;;-1:-1:-1;;;;;;10983:179:65;-1:-1:-1;;;;;10983:179:65;;;;;;;;;11172:12;;;;11202:10;;11172:51;;-1:-1:-1;;;11172:51:65;;:29;;;;;;;:51;;-1:-1:-1;;11172:51:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11242:5:65;;11233:29;;-1:-1:-1;;;11233:29:65;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;11233:8:65;;-1:-1:-1;11233:29:65;;-1:-1:-1;;;;;11242:5:65;;11233:29;;;:::i;19159:348::-;19382:15;;19452:6;;19354:146;;19300:26;;-1:-1:-1;;;;;19382:15:65;;;;:34;;19354:146;;19431:6;;19439:11;;19452:6;;;19460:8;;19470:19;;19354:146;;;:::i;556:597:60:-;594:61;;;;;;;;;611:5;594:61;-1:-1:-1;;;;;594:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:3;594:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;594:61:60;3711:5:65;3753:16;:::i;594:61:60:-;694:3;:8;666:51;;675:28;;-1:-1:-1;;;;;694:8:60;675:18;:28::i;666:51::-;755:6;;727:39;;736:26;;-1:-1:-1;;;;;755:6:60;736:18;:26::i;727:39::-;799:3;:8;776:50;;-1:-1:-1;;;;;799:8:60;22665:16:65;785:23:60;22577:111:65;776:50:60;859:6;;836:40;;-1:-1:-1;;;;;859:6:60;22665:16:65;845:21:60;22577:111:65;836:40:60;887:16;;926:5;;887:45;;-1:-1:-1;;;887:45:60;;-1:-1:-1;;;;;926:5:60;;;887:16;:45;;8544:51:115;887:16:60;;;:22;;917:7;;8517:18:115;;887:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;971:3:60;:8;943:41;;-1:-1:-1;952:28:60;;-1:-1:-1;;;;;;971:8:60;;-1:-1:-1;952:18:60;:28::i;943:41::-;1022:6;;994:49;;1003:26;;-1:-1:-1;;;;;1022:6:60;1003:18;:26::i;800:106:1:-;858:18;;-1:-1:-1;;;858:18:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;858:7:1;;:18;;866:3;;871:4;;858:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;886:13:1;;-1:-1:-1;;;886:13:1;;-1:-1:-1;;;;;8562:32:115;;886:13:1;;;8544:51:115;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;886:8:1;;-1:-1:-1;8517:18:115;;886:13:1;8398:203:115;16646:689:65;16741:27;16784:21;16822:6;-1:-1:-1;;;;;16808:21:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16808:21:65;;16784:45;;16839:25;16881:6;-1:-1:-1;;;;;16867:21:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16867:21:65;;16839:49;;16898:24;16939:6;-1:-1:-1;;;;;16925:21:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16925:21:65;;16898:48;;16956:19;16990:6;-1:-1:-1;;;;;16978:19:65;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16956:41;;17012:9;17007:163;17027:6;17023:1;:10;17007:163;;;17064:7;;17054;;-1:-1:-1;;;;;17064:7:65;;;;17054:4;;17059:1;;17054:7;;;;;;:::i;:::-;-1:-1:-1;;;;;17054:17:65;;;:7;;;;;;;;;;;:17;17099:5;:1;17103;17099:5;:::i;:::-;17085:8;17094:1;17085:11;;;;;;;;:::i;:::-;;;;;;:19;;;;;17131:2;17118:7;17126:1;17118:10;;;;;;;;:::i;:::-;;;;;;:15;;;;;17147:12;;;;;;;;;;;;:4;17152:1;17147:7;;;;;;;;:::i;:::-;;;;;;:12;;;;17035:3;;;;;:::i;:::-;;;;17007:163;;;-1:-1:-1;17225:9:65;;17269:5;:10;17281:5;;17197:131;;-1:-1:-1;;;;;17225:9:65;;;;:29;;17197:131;;17269:10;;;;17281:5;;;17288:4;;17294:8;;17304:7;;17313:4;;17197:131;;;:::i;1743:354:60:-;1796:61;;;;;;;;;1813:5;1796:61;-1:-1:-1;;;;;1796:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1820:3;1796:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;1796:61:60;3711:5:65;3753:16;:::i;1796:61:60:-;1988:9;;1897:115;;;-1:-1:-1;;;;;1988:9:60;;;1897:115;;;;8544:51:115;;;;1897:115:60;;;;;;;;;;8517:18:115;;;;1897:115:60;;;;;;;-1:-1:-1;;;;;1897:115:60;-1:-1:-1;;;1897:115:60;;;1868:154;-1:-1:-1;;;1868:154:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;1868:15:60;;:154;;1897:115;1868:154;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2032:16:60;;2079:9;;2032:58;;-1:-1:-1;;;2032:58:60;;-1:-1:-1;;;;;2079:9:60;;;2032:16;:58;;8544:51:115;2032:16:60;;;-1:-1:-1;2032:22:60;;-1:-1:-1;2062:7:60;;8517:18:115;;2032:58:60;8398:203:115;24357:646:65;24557:7;24578:9;24601;24635:18;597:105:19;24744:6:65;:11;;;24773:9;24800:5;24823:8;;;;;:::i;:::-;24679:193;;;;;;63369:25:115;;;;-1:-1:-1;;;;;63468:15:115;;;63448:18;;;63441:43;63520:15;;;;63500:18;;;63493:43;63579:14;63572:22;63552:18;;;63545:50;63611:19;;;63604:35;63655:19;;;63648:35;;;24823:8:65;-1:-1:-1;63341:19:115;;24679:193:65;63088:601:115;6300:418:60;6361:61;;;;;;;;;6378:5;6361:61;-1:-1:-1;;;;;6361:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6385:3;6361:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;6361:61:60;3711:5:65;3753:16;:::i;6361:61:60:-;6433:16;;6472:5;;6433:45;;-1:-1:-1;;;6433:45:60;;-1:-1:-1;;;;;6472:5:60;;;6433:16;:45;;8544:51:115;6433:16:60;;;:22;;6463:7;;8517:18:115;;6433:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6609:9:60;;6518:115;;;-1:-1:-1;;;;;6609:9:60;;;6518:115;;;;8544:51:115;;;;6518:115:60;;;;;;;;;;8517:18:115;;;;6518:115:60;;;;;;;-1:-1:-1;;;;;6518:115:60;-1:-1:-1;;;6518:115:60;;;6489:154;-1:-1:-1;;;6489:154:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;6489:15:60;;-1:-1:-1;6489:154:60;;-1:-1:-1;6489:154:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6653:18:60;;6694:9;;6653:58;;-1:-1:-1;;;6653:58:60;;-1:-1:-1;;;;;6653:18:60;;;;-1:-1:-1;6653:32:60;;-1:-1:-1;6653:58:60;;6694:9;;;;6706:4;;6653:18;:58;;:::i;9664:427:65:-;9786:8;:20;;;;;-1:-1:-1;;;9786:20:65;-1:-1:-1;;;;9786:20:65;;;;;;;9816:8;:20;;;9846:12;;;;9876:10;;9846:51;;-1:-1:-1;;;9846:51:65;;-1:-1:-1;;;;;9846:29:65;;;;;;:51;;9888:5;;;;;;;-1:-1:-1;;9846:51:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9926:8:65;;9948:5;;9926:28;;-1:-1:-1;;;9926:28:65;;-1:-1:-1;;;;;9948:5:65;;;9926:28;;;8544:51:115;9926:8:65;;;-1:-1:-1;9926:21:65;;-1:-1:-1;8517:18:115;;9926:28:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9915:7;9907:47;9908:5;9907:47;;-1:-1:-1;;;;;;9907:47:65;-1:-1:-1;;;;;9907:47:65;;;;;;;;;9996:10;;9972:35;;-1:-1:-1;;;9972:35:65;;8562:32:115;;9972:35:65;;;8544:51:115;9907:47:65;9972:23;;8517:18:115;;9972:35:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9964:5;:43;10038:5;;10017:27;;10031:5;;-1:-1:-1;;;;;10038:5:65;10017:13;:27::i;:::-;10064:5;;10055:29;;-1:-1:-1;;;10055:29:65;;-1:-1:-1;;;;;;;;;;;1671:64:0;10055:8:65;;:29;;-1:-1:-1;;;;;10064:5:65;;10055:29;;;:::i;15739:273:60:-;15778:62;;;;;;;;;15795:5;15778:62;-1:-1:-1;;;;;15778:62:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15802:3;15778:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;;15778:62:60;:16;:62::i;:::-;15879:3;:8;15851:52;;15860:28;;-1:-1:-1;;;;;15879:8:60;15860:18;:28::i;:::-;3711:5:65;15851:8:60;:52::i;:::-;15913:16;;15937:5;;15913:41;;-1:-1:-1;;;15913:41:60;;-1:-1:-1;;;;;15913:16:60;;;;:23;;:41;;15937:5;;;15944:9;;15913:16;:41;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15992:3:60;:8;15964:41;;-1:-1:-1;15973:28:60;;-1:-1:-1;;;;;;15992:8:60;15973:18;:28::i;21468:318:65:-;21681:12;;21729:5;;21653:126;;21599:26;;-1:-1:-1;;;;;21681:12:65;;;;:26;;21653:126;;21722:5;;21729;;21736:3;;21741:7;;21750:18;;21653:126;;;:::i;15195:448:60:-;15249:61;;;;;;;;;15266:5;15249:61;-1:-1:-1;;;;;15249:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15273:3;15249:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;15249:61:60;3711:5:65;3753:16;:::i;15249:61:60:-;15321:16;;15360:5;;15321:45;;-1:-1:-1;;;15321:45:60;;-1:-1:-1;;;;;15360:5:60;;;15321:16;:45;;8544:51:115;15321:16:60;;;:22;;15351:7;;8517:18:115;;15321:45:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15376:18:60;;15409:5;;15376:45;;-1:-1:-1;;;15376:45:60;;-1:-1:-1;;;;;15376:18:60;;;;-1:-1:-1;15376:32:60;;-1:-1:-1;15376:45:60;;-1:-1:-1;15409:5:60;;;15416:4;;15376:18;:45;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15439:15:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;15431:7:60;;-1:-1:-1;15439:19:60;;15457:1;15439:19;:::i;:::-;15431:28;;;;;;;;;;;;;8752:25:115;;8740:2;8725:18;;8606:177;15431:28:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15469:16:60;;15490:5;;15469:38;;-1:-1:-1;;;15469:38:60;;-1:-1:-1;;;;;15469:16:60;;;;-1:-1:-1;15469:20:60;;-1:-1:-1;15469:38:60;;15490:5;;;;15497:9;;15469:16;:38;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15534:52:60;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15534:52:60;-1:-1:-1;;;15534:52:60;;;15518:69;;-1:-1:-1;;;15518:69:60;;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;15518:15:60;;-1:-1:-1;15518:69:60;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15597:16:60;;15619:5;;15597:39;;-1:-1:-1;;;15597:39:60;;-1:-1:-1;;;;;15597:16:60;;;;-1:-1:-1;15597:21:60;;-1:-1:-1;15597:39:60;;15619:5;;;;15626:9;;15597:16;:39;;:::i;27570:564::-;27622:62;;;;;;;;;27639:5;27622:62;-1:-1:-1;;;;;27622:62:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27646:3;27622:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;;27622:62:60;:16;:62::i;:::-;27704:5;;27716;;27694:32;;-1:-1:-1;;;27694:32:60;;-1:-1:-1;;;;;27704:5:60;;;;27694:21;;:32;;27716:5;;;27723:2;;27694:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27736:16:60;;27760:5;;27736:41;;-1:-1:-1;;;27736:41:60;;-1:-1:-1;;;;;27736:16:60;;;;-1:-1:-1;27736:23:60;;-1:-1:-1;27736:41:60;;27760:5;;;;27767:9;;27736:16;:41;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27856:5:60;;27875:3;:8;27788:26;;-1:-1:-1;27817:92:60;;-1:-1:-1;;;;;;27856:5:60;;;;27875:8;27897:2;27817:25;:92::i;:::-;27941:14;;;27953:1;27941:14;;;;;;;;;27788:121;;-1:-1:-1;27919:19:60;;27941:14;;;;;;;;;;;;;;;;;;;;;27919:36;;27975:13;27965:4;27970:1;27965:7;;;;;;;;:::i;:::-;;;;;;;;;;:23;28005:5;;28022;;27998:30;;-1:-1:-1;;;27998:30:60;;-1:-1:-1;;;;;28022:5:60;;;27998:30;;;8544:51:115;28005:5:60;;;27998:23;;8517:18:115;;27998:30:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28038:16:60;;:32;;-1:-1:-1;;;28038:32:60;;-1:-1:-1;;;;;28038:16:60;;;;:26;;:32;;28065:4;;28038:16;:32;;:::i;23363:825::-;23416:61;;;;;;;;;23433:5;23416:61;-1:-1:-1;;;;;23416:61:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23440:3;23416:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3711:5:65;3753:16;23416:61:60;3711:5:65;3753:16;:::i;23416:61:60:-;23487:37;;;;;;;;;23513:5;23487:37;-1:-1:-1;;;;;23487:37:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23520:3;23487:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;:37::i;:::-;23617:5;;23636:3;:8;23535:33;;23571:98;;-1:-1:-1;;;;;23617:5:60;;;;23636:8;23658:1;23571:32;:98::i;:::-;23701:14;;;23713:1;23701:14;;;;;;;;;23535:134;;-1:-1:-1;23679:19:60;;23701:14;;;;;;;;;;;;;;;;;;;;;23679:36;;23735:20;23725:4;23730:1;23725:7;;;;;;;;:::i;:::-;;;;;;;;;;:30;23784:7;;23803:3;:8;23775:40;;-1:-1:-1;;;23775:40:60;;23766:53;;-1:-1:-1;;;;;23784:7:60;;;;23775:27;;:40;;23803:8;;;;23784:7;;23775:40;;;:::i;23766:53::-;23847:7;;23866:3;:8;23838:40;;-1:-1:-1;;;23838:40:60;;23829:53;;-1:-1:-1;;;;;23847:7:60;;;;23838:27;;:40;;23866:8;;;;23876:1;;23838:40;;;:::i;23829:53::-;23910:7;;23929:3;:8;23901:40;;-1:-1:-1;;;23901:40:60;;23892:53;;-1:-1:-1;;;;;23910:7:60;;;;23901:27;;:40;;23929:8;;;;23939:1;;23901:40;;;:::i;23892:53::-;23956:16;;:32;;-1:-1:-1;;;23956:32:60;;-1:-1:-1;;;;;23956:16:60;;;;:26;;:32;;23983:4;;23956:16;:32;;:::i;5202:262:0:-;5264:1;5259;:6;5255:203;;5286:41;;;;;63896:2:115;63878:21;;;63935:2;63915:18;;;63908:30;63974:34;63969:2;63954:18;;63947:62;-1:-1:-1;;;64040:2:115;64025:18;;64018:32;64082:3;64067:19;;63694:398;5286:41:0;;;;;;;;5346:31;;;64309:21:115;;;64366:2;64346:18;;;64339:30;-1:-1:-1;;;64400:2:115;64385:18;;64378:40;64485:4;64470:20;;64463:36;;;5346:31:0;;;;;;;64450:3:115;5346:31:0;;;5396;;;64722:21:115;;;64779:2;64759:18;;;64752:30;-1:-1:-1;;;64813:2:115;64798:18;;64791:40;64898:4;64883:20;;64876:36;;;5396:31:0;;;;;;;64863:3:115;5396:31:0;;;5441:6;:4;:6::i;9590:156:1:-;9696:12;;;:22;;-1:-1:-1;;;;;;9696:22:1;-1:-1:-1;;;;;9696:22:1;;;;;;;;;;:12;9590:156::o;10874:120::-;10954:33;10968:4;10982:3;10954:13;:33::i;2410:424:0:-;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;2445:359;;2645:67;;2482:11;;-1:-1:-1;;;;;;;;;;;1671:64:0;2579:43;;2645:67;;1671:64;;-1:-1:-1;;;2670:17:0;2705:4;;2645:67;;;:::i;:::-;;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;11185:1059:1:-;11301:12;;;;11337:9;;;;11378:11;;;;11422:10;;;11399:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11301:12:1;;;;11337:9;;;;;;11287:11;;11399:33;;11422:10;;11399:33;;11422:10;11399:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11443:17;11480:4;11486:12;11494:3;11486:7;:12::i;:::-;11463:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11463:36:1;;;;;;;;;-1:-1:-1;;;;;11514:15:1;;;;;;:10;;;11463:36;11514:15;;;;;;-1:-1:-1;;;;;;11514:21:1;;;;;;;;;11463:36;;-1:-1:-1;11514:21:1;;:15;;11546:34;;11563:3;;11568:11;;11546:34;;:::i;:::-;;;;-1:-1:-1;;11546:34:1;;;;;;;;;11536:45;;11546:34;11536:45;;;;11514:68;;;;;;;;;;-1:-1:-1;11514:68:1;;;;11509:110;;11598:10;11603:4;11598;:10::i;:::-;;11509:110;-1:-1:-1;;;;;11651:15:1;;11628:12;11651:15;;;;;;;;;;;-1:-1:-1;;;;;;11651:21:1;;;;;;;;;11683:34;;11651:21;;11628:12;;11683:34;;11700:3;;11705:11;;11683:34;;:::i;:::-;;;;;;;;;;;;;11673:45;;;;;;11651:68;;;;;;;;;;;;11643:77;;11628:92;;11731:12;11770:17;11791:3;-1:-1:-1;;;;;11791:14:1;11806:4;11791:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11767:44:1;-1:-1:-1;11832:36:1;;-1:-1:-1;11767:44:1;11853:14;11856:11;11853:2;:14;:::i;:::-;11832;:36::i;:::-;11903:28;;-1:-1:-1;;;11903:28:1;;11825:43;;-1:-1:-1;11888:12:1;;-1:-1:-1;;;;;;;;;;;;11903:17:1;;;:28;;11921:3;;11926:4;;11903:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11888:43;;11954:4;11946;:12;11942:141;;11974:98;;-1:-1:-1;;;11974:98:1;;;;;;;:::i;:::-;;;;;;;;;12092:34;;-1:-1:-1;;;12092:34:1;;-1:-1:-1;;;;;;;;;;;12092:18:1;;;:34;;12111:3;;12116:4;;12122:3;;12092:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12143:12:1;;;12136:19;;-1:-1:-1;;;;;;12136:19:1;;;-1:-1:-1;12172:9:1;;;12165:16;;-1:-1:-1;;12165:16:1;;;12191:17;-1:-1:-1;12198:10:1;;12143:12;12191:17;:::i;:::-;12225:4;:11;;12218:18;;;11277:967;;;;;;;;11185:1059;;:::o;12553:350::-;12612:12;12640:19;12672:1;:8;12683:2;12672:13;;;;:::i;:::-;-1:-1:-1;;;;;12662:24:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12662:24:1;;12640:46;;12701:9;12696:177;12720:1;:8;12716:1;:12;12696:177;;;12749:9;12761:1;12763;12761:4;;;;;;;;:::i;:::-;;;;;;;12749:16;;12847:1;12841;12837:2;12833:10;12829:2;12825:19;12817:6;12813:32;12806:43;12788:75;12730:3;;;;;:::i;:::-;;;;12696:177;;;-1:-1:-1;12890:6:1;12553:350;-1:-1:-1;;12553:350:1:o;6443:3141::-;6569:12;;;;6605:9;;;;6646:11;;;;6690:10;;;6667:33;;;;;;;;;;;;;;;;;;;6532:7;;-1:-1:-1;;;;;6569:12:1;;6605:9;;;6646:11;6532:7;;6667:33;;6690:10;;6667:33;;;6690:10;6667:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;6751:15:1;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;6751:21:1;;;;;;;;;6783:34;;6667:33;;-1:-1:-1;6751:21:1;:15;;-1:-1:-1;6783:34:1;;-1:-1:-1;6667:33:1;;6805:11;;6783:34;;:::i;:::-;;;;-1:-1:-1;;6783:34:1;;;;;;;;;6773:45;;6783:34;6773:45;;;;6751:68;;;;;;;;;;-1:-1:-1;6751:68:1;;;;6747:174;;;-1:-1:-1;;;;;6842:15:1;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;6842:21:1;;;;;;;;;6874:34;;6842:21;;:10;6874:34;;6891:3;;6896:11;;6874:34;;:::i;:::-;;;;;;;;;;;;;6864:45;;;;;;6842:68;;;;;;;;;;;;6835:75;;;;;;6443:3141;;;:::o;6747:174::-;6930:17;6967:4;6973:12;6981:3;6973:7;:12::i;:::-;6950:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6930:56;;-1:-1:-1;;;;;;;;;;;5717:37:1;;-1:-1:-1;;;;;6996:19:1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7027:12;7066:17;7087:3;-1:-1:-1;;;;;7087:14:1;7102:4;7087:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7063:44:1;-1:-1:-1;7128:36:1;;-1:-1:-1;7063:44:1;7149:14;7152:11;7149:2;:14;:::i;7128:36::-;7222:35;;-1:-1:-1;;;7222:35:1;;-1:-1:-1;;;;;8562:32:115;;7222:35:1;;;8544:51:115;7121:43:1;;-1:-1:-1;7194:22:1;;-1:-1:-1;;;;;;;;;;;;7222:21:1;;;8517:18:115;;7222:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7222:35:1;;;;;;;;;;;;:::i;:::-;7193:64;;;7271:5;:12;7287:1;7271:17;7267:2013;;7304:12;-1:-1:-1;;;;;;;;;;;5717:37:1;;-1:-1:-1;;;;;7319:17:1;;7337:3;7342:5;7348:1;7342:8;;;;;;;;:::i;:::-;;;;;;;7319:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7304:47;-1:-1:-1;7304:47:1;7365:106;;7412:44;7433:3;7446:5;7452:1;7446:8;;;;;;;;:::i;:::-;;;;;;;7438:17;;7412:44;;;;;;;:::i;:::-;;;;;;;;7365:106;7496:4;7488;:12;7484:149;;7520:98;;-1:-1:-1;;;7520:98:1;;;;;;;:::i;:::-;7651:86;7661:3;7666:4;7699:3;7704:11;7682:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7672:45;;;;;;7727:5;7733:1;7727:8;;;;;;;;:::i;:::-;;;;;;;7719:17;;7651:86;;;;;;;;;:::i;:::-;;;;;;;;7830:5;7836:1;7830:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7751:15:1;;7822:17;7751:15;;;;;;;;;;-1:-1:-1;;;;;;7751:21:1;;;;;;;;;7783:34;;7830:8;;7751:21;;7783:34;;7800:3;;7805:11;;7783:34;;:::i;:::-;;;;-1:-1:-1;;7783:34:1;;;;;;;;;7773:45;;7783:34;7773:45;;;;7751:68;;;;;;;;;;;;-1:-1:-1;7751:68:1;;;:88;;;;-1:-1:-1;;;;;7853:15:1;;;;7924:4;7853:10;;;:15;;;;;-1:-1:-1;;;;;;7853:21:1;;;;;;;;;7885:34;;7924:4;;-1:-1:-1;7885:34:1;;7902:3;;7907:11;;7885:34;;:::i;:::-;;;;;;;-1:-1:-1;;7885:34:1;;;;;;7875:45;;7885:34;7875:45;;;;7853:68;;;;;;;;;;-1:-1:-1;7853:68:1;:75;;-1:-1:-1;;7853:75:1;;;;;;;;;;-1:-1:-1;7267:2013:1;;;7964:1;7949:5;:12;:16;7945:1335;;;7986:9;7981:1206;8005:5;:12;8001:1;:16;7981:1206;;;8042:12;-1:-1:-1;;;;;;;;;;;5717:37:1;;-1:-1:-1;;;;;8057:17:1;;8075:3;8080:5;8086:1;8080:8;;;;;;;;:::i;:::-;;;;;;;8057:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8042:47;-1:-1:-1;8042:47:1;8107:114;;8158:44;8179:3;8192:5;8198:1;8192:8;;;;;;;;:::i;:::-;;;;;;;8184:17;;8158:44;;;;;;;:::i;:::-;;;;;;;;8107:114;-1:-1:-1;;;;;;;;;;;5717:37:1;;-1:-1:-1;;;;;8263:18:1;;8282:3;8287:5;8293:1;8287:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;8263:53:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8334:12;8364:17;8439:3;-1:-1:-1;;;;;8439:14:1;8454:4;8439:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8421:38:1;;-1:-1:-1;8421:38:1;-1:-1:-1;8488:36:1;8421:38;8509:14;8512:11;8509:2;:14;:::i;8488:36::-;8481:43;;8581:7;:37;;;;;-1:-1:-1;;;8592:4:1;:26;8581:37;8577:539;;;8716:86;8726:3;8731:4;8764:3;8769:11;8747:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8737:45;;;;;;8792:5;8798:1;8792:8;;;;;;;;:::i;:::-;;;;;;;8784:17;;8716:86;;;;;;;;;:::i;:::-;;;;;;;;8903:5;8909:1;8903:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;8824:15:1;;8895:17;8824:15;;;;;;;;;;-1:-1:-1;;;;;;8824:21:1;;;;;;;;;8856:34;;8903:8;;8824:21;;8856:34;;8873:3;;8878:11;;8856:34;;:::i;:::-;;;;;;;;;;;;;8846:45;;;;;;8824:68;;;;;;;;;;;:88;;;;9005:4;8934;:10;;:15;8945:3;-1:-1:-1;;;;;8934:15:1;-1:-1:-1;;;;;8934:15:1;;;;;;;;;;;;:21;8950:4;-1:-1:-1;;;;;8934:21:1;;-1:-1:-1;;;;;8934:21:1;;;;;;;;;;;;;:68;8983:3;8988:11;8966:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8956:45;;;;;;8934:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5717:37:1;;-1:-1:-1;;;;;9031:18:1;;9050:3;9055:5;9061:1;9055:8;;;;;;;;:::i;:::-;;;;;;;9065:4;9031:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9092:5;;;;;8577:539;-1:-1:-1;;;;;;;;;;;5717:37:1;;-1:-1:-1;;;;;9133:18:1;;9152:3;9157:5;9163:1;9157:8;;;;;;;;:::i;:::-;;;;;;;9167:4;9133:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8024:1163;;;8019:3;;;;;:::i;:::-;;;;7981:1206;;;;7945:1335;;;9217:52;;-1:-1:-1;;;9217:52:1;;67818:2:115;9217:52:1;;;67800:21:115;67857:2;67837:18;;;67830:30;67896:34;67876:18;;;67869:62;-1:-1:-1;;;67947:18:115;;;67940:32;67989:19;;9217:52:1;67616:398:115;9217:52:1;-1:-1:-1;;;;;9298:15:1;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;9298:21:1;;;;;;;;;9330:34;;9298:21;;:15;9330:34;;9347:3;;9352:11;;9330:34;;:::i;:::-;;;;-1:-1:-1;;9330:34:1;;;;;;;;;9320:45;;9330:34;9320:45;;;;9298:68;;;;;;;;;;-1:-1:-1;9298:68:1;;;;9290:89;;;;-1:-1:-1;;;9290:89:1;;68221:2:115;9290:89:1;;;68203:21:115;68260:1;68240:18;;;68233:29;-1:-1:-1;;;68278:18:115;;;68271:38;68326:18;;9290:89:1;68019:331:115;9290:89:1;9397:12;;;9390:19;;-1:-1:-1;;;;;;9390:19:1;;;9426:9;;;9419:16;;-1:-1:-1;;9419:16:1;;;9445:17;-1:-1:-1;9452:10:1;;9397:12;9445:17;:::i;:::-;9472:18;9479:11;;;9472:18;;;-1:-1:-1;;;;;9509:15:1;;;;;;;;;;;;-1:-1:-1;;;;;;9509:21:1;;;;;;;;;9541:34;;9509:21;;9472:18;9541:34;;9558:3;;9563:11;;9541:34;;:::i;:::-;;;;;;;;;;;;;9531:45;;;;;;9509:68;;;;;;;;;;;;9502:75;;;;;;;;;6443:3141;;;:::o;12250:297::-;12324:7;12343:11;12365;12390:2;12379:1;:8;:13;:29;;12400:1;:8;12379:29;;;12395:2;12379:29;12365:43;;12423:6;12418:103;12439:3;12435:1;:7;12418:103;;;12504:5;:1;12508;12504:5;:::i;:::-;12478:1;12480:10;12489:1;12480:6;:10;:::i;:::-;12478:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;12478:13:1;12470:40;;12463:47;;;;;12444:3;;;;:::i;:::-;;;;12418:103;;;-1:-1:-1;12537:3:1;;12250:297;-1:-1:-1;;;;12250:297:1:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:115;-1:-1:-1;;;;;89:31:115;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;289:127::-;350:10;345:3;341:20;338:1;331:31;381:4;378:1;371:15;405:4;402:1;395:15;421:255;493:2;487:9;535:6;523:19;;-1:-1:-1;;;;;557:34:115;;593:22;;;554:62;551:88;;;619:18;;:::i;:::-;655:2;648:22;421:255;:::o;681:275::-;752:2;746:9;817:2;798:13;;-1:-1:-1;;794:27:115;782:40;;-1:-1:-1;;;;;837:34:115;;873:22;;;834:62;831:88;;;899:18;;:::i;:::-;935:2;928:22;681:275;;-1:-1:-1;681:275:115:o;961:183::-;1021:4;-1:-1:-1;;;;;1046:6:115;1043:30;1040:56;;;1076:18;;:::i;:::-;-1:-1:-1;1121:1:115;1117:14;1133:4;1113:25;;961:183::o;1149:662::-;1203:5;1256:3;1249:4;1241:6;1237:17;1233:27;1223:55;;1274:1;1271;1264:12;1223:55;1310:6;1297:20;1336:4;1360:60;1376:43;1416:2;1376:43;:::i;:::-;1360:60;:::i;:::-;1454:15;;;1540:1;1536:10;;;;1524:23;;1520:32;;;1485:12;;;;1564:15;;;1561:35;;;1592:1;1589;1582:12;1561:35;1628:2;1620:6;1616:15;1640:142;1656:6;1651:3;1648:15;1640:142;;;1722:17;;1710:30;;1760:12;;;;1673;;1640:142;;;-1:-1:-1;1800:5:115;1149:662;-1:-1:-1;;;;;;1149:662:115:o;1816:799::-;1952:6;1960;1968;1976;2029:3;2017:9;2008:7;2004:23;2000:33;1997:53;;;2046:1;2043;2036:12;1997:53;2085:9;2072:23;2104:31;2129:5;2104:31;:::i;:::-;2154:5;-1:-1:-1;2206:2:115;2191:18;;2178:32;;-1:-1:-1;2261:2:115;2246:18;;2233:32;-1:-1:-1;;;;;2314:14:115;;;2311:34;;;2341:1;2338;2331:12;2311:34;2364:61;2417:7;2408:6;2397:9;2393:22;2364:61;:::i;:::-;2354:71;;2478:2;2467:9;2463:18;2450:32;2434:48;;2507:2;2497:8;2494:16;2491:36;;;2523:1;2520;2513:12;2491:36;;2546:63;2601:7;2590:8;2579:9;2575:24;2546:63;:::i;:::-;2536:73;;;1816:799;;;;;;;:::o;2774:258::-;2846:1;2856:113;2870:6;2867:1;2864:13;2856:113;;;2946:11;;;2940:18;2927:11;;;2920:39;2892:2;2885:10;2856:113;;;2987:6;2984:1;2981:13;2978:48;;;-1:-1:-1;;3022:1:115;3004:16;;2997:27;2774:258::o;3037:257::-;3078:3;3116:5;3110:12;3143:6;3138:3;3131:19;3159:63;3215:6;3208:4;3203:3;3199:14;3192:4;3185:5;3181:16;3159:63;:::i;:::-;3276:2;3255:15;-1:-1:-1;;3251:29:115;3242:39;;;;3283:4;3238:50;;3037:257;-1:-1:-1;;3037:257:115:o;3299:217::-;3446:2;3435:9;3428:21;3409:4;3466:44;3506:2;3495:9;3491:18;3483:6;3466:44;:::i;:::-;3458:52;3299:217;-1:-1:-1;;;3299:217:115:o;3521:1186::-;3572:5;3620:6;3608:9;3603:3;3599:19;3595:32;3592:52;;;3640:1;3637;3630:12;3592:52;3662:22;;:::i;:::-;3653:31;;3707:29;3726:9;3707:29;:::i;:::-;3700:5;3693:44;3797:2;3786:9;3782:18;3769:32;3764:2;3757:5;3753:14;3746:56;3834:38;3868:2;3857:9;3853:18;3834:38;:::i;:::-;3829:2;3822:5;3818:14;3811:62;3905:38;3939:2;3928:9;3924:18;3905:38;:::i;:::-;3900:2;3893:5;3889:14;3882:62;3977:39;4011:3;4000:9;3996:19;3977:39;:::i;:::-;3971:3;3964:5;3960:15;3953:64;4050:39;4084:3;4073:9;4069:19;4050:39;:::i;:::-;4044:3;4037:5;4033:15;4026:64;4123:39;4157:3;4146:9;4142:19;4123:39;:::i;:::-;4117:3;4110:5;4106:15;4099:64;4196:39;4230:3;4219:9;4215:19;4196:39;:::i;:::-;4190:3;4183:5;4179:15;4172:64;4255:3;4290:38;4324:2;4313:9;4309:18;4290:38;:::i;:::-;4274:14;;;4267:62;4348:3;4383:38;4402:18;;;4383:38;:::i;:::-;4367:14;;;4360:62;4441:3;4476:38;4495:18;;;4476:38;:::i;:::-;4460:14;;;4453:62;4534:3;4569:38;4588:18;;;4569:38;:::i;:::-;4553:14;;;4546:62;4627:3;4662:38;4681:18;;;4662:38;:::i;:::-;4646:14;;;4639:62;4650:5;3521:1186;-1:-1:-1;;3521:1186:115:o;4712:118::-;4798:5;4791:13;4784:21;4777:5;4774:32;4764:60;;4820:1;4817;4810:12;4835:602;4973:6;4981;4989;4997;5005;5058:3;5046:9;5037:7;5033:23;5029:33;5026:53;;;5075:1;5072;5065:12;5026:53;5098:42;5132:7;5121:9;5098:42;:::i;:::-;5088:52;;5159;5203:7;5197:3;5186:9;5182:19;5159:52;:::i;:::-;5149:62;;5258:3;5247:9;5243:19;5230:33;5220:43;;5310:3;5299:9;5295:19;5282:33;5272:43;;5365:3;5354:9;5350:19;5337:33;5379:28;5401:5;5379:28;:::i;:::-;5426:5;5416:15;;;4835:602;;;;;;;;:::o;5442:315::-;5510:6;5518;5571:2;5559:9;5550:7;5546:23;5542:32;5539:52;;;5587:1;5584;5577:12;5539:52;5626:9;5613:23;5645:31;5670:5;5645:31;:::i;:::-;5695:5;5747:2;5732:18;;;;5719:32;;-1:-1:-1;;;5442:315:115:o;5762:146::-;5833:20;;5882:1;5872:12;;5862:40;;5898:1;5895;5888:12;5913:288;6003:6;6011;6064:2;6052:9;6043:7;6039:23;6035:32;6032:52;;;6080:1;6077;6070:12;6032:52;6103:32;6125:9;6103:32;:::i;:::-;6093:42;;6154:41;6191:2;6180:9;6176:18;6154:41;:::i;:::-;6144:51;;5913:288;;;;;:::o;6206:247::-;6265:6;6318:2;6306:9;6297:7;6293:23;6289:32;6286:52;;;6334:1;6331;6324:12;6286:52;6373:9;6360:23;6392:31;6417:5;6392:31;:::i;6458:388::-;6526:6;6534;6587:2;6575:9;6566:7;6562:23;6558:32;6555:52;;;6603:1;6600;6593:12;6555:52;6642:9;6629:23;6661:31;6686:5;6661:31;:::i;:::-;6711:5;-1:-1:-1;6768:2:115;6753:18;;6740:32;6781:33;6740:32;6781:33;:::i;:::-;6833:7;6823:17;;;6458:388;;;;;:::o;6851:187::-;6900:4;-1:-1:-1;;;;;6925:6:115;6922:30;6919:56;;;6955:18;;:::i;:::-;-1:-1:-1;7021:2:115;7000:15;-1:-1:-1;;6996:29:115;7027:4;6992:40;;6851:187::o;7043:338::-;7108:5;7137:53;7153:36;7182:6;7153:36;:::i;7137:53::-;7128:62;;7213:6;7206:5;7199:21;7253:3;7244:6;7239:3;7235:16;7232:25;7229:45;;;7270:1;7267;7260:12;7229:45;7319:6;7314:3;7307:4;7300:5;7296:16;7283:43;7373:1;7366:4;7357:6;7350:5;7346:18;7342:29;7335:40;7043:338;;;;;:::o;7386:222::-;7429:5;7482:3;7475:4;7467:6;7463:17;7459:27;7449:55;;7500:1;7497;7490:12;7449:55;7522:80;7598:3;7589:6;7576:20;7569:4;7561:6;7557:17;7522:80;:::i;7613:671::-;7700:6;7708;7761:2;7749:9;7740:7;7736:23;7732:32;7729:52;;;7777:1;7774;7767:12;7729:52;7817:9;7804:23;-1:-1:-1;;;;;7887:2:115;7879:6;7876:14;7873:34;;;7903:1;7900;7893:12;7873:34;7926:50;7968:7;7959:6;7948:9;7944:22;7926:50;:::i;:::-;7916:60;;8029:2;8018:9;8014:18;8001:32;7985:48;;8058:2;8048:8;8045:16;8042:36;;;8074:1;8071;8064:12;8042:36;-1:-1:-1;8097:24:115;;8152:4;8144:13;;8140:27;-1:-1:-1;8130:55:115;;8181:1;8178;8171:12;8130:55;8204:74;8270:7;8265:2;8252:16;8247:2;8243;8239:11;8204:74;:::i;:::-;8194:84;;;7613:671;;;;;:::o;8788:180::-;8847:6;8900:2;8888:9;8879:7;8875:23;8871:32;8868:52;;;8916:1;8913;8906:12;8868:52;-1:-1:-1;8939:23:115;;8788:180;-1:-1:-1;8788:180:115:o;8973:334::-;9087:6;9095;9148:3;9136:9;9127:7;9123:23;9119:33;9116:53;;;9165:1;9162;9155:12;9116:53;9188:42;9222:7;9211:9;9188:42;:::i;:::-;9178:52;;9249;9293:7;9287:3;9276:9;9272:19;9249:52;:::i;9312:104::-;-1:-1:-1;;;;;;9377:32:115;9365:45;;9312:104::o;9421:461::-;9474:3;9512:5;9506:12;9539:6;9534:3;9527:19;9565:4;9594:2;9589:3;9585:12;9578:19;;9631:2;9624:5;9620:14;9652:1;9662:195;9676:6;9673:1;9670:13;9662:195;;;9741:13;;-1:-1:-1;;;;;9737:39:115;9725:52;;9797:12;;;;9832:15;;;;9773:1;9691:9;9662:195;;;-1:-1:-1;9873:3:115;;9421:461;-1:-1:-1;;;;;9421:461:115:o;9887:831::-;10153:2;10165:21;;;10235:13;;10138:18;;;10257:22;;;10105:4;;10332;;10310:2;10295:18;;;10359:15;;;10105:4;10402:196;10416:6;10413:1;10410:13;10402:196;;;10481:13;;-1:-1:-1;;;;;;10477:40:115;10465:53;;10538:12;;;;10573:15;;;;10438:1;10431:9;10402:196;;;10406:3;;;10643:9;10638:3;10634:19;10629:2;10618:9;10614:18;10607:47;10671:41;10708:3;10700:6;10671:41;:::i;:::-;10663:49;9887:831;-1:-1:-1;;;;;;9887:831:115:o;10942:456::-;11019:6;11027;11035;11088:2;11076:9;11067:7;11063:23;11059:32;11056:52;;;11104:1;11101;11094:12;11056:52;11143:9;11130:23;11162:31;11187:5;11162:31;:::i;:::-;11212:5;-1:-1:-1;11269:2:115;11254:18;;11241:32;11282:33;11241:32;11282:33;:::i;:::-;10942:456;;11334:7;;-1:-1:-1;;;11388:2:115;11373:18;;;;11360:32;;10942:456::o;11403:403::-;11526:6;11534;11542;11595:3;11583:9;11574:7;11570:23;11566:33;11563:53;;;11612:1;11609;11602:12;11563:53;11635:42;11669:7;11658:9;11635:42;:::i;:::-;11625:52;;11696;11740:7;11734:3;11723:9;11719:19;11696:52;:::i;:::-;11686:62;;11795:3;11784:9;11780:19;11767:33;11757:43;;11403:403;;;;;:::o;11811:525::-;11897:6;11905;11913;11921;11974:3;11962:9;11953:7;11949:23;11945:33;11942:53;;;11991:1;11988;11981:12;11942:53;12030:9;12017:23;12049:31;12074:5;12049:31;:::i;:::-;12099:5;-1:-1:-1;12156:2:115;12141:18;;12128:32;12169:33;12128:32;12169:33;:::i;:::-;11811:525;;12221:7;;-1:-1:-1;;;;12275:2:115;12260:18;;12247:32;;12326:2;12311:18;12298:32;;11811:525::o;12341:359::-;12432:6;12440;12493:3;12481:9;12472:7;12468:23;12464:33;12461:53;;;12510:1;12507;12500:12;12461:53;12533:42;12567:7;12556:9;12533:42;:::i;:::-;12523:52;;12625:3;12614:9;12610:19;12597:33;12639:31;12664:5;12639:31;:::i;12705:223::-;12787:6;12840:3;12828:9;12819:7;12815:23;12811:33;12808:53;;;12857:1;12854;12847:12;12808:53;12880:42;12914:7;12903:9;12880:42;:::i;13115:383::-;13192:6;13200;13208;13261:2;13249:9;13240:7;13236:23;13232:32;13229:52;;;13277:1;13274;13267:12;13229:52;13316:9;13303:23;13335:31;13360:5;13335:31;:::i;:::-;13385:5;13437:2;13422:18;;13409:32;;-1:-1:-1;13488:2:115;13473:18;;;13460:32;;13115:383;-1:-1:-1;;;13115:383:115:o;13503:495::-;13600:6;13608;13616;13669:3;13657:9;13648:7;13644:23;13640:33;13637:53;;;13686:1;13683;13676:12;13637:53;13709:42;13743:7;13732:9;13709:42;:::i;:::-;13699:52;;13801:3;13790:9;13786:19;13773:33;13815:31;13840:5;13815:31;:::i;:::-;13865:5;-1:-1:-1;13922:3:115;13907:19;;13894:33;13936:30;13894:33;13936:30;:::i;:::-;13985:7;13975:17;;;13503:495;;;;;:::o;14003:1729::-;14215:13;;-1:-1:-1;;;;;8355:31:115;8343:44;;14183:3;14168:19;;14296:4;14288:6;14284:17;14278:24;14271:4;14260:9;14256:20;14249:54;14350:4;14342:6;14338:17;14332:24;14365:54;14413:4;14402:9;14398:20;14384:12;-1:-1:-1;;;;;8355:31:115;8343:44;;8289:104;14365:54;;14468:4;14460:6;14456:17;14450:24;14483:56;14533:4;14522:9;14518:20;14502:14;-1:-1:-1;;;;;8355:31:115;8343:44;;8289:104;14483:56;;14588:4;14580:6;14576:17;14570:24;14603:56;14653:4;14642:9;14638:20;14622:14;-1:-1:-1;;;;;8355:31:115;8343:44;;8289:104;14603:56;;14708:4;14700:6;14696:17;14690:24;14723:56;14773:4;14762:9;14758:20;14742:14;-1:-1:-1;;;;;8355:31:115;8343:44;;8289:104;14723:56;;14828:4;14820:6;14816:17;14810:24;14843:56;14893:4;14882:9;14878:20;14862:14;-1:-1:-1;;;;;8355:31:115;8343:44;;8289:104;14843:56;;14948:4;14940:6;14936:17;14930:24;14963:56;15013:4;15002:9;14998:20;14982:14;-1:-1:-1;;;;;8355:31:115;8343:44;;8289:104;14963:56;-1:-1:-1;15038:6:115;15081:15;;;15075:22;-1:-1:-1;;;;;8355:31:115;;;15141:18;;;8343:44;;;;15179:6;15222:15;;;15216:22;8355:31;;15282:18;;;8343:44;15320:6;15363:15;;;15357:22;8355:31;;15423:18;;;8343:44;15461:6;15504:15;;;15498:22;8355:31;;15564:18;;;8343:44;15602:6;15646:15;;;15640:22;8355:31;15707:18;;;;8343:44;;;;14003:1729;:::o;15737:592::-;15820:6;15828;15836;15844;15897:3;15885:9;15876:7;15872:23;15868:33;15865:53;;;15914:1;15911;15904:12;15865:53;15953:9;15940:23;15972:31;15997:5;15972:31;:::i;:::-;16022:5;-1:-1:-1;16079:2:115;16064:18;;16051:32;16092:33;16051:32;16092:33;:::i;:::-;16144:7;-1:-1:-1;16198:2:115;16183:18;;16170:32;;-1:-1:-1;16254:2:115;16239:18;;16226:32;16267:30;16226:32;16267:30;:::i;:::-;15737:592;;;;-1:-1:-1;15737:592:115;;-1:-1:-1;;15737:592:115:o;16334:322::-;16403:6;16456:2;16444:9;16435:7;16431:23;16427:32;16424:52;;;16472:1;16469;16462:12;16424:52;16512:9;16499:23;-1:-1:-1;;;;;16537:6:115;16534:30;16531:50;;;16577:1;16574;16567:12;16531:50;16600;16642:7;16633:6;16622:9;16618:22;16600:50;:::i;:::-;16590:60;16334:322;-1:-1:-1;;;;16334:322:115:o;16661:633::-;16776:6;16784;16792;16800;16808;16861:3;16849:9;16840:7;16836:23;16832:33;16829:53;;;16878:1;16875;16868:12;16829:53;16901:42;16935:7;16924:9;16901:42;:::i;:::-;16891:52;;16993:3;16982:9;16978:19;16965:33;17007:31;17032:5;17007:31;:::i;:::-;17057:5;-1:-1:-1;17114:3:115;17099:19;;17086:33;17128:30;17086:33;17128:30;:::i;:::-;16661:633;;;;-1:-1:-1;17177:7:115;;17231:3;17216:19;;17203:33;;-1:-1:-1;17283:3:115;17268:19;17255:33;;16661:633;-1:-1:-1;;16661:633:115:o;17822:248::-;17890:6;17898;17951:2;17939:9;17930:7;17926:23;17922:32;17919:52;;;17967:1;17964;17957:12;17919:52;-1:-1:-1;;17990:23:115;;;18060:2;18045:18;;;18032:32;;-1:-1:-1;17822:248:115:o;18328:292::-;18419:6;18427;18480:3;18468:9;18459:7;18455:23;18451:33;18448:53;;;18497:1;18494;18487:12;18448:53;18520:42;18554:7;18543:9;18520:42;:::i;:::-;18510:52;18609:3;18594:19;;;;18581:33;;-1:-1:-1;;;18328:292:115:o;18625:422::-;18722:6;18730;18738;18791:3;18779:9;18770:7;18766:23;18762:33;18759:53;;;18808:1;18805;18798:12;18759:53;18831:42;18865:7;18854:9;18831:42;:::i;:::-;18821:52;;18923:3;18912:9;18908:19;18895:33;18937:28;18959:5;18937:28;:::i;:::-;18625:422;;18984:5;;-1:-1:-1;;;19036:3:115;19021:19;;;;19008:33;;18625:422::o;19052:127::-;19113:10;19108:3;19104:20;19101:1;19094:31;19144:4;19141:1;19134:15;19168:4;19165:1;19158:15;19184:217;19224:1;19250;19240:132;;19294:10;19289:3;19285:20;19282:1;19275:31;19329:4;19326:1;19319:15;19357:4;19354:1;19347:15;19240:132;-1:-1:-1;19386:9:115;;19184:217::o;19406:285::-;-1:-1:-1;;;;;19609:32:115;;;;19591:51;;19673:2;19658:18;;19651:34;19579:2;19564:18;;19406:285::o;20086:469::-;20147:3;20185:5;20179:12;20212:6;20207:3;20200:19;20238:4;20267:2;20262:3;20258:12;20251:19;;20289:5;20286:1;20279:16;20331:2;20328:1;20318:16;20352:1;20362:168;20376:6;20373:1;20370:13;20362:168;;;20437:13;;20425:26;;20471:12;;;;20518:1;20506:14;;;;20391:9;20362:168;;20560:363;-1:-1:-1;;;;;20764:32:115;;20746:51;;20833:2;20828;20813:18;;20806:30;;;-1:-1:-1;;20853:64:115;;20898:18;;20890:6;20853:64;:::i;20928:435::-;20981:3;21019:5;21013:12;21046:6;21041:3;21034:19;21072:4;21101:2;21096:3;21092:12;21085:19;;21138:2;21131:5;21127:14;21159:1;21169:169;21183:6;21180:1;21177:13;21169:169;;;21244:13;;21232:26;;21278:12;;;;21313:15;;;;21205:1;21198:9;21169:169;;21368:947;-1:-1:-1;;;;;21822:15:115;;;21804:34;;21869:2;21854:18;;21847:34;;;21917:15;;21912:2;21897:18;;21890:43;21969:3;21964:2;21949:18;;21942:31;;;21747:4;;21996:57;;22033:19;;22025:6;21996:57;:::i;:::-;22102:9;22094:6;22090:22;22084:3;22073:9;22069:19;22062:51;22136:44;22173:6;22165;22136:44;:::i;:::-;22122:58;;22229:9;22221:6;22217:22;22211:3;22200:9;22196:19;22189:51;22257:52;22302:6;22294;22257:52;:::i;:::-;22249:60;21368:947;-1:-1:-1;;;;;;;;;21368:947:115:o;22320:635::-;-1:-1:-1;;;;;22679:15:115;;;22661:34;;22731:15;;;;22726:2;22711:18;;22704:43;22778:2;22763:18;;22756:34;22821:2;22806:18;;22799:34;;;;22641:3;22864;22849:19;;22842:32;;;22604:4;22890:19;;;22883:30;22945:3;22930:19;;22320:635::o;24257:127::-;24318:10;24313:3;24309:20;24306:1;24299:31;24349:4;24346:1;24339:15;24373:4;24370:1;24363:15;24389:614;24440:3;24478:5;24472:12;24505:6;24500:3;24493:19;24531:4;24572:2;24567:3;24563:12;24597:11;24624;24617:18;;24674:6;24671:1;24667:14;24660:5;24656:26;24644:38;;24716:2;24709:5;24705:14;24737:1;24747:230;24761:6;24758:1;24755:13;24747:230;;;24832:5;24826:4;24822:16;24817:3;24810:29;24860:37;24892:4;24883:6;24877:13;24860:37;:::i;:::-;24955:12;;;;24852:45;-1:-1:-1;24920:15:115;;;;24783:1;24776:9;24747:230;;;-1:-1:-1;24993:4:115;;24389:614;-1:-1:-1;;;;;;;24389:614:115:o;25008:277::-;25205:2;25194:9;25187:21;25168:4;25225:54;25275:2;25264:9;25260:18;25252:6;25225:54;:::i;25290:429::-;25343:5;25396:3;25389:4;25381:6;25377:17;25373:27;25363:55;;25414:1;25411;25404:12;25363:55;25443:6;25437:13;25474:49;25490:32;25519:2;25490:32;:::i;25474:49::-;25548:2;25539:7;25532:19;25594:3;25587:4;25582:2;25574:6;25570:15;25566:26;25563:35;25560:55;;;25611:1;25608;25601:12;25560:55;25624:64;25685:2;25678:4;25669:7;25665:18;25658:4;25650:6;25646:17;25624:64;:::i;25724:1132::-;25828:6;25859:2;25902;25890:9;25881:7;25877:23;25873:32;25870:52;;;25918:1;25915;25908:12;25870:52;25951:9;25945:16;-1:-1:-1;;;;;26021:2:115;26013:6;26010:14;26007:34;;;26037:1;26034;26027:12;26007:34;26075:6;26064:9;26060:22;26050:32;;26120:7;26113:4;26109:2;26105:13;26101:27;26091:55;;26142:1;26139;26132:12;26091:55;26171:2;26165:9;26194:60;26210:43;26250:2;26210:43;:::i;26194:60::-;26288:15;;;26370:1;26366:10;;;;26358:19;;26354:28;;;26319:12;;;;26394:19;;;26391:39;;;26426:1;26423;26416:12;26391:39;26458:2;26454;26450:11;26470:356;26486:6;26481:3;26478:15;26470:356;;;26565:3;26559:10;26601:2;26588:11;26585:19;26582:109;;;26645:1;26674:2;26670;26663:14;26582:109;26716:67;26775:7;26770:2;26756:11;26752:2;26748:20;26744:29;26716:67;:::i;:::-;26704:80;;-1:-1:-1;26804:12:115;;;;26503;;26470:356;;;-1:-1:-1;26845:5:115;25724:1132;-1:-1:-1;;;;;;;;25724:1132:115:o;27140:233::-;27217:1;27210:5;27207:12;27197:143;;27262:10;27257:3;27253:20;27250:1;27243:31;27297:4;27294:1;27287:15;27325:4;27322:1;27315:15;27197:143;27349:18;;27140:233::o;27378:296::-;27558:2;27543:18;;27570:40;27547:9;27592:6;27570:40;:::i;:::-;27619:49;27664:2;27653:9;27649:18;27641:6;27619:49;:::i;27679:495::-;27740:3;27778:5;27772:12;27805:6;27800:3;27793:19;27831:4;27860:2;27855:3;27851:12;27844:19;;27882:5;27879:1;27872:16;27924:2;27921:1;27911:16;27945:1;27955:194;27969:6;27966:1;27963:13;27955:194;;;28034:13;;-1:-1:-1;;;;;28030:39:115;28018:52;;28090:12;;;;28066:1;28125:14;;;;27984:9;27955:194;;28179:2938;28271:12;;2706:19;;;28239:3;20026:14;;;2758:4;20057:18;;;2749:14;;;28239:3;;28271:12;28239:3;28454:959;28494:6;28490:1;28477:11;28473:19;28470:31;28454:959;;;28609:6;28603:13;28629:38;28663:3;28656:4;28651:3;28647:14;28629:38;:::i;:::-;28690:4;-1:-1:-1;;;;;;28760:3:115;28776:55;28818:12;;;28798:13;;;28794:22;;28776:55;:::i;:::-;28854:2;28879:3;28895:55;28946:2;28941:3;28937:12;28932:2;28925:4;28921:2;28917:13;28913:22;28895:55;:::i;:::-;28973:2;28998:3;29014:55;29065:2;29060:3;29056:12;29051:2;29044:4;29040:2;29036:13;29032:22;29014:55;:::i;:::-;29082;29133:2;29128:3;29124:12;29119:2;29112:4;29108:2;29104:13;29100:22;29082:55;:::i;:::-;;;29150;29201:2;29196:3;29192:12;29187:2;29180:4;29176:2;29172:13;29168:22;29150:55;:::i;:::-;;;29218;29269:2;29264:3;29260:12;29255:2;29248:4;29244:2;29240:13;29236:22;29218:55;:::i;:::-;;29286:47;29328:3;29323;29319:13;29314:2;29308:4;29304:13;29286:47;:::i;:::-;-1:-1:-1;;;29362:3:115;29353:13;;;;;29401:1;29389:14;;;;;28556:1;28539:19;28454:959;;;29436:13;;;29461:23;;;29458:180;;;29507:40;29543:3;29534:6;29529:3;29525:16;29507:40;:::i;:::-;29576:4;29567:14;;;;;29626:1;29609:19;29458:180;29666:6;29653:11;29650:23;29647:207;;;29696:67;29759:3;29722;29718:16;;;-1:-1:-1;;;;;;29714:43:115;29696:67;:::i;:::-;29792:4;29783:14;;;;;29842:1;29825:19;29647:207;29882:6;29869:11;29866:23;29863:207;;;29912:67;29975:3;29938;29934:16;;;-1:-1:-1;;;;;;29930:43:115;29912:67;:::i;:::-;30008:4;29999:14;;;;;30058:1;30041:19;29863:207;30098:6;30085:11;30082:23;30079:207;;;30128:67;30191:3;30154;30150:16;;;-1:-1:-1;;;;;;30146:43:115;30128:67;:::i;:::-;30224:4;30215:14;;;;;30274:1;30257:19;30079:207;30314:6;30301:11;30298:23;30295:206;;;30344:66;30406:3;30370:2;30366:15;;;-1:-1:-1;;;;;;30362:42:115;30344:66;:::i;:::-;30439:4;30430:14;;;;;30489:1;30472:19;30295:206;30529:6;30516:11;30513:23;30510:206;;;30559:66;30621:3;30585:2;30581:15;;;-1:-1:-1;;;;;;30577:42:115;30559:66;:::i;:::-;30654:4;30645:14;;;;;30704:1;30687:19;30510:206;30744:6;30731:11;30728:23;30725:208;;;30774:68;30838:3;30800:4;30796:17;;;-1:-1:-1;;;;;;30792:44:115;30774:68;:::i;:::-;30871:4;30862:14;;;;;30921:1;30904:19;30725:208;30961:6;30948:11;30945:23;30942:150;;;30991:57;31044:3;-1:-1:-1;;;;;;31009:33:115;;30991:57;:::i;:::-;31077:4;31072:3;31068:14;31061:21;;30942:150;-1:-1:-1;31108:3:115;;28179:2938;-1:-1:-1;;;;28179:2938:115:o;31122:964::-;31549:6;31538:9;31531:25;31592:3;31587:2;31576:9;31572:18;31565:31;31512:4;31619:65;31679:3;31668:9;31664:19;31656:6;31619:65;:::i;:::-;31732:9;31724:6;31720:22;31715:2;31704:9;31700:18;31693:50;31766:52;31811:6;31803;31766:52;:::i;:::-;31752:66;;31866:9;31858:6;31854:22;31849:2;31838:9;31834:18;31827:50;31900:51;31944:6;31936;31900:51;:::i;:::-;31886:65;;32000:9;31992:6;31988:22;31982:3;31971:9;31967:19;31960:51;32028:52;32073:6;32065;32028:52;:::i;:::-;32020:60;31122:964;-1:-1:-1;;;;;;;;31122:964:115:o;32378:184::-;32448:6;32501:2;32489:9;32480:7;32476:23;32472:32;32469:52;;;32517:1;32514;32507:12;32469:52;-1:-1:-1;32540:16:115;;32378:184;-1:-1:-1;32378:184:115:o;33466:128::-;33506:3;33537:1;33533:6;33530:1;33527:13;33524:39;;;33543:18;;:::i;:::-;-1:-1:-1;33579:9:115;;33466:128::o;34132:335::-;34211:6;34264:2;34252:9;34243:7;34239:23;34235:32;34232:52;;;34280:1;34277;34270:12;34232:52;34313:9;34307:16;-1:-1:-1;;;;;34338:6:115;34335:30;34332:50;;;34378:1;34375;34368:12;34332:50;34401:60;34453:7;34444:6;34433:9;34429:22;34401:60;:::i;34472:466::-;34647:3;34685:6;34679:13;34701:53;34747:6;34742:3;34735:4;34727:6;34723:17;34701:53;:::i;:::-;34817:13;;34776:16;;;;34839:57;34817:13;34776:16;34873:4;34861:17;;34839:57;:::i;:::-;34912:20;;34472:466;-1:-1:-1;;;;34472:466:115:o;34943:125::-;34983:4;35011:1;35008;35005:8;35002:34;;;35016:18;;:::i;:::-;-1:-1:-1;35053:9:115;;34943:125::o;35073:659::-;35138:5;35191:3;35184:4;35176:6;35172:17;35168:27;35158:55;;35209:1;35206;35199:12;35158:55;35238:6;35232:13;35264:4;35288:60;35304:43;35344:2;35304:43;:::i;35288:60::-;35382:15;;;35468:1;35464:10;;;;35452:23;;35448:32;;;35413:12;;;;35492:15;;;35489:35;;;35520:1;35517;35510:12;35489:35;35556:2;35548:6;35544:15;35568:135;35584:6;35579:3;35576:15;35568:135;;;35650:10;;35638:23;;35681:12;;;;35601;;35568:135;;35737:363;35832:6;35885:2;35873:9;35864:7;35860:23;35856:32;35853:52;;;35901:1;35898;35891:12;35853:52;35934:9;35928:16;-1:-1:-1;;;;;35959:6:115;35956:30;35953:50;;;35999:1;35996;35989:12;35953:50;36022:72;36086:7;36077:6;36066:9;36062:22;36022:72;:::i;36105:266::-;36281:2;36270:9;36263:21;36244:4;36301:64;36361:2;36350:9;36346:18;36338:6;36301:64;:::i;36376:266::-;36552:2;36541:9;36534:21;36515:4;36572:64;36632:2;36621:9;36617:18;36609:6;36572:64;:::i;36836:345::-;37048:2;37037:9;37030:21;37011:4;37068:64;37128:2;37117:9;37113:18;37105:6;37068:64;:::i;:::-;37060:72;;37168:6;37163:2;37152:9;37148:18;37141:34;36836:345;;;;;:::o;38936:383::-;-1:-1:-1;;;;;39202:15:115;;;39184:34;;39254:15;;;;39249:2;39234:18;;39227:43;39301:2;39286:18;;39279:34;;;;39134:2;39119:18;;38936:383::o;39863:135::-;39902:3;39923:17;;;39920:43;;39943:18;;:::i;:::-;-1:-1:-1;39990:1:115;39979:13;;39863:135::o;40203:312::-;40282:6;40290;40343:2;40331:9;40322:7;40318:23;40314:32;40311:52;;;40359:1;40356;40349:12;40311:52;40391:9;40385:16;40410:31;40435:5;40410:31;:::i;:::-;40505:2;40490:18;;;;40484:25;40460:5;;40484:25;;-1:-1:-1;;;40203:312:115:o;40520:385::-;-1:-1:-1;;;;;40788:15:115;;;40770:34;;40835:2;40820:18;;40813:34;;;;40883:15;;;40878:2;40863:18;;40856:43;40720:2;40705:18;;40520:385::o;41300:432::-;-1:-1:-1;;;;;41530:32:115;;;;41512:51;;41599:2;41594;41579:18;;41572:30;;;41638:2;41618:18;;;41611:30;-1:-1:-1;;;41672:2:115;41657:18;;41650:40;41722:3;41707:19;;41300:432::o;41737:426::-;-1:-1:-1;;;;;41967:32:115;;;;41949:51;;42036:2;42031;42016:18;;42009:30;;;42075:1;42055:18;;;42048:29;-1:-1:-1;;;42108:2:115;42093:18;;42086:35;42153:3;42138:19;;41737:426::o;42455:690::-;-1:-1:-1;;;;;42809:15:115;;;42791:34;;42861:15;;;42856:2;42841:18;;42834:43;42913:15;;42908:2;42893:18;;42886:43;42960:2;42945:18;;42938:34;;;43003:3;42988:19;;42981:35;;;43053:3;42771;43032:19;;43025:32;;;42734:4;;43074:65;;43119:19;;43111:6;43074:65;:::i;43530:642::-;43817:25;;;-1:-1:-1;;;;;43878:32:115;;43873:2;43858:18;;43851:60;43947:3;43942:2;43927:18;;43920:31;;;-1:-1:-1;;43974:65:115;;44019:19;;44011:6;43974:65;:::i;:::-;44087:9;44079:6;44075:22;44070:2;44059:9;44055:18;44048:50;44115:51;44159:6;44151;44115:51;:::i;:::-;44107:59;43530:642;-1:-1:-1;;;;;;;43530:642:115:o;44177:251::-;44247:6;44300:2;44288:9;44279:7;44275:23;44271:32;44268:52;;;44316:1;44313;44306:12;44268:52;44348:9;44342:16;44367:31;44392:5;44367:31;:::i;44927:956::-;-1:-1:-1;;;;;45381:15:115;;;45363:34;;45433:15;;;45428:2;45413:18;;45406:43;45485:15;;45480:2;45465:18;;45458:43;45537:3;45532:2;45517:18;;45510:31;;;45306:4;;45564:57;;45601:19;;45593:6;45564:57;:::i;45888:618::-;-1:-1:-1;;;;;46214:15:115;;;46196:34;;46266:15;;;46261:2;46246:18;;46239:43;46318:15;;46313:2;46298:18;;46291:43;46365:2;46350:18;;46343:34;;;46176:3;46408;46393:19;;46386:32;;;46139:4;;46435:65;;46480:19;;46472:6;46435:65;:::i;46511:609::-;-1:-1:-1;;;;;46837:15:115;;;46819:34;;46884:2;46869:18;;46862:34;;;46932:15;;46927:2;46912:18;;46905:43;46979:2;46964:18;;46957:34;;;46799:3;47022;47007:19;;47000:32;;;46762:4;;47049:65;;47094:19;;47086:6;47049:65;:::i;47414:274::-;47543:3;47581:6;47575:13;47597:53;47643:6;47638:3;47631:4;47623:6;47619:17;47597:53;:::i;:::-;47666:16;;;;;47414:274;-1:-1:-1;;47414:274:115:o;48276:314::-;-1:-1:-1;;;;;48451:32:115;;48433:51;;48520:2;48515;48500:18;;48493:30;;;-1:-1:-1;;48540:44:115;;48565:18;;48557:6;48540:44;:::i;49703:395::-;49789:6;49797;49805;49858:2;49846:9;49837:7;49833:23;49829:32;49826:52;;;49874:1;49871;49864:12;49826:52;49906:9;49900:16;49956:4;49949:5;49945:16;49938:5;49935:27;49925:55;;49976:1;49973;49966:12;49925:55;50044:2;50029:18;;50023:25;50088:2;50073:18;;;50067:25;49999:5;;50023:25;;-1:-1:-1;50067:25:115;49703:395;-1:-1:-1;;;49703:395:115:o;50103:665::-;-1:-1:-1;;;;;50454:15:115;;;50436:34;;50506:15;;50501:2;50486:18;;50479:43;50558:3;50553:2;50538:18;;50531:31;;;50379:4;;50585:57;;50622:19;;50614:6;50585:57;:::i;:::-;50690:9;50682:6;50678:22;50673:2;50662:9;50658:18;50651:50;50718:44;50755:6;50747;50718:44;:::i;51693:245::-;51760:6;51813:2;51801:9;51792:7;51788:23;51784:32;51781:52;;;51829:1;51826;51819:12;51781:52;51861:9;51855:16;51880:28;51902:5;51880:28;:::i;52934:371::-;-1:-1:-1;;;;;;53119:33:115;;53107:46;;53176:13;;53089:3;;53198:61;53176:13;53248:1;53239:11;;53232:4;53220:17;;53198:61;:::i;:::-;53279:16;;;;53297:1;53275:24;;52934:371;-1:-1:-1;;;52934:371:115:o;53310:385::-;53389:6;53397;53450:2;53438:9;53429:7;53425:23;53421:32;53418:52;;;53466:1;53463;53456:12;53418:52;53498:9;53492:16;53517:31;53542:5;53517:31;:::i;:::-;53617:2;53602:18;;53596:25;53567:5;;-1:-1:-1;53630:33:115;53596:25;53630:33;:::i;60658:472::-;60907:2;60896:9;60889:21;60870:4;60933:63;60992:2;60981:9;60977:18;60969:6;60933:63;:::i;:::-;61044:9;61036:6;61032:22;61027:2;61016:9;61012:18;61005:50;61072:52;61117:6;61109;61072:52;:::i;:::-;61064:60;60658:472;-1:-1:-1;;;;;60658:472:115:o;61992:1091::-;-1:-1:-1;;;;;62517:15:115;;;62499:34;;62569:15;;62564:2;62549:18;;62542:43;62621:3;62616:2;62601:18;;62594:31;;;62442:4;;62648:57;;62685:19;;62677:6;62648:57;:::i;:::-;62753:9;62745:6;62741:22;62736:2;62725:9;62721:18;62714:50;62787:44;62824:6;62816;62787:44;:::i;:::-;62773:58;;62880:9;62872:6;62868:22;62862:3;62851:9;62847:19;62840:51;62914:44;62951:6;62943;62914:44;:::i;:::-;62900:58;;63007:9;62999:6;62995:22;62989:3;62978:9;62974:19;62967:51;63035:42;63070:6;63062;63035:42;:::i;64923:345::-;-1:-1:-1;;;;;65143:32:115;;;;65125:51;;65207:2;65192:18;;65185:34;;;;65250:2;65235:18;;65228:34;65113:2;65098:18;;64923:345::o;65273:610::-;65519:13;;65462:3;;65493;;65572:4;65599:15;;;65462:3;65642:175;65656:6;65653:1;65650:13;65642:175;;;65719:13;;65705:28;;65755:14;;;;65792:15;;;;65678:1;65671:9;65642:175;;;-1:-1:-1;;65826:21:115;;;-1:-1:-1;65863:14:115;;;;;-1:-1:-1;;;65273:610:115:o;65888:168::-;65928:7;65994:1;65990;65986:6;65982:14;65979:1;65976:21;65971:1;65964:9;65957:17;65953:45;65950:71;;;66001:18;;:::i;:::-;-1:-1:-1;66041:9:115;;65888:168::o;66061:484::-;66263:2;66245:21;;;66302:2;66282:18;;;66275:30;66341:34;66336:2;66321:18;;66314:62;66412:34;66407:2;66392:18;;66385:62;-1:-1:-1;;;66478:3:115;66463:19;;66456:47;66535:3;66520:19;;66061:484::o;66550:614::-;66679:6;66687;66740:2;66728:9;66719:7;66715:23;66711:32;66708:52;;;66756:1;66753;66746:12;66708:52;66789:9;66783:16;-1:-1:-1;;;;;66859:2:115;66851:6;66848:14;66845:34;;;66875:1;66872;66865:12;66845:34;66898:72;66962:7;66953:6;66942:9;66938:22;66898:72;:::i;:::-;66888:82;;67016:2;67005:9;67001:18;66995:25;66979:41;;67045:2;67035:8;67032:16;67029:36;;;67061:1;67058;67051:12;67029:36;;67084:74;67150:7;67139:8;67128:9;67124:24;67084:74;:::i;67169:442::-;-1:-1:-1;;;;;67416:32:115;;;;67398:51;;-1:-1:-1;;;;;;67485:33:115;;;;67480:2;67465:18;;67458:61;67550:2;67535:18;;67528:34;67593:2;67578:18;;67571:34;67385:3;67370:19;;67169:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "computeDigest(bytes32,bytes32)": "da111ec5",
    "computeDomainSeparator()": "6d5a0e99",
    "createUser(address,uint256)": "93dfc8eb",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployBaseVault((address,uint256,address,address,address,address,address,address,address,address,address,address,address),uint256)": "df6d791e",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "failed()": "ba414fa6",
    "getETHBalance(address)": "3bb66a7b",
    "getFractionBalance(address)": "2b356929",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "initializeBatchMigrationERC1155(address,uint256,uint256[],uint256[])": "0197112c",
    "initializeBatchWithdrawalERC1155(address,address,uint256)": "6ecdfaf8",
    "initializeBuyout((address,uint256,address,address,address,address,address,address,address,address,address,address,address),(address,uint256,address,address,address,address,address,address,address,address,address,address,address),uint256,uint256,bool)": "d7980140",
    "initializeDeploy()": "1a170315",
    "initializeDepositERC1155(uint256)": "ed169baf",
    "initializeDepositERC20(uint256)": "a48eddc2",
    "initializeDepositERC721(uint256)": "da9372b4",
    "initializeERC20Migration(address,uint256,uint256)": "7ff48b27",
    "initializeERC721Migration(address,uint256,uint256)": "dfed5e9c",
    "initializeMigration((address,uint256,address,address,address,address,address,address,address,address,address,address,address),(address,uint256,address,address,address,address,address,address,address,address,address,address,address),uint256,uint256,bool)": "05768ad8",
    "initializeNFTReceiver()": "37211854",
    "initializeWithdrawalERC1155(address,address,uint256,uint256)": "5a202f0a",
    "initializeWithdrawalERC20(address,address,uint256)": "f8142032",
    "initializeWithdrawalERC721(address,address,uint256)": "739f47eb",
    "mintERC1155(address,uint256)": "3c875b5f",
    "revertBuyoutState(uint8,uint8)": "117690b9",
    "rewind(uint256)": "2d6c17a3",
    "setApproval((address,uint256,address,address,address,address,address,address,address,address,address,address,address),address,bool)": "87002a3e",
    "setUp()": "0a9254e4",
    "setUpBatchWithdrawERC1155((address,uint256,address,address,address,address,address,address,address,address,address,address,address),(address,uint256,address,address,address,address,address,address,address,address,address,address,address))": "515989a3",
    "setUpBuyout((address,uint256,address,address,address,address,address,address,address,address,address,address,address),(address,uint256,address,address,address,address,address,address,address,address,address,address,address),uint256)": "4cc7992a",
    "setUpBuyoutCash((address,uint256,address,address,address,address,address,address,address,address,address,address,address),(address,uint256,address,address,address,address,address,address,address,address,address,address,address))": "7aa9f228",
    "setUpContract()": "bc73a8ec",
    "setUpCreateFor((address,uint256,address,address,address,address,address,address,address,address,address,address,address))": "628b8fa0",
    "setUpExecute((address,uint256,address,address,address,address,address,address,address,address,address,address,address))": "dd3ca255",
    "setUpFERC1155((address,uint256,address,address,address,address,address,address,address,address,address,address,address),address)": "5f3367c8",
    "setUpMetadata((address,uint256,address,address,address,address,address,address,address,address,address,address,address))": "bbbf54a9",
    "setUpMigration((address,uint256,address,address,address,address,address,address,address,address,address,address,address),(address,uint256,address,address,address,address,address,address,address,address,address,address,address),uint256)": "d1c6b8e0",
    "setUpMulticall((address,uint256,address,address,address,address,address,address,address,address,address,address,address))": "b334418a",
    "setUpPermit((address,uint256,address,address,address,address,address,address,address,address,address,address,address),bool,uint256)": "f54a3d43",
    "setUpProof()": "312b5490",
    "setUpUser(uint256,uint256)": "c8e2dba5",
    "setUpWETH()": "a260f7b5",
    "setUpWithdrawERC1155((address,uint256,address,address,address,address,address,address,address,address,address,address,address),(address,uint256,address,address,address,address,address,address,address,address,address,address,address))": "8e3a3161",
    "setUpWithdrawERC20((address,uint256,address,address,address,address,address,address,address,address,address,address,address),(address,uint256,address,address,address,address,address,address,address,address,address,address,address))": "c8ca9606",
    "setUpWithdrawERC721((address,uint256,address,address,address,address,address,address,address,address,address,address,address),(address,uint256,address,address,address,address,address,address,address,address,address,address,address))": "357baa0b",
    "signPermit((address,uint256,address,address,address,address,address,address,address,address,address,address,address),address,bool,uint256,uint256)": "a3d185f7",
    "signPermitAll((address,uint256,address,address,address,address,address,address,address,address,address,address,address),address,bool,uint256,uint256)": "eff06980",
    "skip(uint256)": "b9c071b4",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "testBatchWithdrawERC1155()": "fad6689d",
    "testBatchWithdrawERC1155Redeem()": "1dec4703",
    "testBatchWithdrawERC1155RevertNotAVault()": "1844df00",
    "testBatchWithdrawERC1155RevertNotAllowed()": "68100f1e",
    "testBatchWithdrawERC1155RevertStateINACTIVE()": "c4b49fe1",
    "testBuyFractionsNoDepositAmount()": "5941d5e7",
    "testBuyFractionsNotAVault()": "37583f0f",
    "testBuyFractionsRevertInvalidPayment()": "97e62a9e",
    "testBuyFractionsRevertStateINACTIVE()": "b423c7cc",
    "testBuyFractionsRevertTimeExpired()": "398f285f",
    "testBuyFractionsSingle()": "9d114318",
    "testCash()": "563dfd14",
    "testCashRevertNoFractions()": "f908bf67",
    "testCashRevertNotAVault()": "61aa3d4e",
    "testCashRevertStateINACTIVE()": "27a5b7fa",
    "testCashRevertStateLIVE()": "75f6b129",
    "testEndRevertNotAVault()": "c0f7b5c0",
    "testEndRevertStateINACTIVE()": "35e0d119",
    "testEndRevertTimeNotElapsed()": "01761934",
    "testEndSuccesfull()": "2f2732c4",
    "testEndUnsuccesfull()": "776a367c",
    "testRedeem()": "f72b5ffa",
    "testRedeemRevertNotAVault()": "62bc8b3c",
    "testRedeemRevertNotTotalSupply()": "da78ee5a",
    "testRedeemRevertStateLIVE()": "c8d1adf6",
    "testSellFractions()": "35e87791",
    "testSellFractionsNoDepositAmount()": "df4b95d3",
    "testSellFractionsRevertNotAVault()": "f1084b56",
    "testSellFractionsRevertNotApproved()": "c29d8dac",
    "testSellFractionsRevertStateINACTIVE()": "dd42ea64",
    "testSellFractionsRevertTimeExpired()": "938dcb04",
    "testSellFractionsSelfPermit()": "9aec5f4c",
    "testStart()": "e34323b8",
    "testStartNoFractions()": "b5ae5be1",
    "testStartRevertNotAVault()": "eef43c76",
    "testStartRevertNotApproved()": "c921c93a",
    "testStartRevertStateLIVE()": "02168ae2",
    "testStartRevertTotalSupply()": "445905be",
    "testStartRevertZeroDeposit()": "d9f9b2e6",
    "testWithdrawERC1155()": "531960df",
    "testWithdrawERC1155Redeem()": "c805cb5c",
    "testWithdrawERC1155RevertNotAVault()": "256f6bf7",
    "testWithdrawERC1155RevertNotAllowed()": "b1437474",
    "testWithdrawERC1155RevertStateINACTIVE()": "b37c0b52",
    "testWithdrawERC20()": "3ad2e8d3",
    "testWithdrawERC20Redeem()": "f9167324",
    "testWithdrawERC20RevertNotAVault()": "0cc68cef",
    "testWithdrawERC20RevertNotAllowed()": "b91369a1",
    "testWithdrawERC20RevertStateINACTIVE()": "abf3c835",
    "testWithdrawERC721()": "a65dcafe",
    "testWithdrawERC721Redeem()": "378c0afe",
    "testWithdrawERC721RevertNotAVault()": "87d7898c",
    "testWithdrawERC721RevertNotAllowed()": "3fc16abf",
    "testWithdrawERC721RevertStateINACTIVE()": "dce0d839",
    "tip(address,address,uint256)": "d82555f1",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "test/Buyout.t.sol",
    "id": 27247,
    "exportedSymbols": {
      "BaseVault": [
        21905
      ],
      "BaseVaultBS": [
        37412
      ],
      "Blacksmith": [
        37630
      ],
      "Buyout": [
        20060
      ],
      "BuyoutBS": [
        38314
      ],
      "BuyoutTest": [
        27246
      ],
      "DOMAIN_TYPEHASH": [
        16189
      ],
      "DSTest": [
        1786
      ],
      "FERC1155": [
        15080
      ],
      "FERC1155BS": [
        39034
      ],
      "IBuyout": [
        16823
      ],
      "IERC1155": [
        16946
      ],
      "IERC20": [
        17060
      ],
      "IERC721": [
        17185
      ],
      "IFERC1155": [
        17436
      ],
      "IMigration": [
        17706
      ],
      "IModule": [
        17740
      ],
      "IVault": [
        18095
      ],
      "IVaultFactory": [
        18145
      ],
      "IVaultRegistry": [
        18316
      ],
      "Metadata": [
        22700
      ],
      "MetadataBS": [
        43999
      ],
      "Migration": [
        21460
      ],
      "MigrationBS": [
        44801
      ],
      "Minter": [
        21588
      ],
      "MockERC1155": [
        18408
      ],
      "MockERC1155BS": [
        45319
      ],
      "MockERC20": [
        18449
      ],
      "MockERC20BS": [
        45692
      ],
      "MockERC721": [
        18526
      ],
      "MockERC721BS": [
        46122
      ],
      "MockModule": [
        18638
      ],
      "NFTReceiver": [
        22868
      ],
      "PERMIT_ALL_TYPEHASH": [
        16201
      ],
      "PERMIT_TYPEHASH": [
        16195
      ],
      "State": [
        16551
      ],
      "StdStorage": [
        2321
      ],
      "Supply": [
        22125
      ],
      "SupplyBS": [
        47475
      ],
      "Test": [
        2223
      ],
      "TestUtil": [
        34782
      ],
      "Transfer": [
        22200
      ],
      "TransferBS": [
        47802
      ],
      "TransferReference": [
        22072
      ],
      "Vault": [
        15472
      ],
      "VaultBS": [
        48367
      ],
      "VaultFactory": [
        15688
      ],
      "VaultFactoryBS": [
        48545
      ],
      "VaultRegistry": [
        16140
      ],
      "VaultRegistryBS": [
        48948
      ],
      "Vm": [
        3460
      ],
      "WETH": [
        14155
      ],
      "console": [
        11524
      ],
      "stdError": [
        2293
      ],
      "stdStorage": [
        3278
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:29797:60",
    "nodes": [
      {
        "id": 23538,
        "nodeType": "PragmaDirective",
        "src": "38:23:60",
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 23539,
        "nodeType": "ImportDirective",
        "src": "63:24:60",
        "absolutePath": "test/TestUtil.sol",
        "file": "./TestUtil.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27247,
        "sourceUnit": 34783,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27246,
        "nodeType": "ContractDefinition",
        "src": "89:29745:60",
        "nodes": [
          {
            "id": 23589,
            "nodeType": "FunctionDefinition",
            "src": "205:246:60",
            "body": {
              "id": 23588,
              "nodeType": "Block",
              "src": "229:222:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 23545,
                      "name": "setUpContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32760,
                      "src": "239:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 23546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "239:15:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23547,
                  "nodeType": "ExpressionStatement",
                  "src": "239:15:60"
                },
                {
                  "expression": {
                    "id": 23553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23548,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32209,
                      "src": "264:5:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$32206_storage",
                        "typeString": "struct TestUtil.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "313131",
                          "id": 23550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "282:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_111_by_1",
                            "typeString": "int_const 111"
                          },
                          "value": "111"
                        },
                        {
                          "hexValue": "31",
                          "id": 23551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "287:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_111_by_1",
                            "typeString": "int_const 111"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 23549,
                        "name": "setUpUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32977,
                        "src": "272:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_struct$_User_$32206_memory_ptr_$",
                          "typeString": "function (uint256,uint256) returns (struct TestUtil.User memory)"
                        }
                      },
                      "id": 23552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "272:17:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$32206_memory_ptr",
                        "typeString": "struct TestUtil.User memory"
                      }
                    },
                    "src": "264:25:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$32206_storage",
                      "typeString": "struct TestUtil.User storage ref"
                    }
                  },
                  "id": 23554,
                  "nodeType": "ExpressionStatement",
                  "src": "264:25:60"
                },
                {
                  "expression": {
                    "id": 23560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23555,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32212,
                      "src": "299:3:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$32206_storage",
                        "typeString": "struct TestUtil.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "323232",
                          "id": 23557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "315:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_222_by_1",
                            "typeString": "int_const 222"
                          },
                          "value": "222"
                        },
                        {
                          "hexValue": "32",
                          "id": 23558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "320:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_222_by_1",
                            "typeString": "int_const 222"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 23556,
                        "name": "setUpUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32977,
                        "src": "305:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_struct$_User_$32206_memory_ptr_$",
                          "typeString": "function (uint256,uint256) returns (struct TestUtil.User memory)"
                        }
                      },
                      "id": 23559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "305:17:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$32206_memory_ptr",
                        "typeString": "struct TestUtil.User memory"
                      }
                    },
                    "src": "299:23:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$32206_storage",
                      "typeString": "struct TestUtil.User storage ref"
                    }
                  },
                  "id": 23561,
                  "nodeType": "ExpressionStatement",
                  "src": "299:23:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23567,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "350:4:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BuyoutTest_$27246",
                              "typeString": "contract BuyoutTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BuyoutTest_$27246",
                              "typeString": "contract BuyoutTest"
                            }
                          ],
                          "id": 23566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "342:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23565,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "342:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "342:13:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4275796f757454657374",
                        "id": 23569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "357:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a79ac8813f088c7ae02336bbc12bc6b6e5f4f30989b56a77223873362ef876ec",
                          "typeString": "literal_string \"BuyoutTest\""
                        },
                        "value": "BuyoutTest"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a79ac8813f088c7ae02336bbc12bc6b6e5f4f30989b56a77223873362ef876ec",
                          "typeString": "literal_string \"BuyoutTest\""
                        }
                      ],
                      "expression": {
                        "id": 23562,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "333:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3454,
                      "src": "333:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 23570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "333:37:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23571,
                  "nodeType": "ExpressionStatement",
                  "src": "333:37:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23575,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "389:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 23576,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "389:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 23577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "401:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 23572,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "380:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3454,
                      "src": "380:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 23578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "380:29:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23579,
                  "nodeType": "ExpressionStatement",
                  "src": "380:29:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23583,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "428:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 23584,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "428:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "426f62",
                        "id": 23585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "438:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        },
                        "value": "Bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        }
                      ],
                      "expression": {
                        "id": 23580,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "419:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3454,
                      "src": "419:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 23586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "419:25:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23587,
                  "nodeType": "ExpressionStatement",
                  "src": "419:25:60"
                }
              ]
            },
            "documentation": {
              "id": 23542,
              "nodeType": "StructuredDocumentation",
              "src": "127:73:60",
              "text": "=================\n ===== SETUP =====\n ================="
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "214:5:60",
            "parameters": {
              "id": 23543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "219:2:60"
            },
            "returnParameters": {
              "id": 23544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23672,
            "nodeType": "FunctionDefinition",
            "src": "556:597:60",
            "body": {
              "id": 23671,
              "nodeType": "Block",
              "src": "584:569:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23594,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "611:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23595,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "618:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23596,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "623:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23597,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "637:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 23598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "650:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23593,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "594:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 23599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23600,
                  "nodeType": "ExpressionStatement",
                  "src": "594:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23603,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "694:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 23604,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "694:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23602,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "675:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "675:28:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23606,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "705:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23601,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "666:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "666:51:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23608,
                  "nodeType": "ExpressionStatement",
                  "src": "666:51:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23611,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "755:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23610,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "736:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "736:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 23613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "764:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 23609,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "727:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "727:39:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23615,
                  "nodeType": "ExpressionStatement",
                  "src": "727:39:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23618,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "799:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 23619,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "799:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23617,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "785:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "785:23:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23621,
                        "name": "INITIAL_BALANCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32331,
                        "src": "810:15:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23616,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "776:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "776:50:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23623,
                  "nodeType": "ExpressionStatement",
                  "src": "776:50:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23626,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "859:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23625,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "845:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "845:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 23628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "868:7:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 23624,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "836:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23630,
                  "nodeType": "ExpressionStatement",
                  "src": "836:40:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23638,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "926:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 23631,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "887:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 23634,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "887:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 23635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "887:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 23637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 23636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "917:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "887:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 23639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "887:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23640,
                  "nodeType": "ExpressionStatement",
                  "src": "887:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23643,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "971:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 23644,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "971:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23642,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "952:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "952:28:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 23646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "982:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 23641,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "943:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "943:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23648,
                  "nodeType": "ExpressionStatement",
                  "src": "943:41:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23651,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "1022:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23650,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "1003:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1003:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23653,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "1031:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23649,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "994:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "994:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23655,
                  "nodeType": "ExpressionStatement",
                  "src": "994:49:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23658,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "1076:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 23659,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "1076:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23657,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "1062:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1062:23:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3939",
                        "id": 23661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1087:8:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99000000000000000000_by_1",
                          "typeString": "int_const 99000000000000000000"
                        },
                        "value": "99"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_99000000000000000000_by_1",
                          "typeString": "int_const 99000000000000000000"
                        }
                      ],
                      "id": 23656,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1053:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:43:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23663,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:43:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23666,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "1129:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23665,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "1115:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1115:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 23668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1138:7:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 23664,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1106:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1106:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23670,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:40:60"
                }
              ]
            },
            "documentation": {
              "id": 23590,
              "nodeType": "StructuredDocumentation",
              "src": "457:94:60",
              "text": "========================\n ===== START BUYOUT =====\n ========================"
            },
            "functionSelector": "e34323b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStart",
            "nameLocation": "565:9:60",
            "parameters": {
              "id": 23591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:2:60"
            },
            "returnParameters": {
              "id": 23592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23754,
            "nodeType": "FunctionDefinition",
            "src": "1159:578:60",
            "body": {
              "id": 23753,
              "nodeType": "Block",
              "src": "1198:539:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23676,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "1225:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23677,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "1232:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23678,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "1237:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 23679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1251:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 23680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1254:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23675,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "1208:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 23681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1208:51:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23682,
                  "nodeType": "ExpressionStatement",
                  "src": "1208:51:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23685,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "1298:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 23686,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "1298:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23684,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "1279:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1279:28:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 23688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1309:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 23683,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1270:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1270:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23690,
                  "nodeType": "ExpressionStatement",
                  "src": "1270:41:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23693,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "1349:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23692,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "1330:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1330:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 23695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1358:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 23691,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1321:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1321:39:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23697,
                  "nodeType": "ExpressionStatement",
                  "src": "1321:39:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23700,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "1393:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 23701,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "1393:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23699,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "1379:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1379:23:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23703,
                        "name": "INITIAL_BALANCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32331,
                        "src": "1404:15:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23698,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1370:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1370:50:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23705,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:50:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23708,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "1453:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23707,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "1439:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1439:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 23710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1462:7:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 23706,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1430:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1430:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23712,
                  "nodeType": "ExpressionStatement",
                  "src": "1430:40:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23720,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "1520:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 23713,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "1481:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 23716,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "1481:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 23717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "1481:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 23719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 23718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1511:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "1481:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 23721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23722,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23725,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "1565:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 23726,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "1565:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23724,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "1546:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1546:28:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 23728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1576:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 23723,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1537:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1537:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23730,
                  "nodeType": "ExpressionStatement",
                  "src": "1537:41:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23733,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "1616:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23732,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "1597:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1597:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 23735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1625:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 23731,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1588:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1588:39:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23737,
                  "nodeType": "ExpressionStatement",
                  "src": "1588:39:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23740,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "1660:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 23741,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "1660:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23739,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "1646:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1646:23:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3939",
                        "id": 23743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1671:8:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99000000000000000000_by_1",
                          "typeString": "int_const 99000000000000000000"
                        },
                        "value": "99"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_99000000000000000000_by_1",
                          "typeString": "int_const 99000000000000000000"
                        }
                      ],
                      "id": 23738,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1637:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:43:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23745,
                  "nodeType": "ExpressionStatement",
                  "src": "1637:43:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23748,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "1713:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23747,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "1699:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1699:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 23750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1722:7:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 23746,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1690:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23752,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:40:60"
                }
              ]
            },
            "functionSelector": "b5ae5be1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStartNoFractions",
            "nameLocation": "1168:20:60",
            "parameters": {
              "id": 23673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1188:2:60"
            },
            "returnParameters": {
              "id": 23674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1198:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23794,
            "nodeType": "FunctionDefinition",
            "src": "1743:354:60",
            "body": {
              "id": 23793,
              "nodeType": "Block",
              "src": "1786:311:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23758,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "1813:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23759,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "1820:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23760,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "1825:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23761,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "1839:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 23762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1852:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23757,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "1796:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 23763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1796:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23764,
                  "nodeType": "ExpressionStatement",
                  "src": "1796:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 23770,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "1937:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 23771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16591,
                              "src": "1937:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 23772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "1937:25:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 23775,
                                "name": "baseVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32132,
                                "src": "1988:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              ],
                              "id": 23774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1980:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 23773,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1980:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 23776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1980:18:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 23768,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1897:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 23769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "1897:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 23777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1897:115:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 23765,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "1868:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "1868:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 23778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:154:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23779,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:154:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23789,
                            "name": "baseVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32132,
                            "src": "2079:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          ],
                          "id": 23788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2071:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23787,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2071:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2071:18:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 23780,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "2032:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 23783,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "2032:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 23784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "2032:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 23786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 23785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2062:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "2032:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 23791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2032:58:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23792,
                  "nodeType": "ExpressionStatement",
                  "src": "2032:58:60"
                }
              ]
            },
            "functionSelector": "eef43c76",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStartRevertNotAVault",
            "nameLocation": "1752:24:60",
            "parameters": {
              "id": 23755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1776:2:60"
            },
            "returnParameters": {
              "id": 23756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1786:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23833,
            "nodeType": "FunctionDefinition",
            "src": "2103:290:60",
            "body": {
              "id": 23832,
              "nodeType": "Block",
              "src": "2146:247:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23798,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "2173:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23799,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "2180:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23800,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "2185:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23801,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "2199:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 23802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2212:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23797,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "2156:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 23803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23804,
                  "nodeType": "ExpressionStatement",
                  "src": "2156:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23812,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "2269:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 23805,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "2228:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 23808,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "2228:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 23809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "2228:24:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 23811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 23810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2260:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "2228:40:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 23813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2228:47:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23814,
                  "nodeType": "ExpressionStatement",
                  "src": "2228:47:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23816,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "2304:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 23817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "INACTIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16548,
                        "src": "2304:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      },
                      {
                        "expression": {
                          "id": 23818,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "2320:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 23819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "LIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16549,
                        "src": "2320:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      ],
                      "id": 23815,
                      "name": "revertBuyoutState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34628,
                      "src": "2286:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_State_$16551_$_t_enum$_State_$16551_$returns$__$",
                        "typeString": "function (enum State,enum State)"
                      }
                    },
                    "id": 23820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23821,
                  "nodeType": "ExpressionStatement",
                  "src": "2286:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23829,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "2380:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 23822,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "2341:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 23825,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "2341:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 23826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "2341:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 23828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 23827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2371:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "2341:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 23830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2341:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23831,
                  "nodeType": "ExpressionStatement",
                  "src": "2341:45:60"
                }
              ]
            },
            "functionSelector": "02168ae2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStartRevertStateLIVE",
            "nameLocation": "2112:24:60",
            "parameters": {
              "id": 23795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2136:2:60"
            },
            "returnParameters": {
              "id": 23796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2146:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23864,
            "nodeType": "FunctionDefinition",
            "src": "2399:242:60",
            "body": {
              "id": 23863,
              "nodeType": "Block",
              "src": "2444:197:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23837,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "2471:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23838,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "2478:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23839,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "2483:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23840,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "2497:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 23841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2510:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23836,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "2454:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 23842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2454:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23843,
                  "nodeType": "ExpressionStatement",
                  "src": "2454:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 23849,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "2565:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 23850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ZeroDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16608,
                              "src": "2565:19:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 23851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "2565:28:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 23847,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2542:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 23848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "2542:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 23852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2542:52:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 23844,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "2526:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "2526:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 23853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2526:69:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23854,
                  "nodeType": "ExpressionStatement",
                  "src": "2526:69:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23860,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "2628:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 23855,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "2605:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 23858,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "2605:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 23859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "start",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38188,
                      "src": "2605:22:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 23861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2605:29:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23862,
                  "nodeType": "ExpressionStatement",
                  "src": "2605:29:60"
                }
              ]
            },
            "functionSelector": "d9f9b2e6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStartRevertZeroDeposit",
            "nameLocation": "2408:26:60",
            "parameters": {
              "id": 23834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2434:2:60"
            },
            "returnParameters": {
              "id": 23835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2444:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23895,
            "nodeType": "FunctionDefinition",
            "src": "2647:232:60",
            "body": {
              "id": 23894,
              "nodeType": "Block",
              "src": "2692:187:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23868,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "2719:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23869,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "2726:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23870,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "2731:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23871,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "2745:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 23872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2758:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23867,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "2702:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 23873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2702:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23874,
                  "nodeType": "ExpressionStatement",
                  "src": "2702:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4e4f545f415554484f52495a4544",
                            "id": 23880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2797:16:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                              "typeString": "literal_string \"NOT_AUTHORIZED\""
                            },
                            "value": "NOT_AUTHORIZED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                              "typeString": "literal_string \"NOT_AUTHORIZED\""
                            }
                          ],
                          "id": 23879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2791:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 23878,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2791:5:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2791:23:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 23875,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "2775:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "2775:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 23882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2775:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23883,
                  "nodeType": "ExpressionStatement",
                  "src": "2775:40:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23891,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "2866:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 23884,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "2825:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 23887,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "2825:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 23888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "2825:24:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 23890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 23889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2857:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "2825:40:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 23892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2825:47:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23893,
                  "nodeType": "ExpressionStatement",
                  "src": "2825:47:60"
                }
              ]
            },
            "functionSelector": "c921c93a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStartRevertNotApproved",
            "nameLocation": "2656:26:60",
            "parameters": {
              "id": 23865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2682:2:60"
            },
            "returnParameters": {
              "id": 23866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2692:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23924,
            "nodeType": "FunctionDefinition",
            "src": "2885:220:60",
            "body": {
              "id": 23923,
              "nodeType": "Block",
              "src": "2930:175:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23899,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "2957:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23900,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "2964:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23901,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "2969:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 23902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2983:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 23903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2986:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23898,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "2940:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 23904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2940:51:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23905,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:51:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23909,
                          "name": "stdError",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2293,
                          "src": "3018:8:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_stdError_$2293_$",
                            "typeString": "type(library stdError)"
                          }
                        },
                        "id": 23910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "divisionError",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2244,
                        "src": "3018:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 23906,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "3002:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "3002:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 23911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3002:39:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23912,
                  "nodeType": "ExpressionStatement",
                  "src": "3002:39:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23920,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "3092:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 23913,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "3051:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 23916,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "3051:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 23917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "3051:24:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 23919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 23918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3083:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "3051:40:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 23921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3051:47:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23922,
                  "nodeType": "ExpressionStatement",
                  "src": "3051:47:60"
                }
              ]
            },
            "functionSelector": "445905be",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStartRevertTotalSupply",
            "nameLocation": "2894:26:60",
            "parameters": {
              "id": 23896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2920:2:60"
            },
            "returnParameters": {
              "id": 23897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2930:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24016,
            "nodeType": "FunctionDefinition",
            "src": "3216:680:60",
            "body": {
              "id": 24015,
              "nodeType": "Block",
              "src": "3252:644:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23929,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "3279:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23930,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "3286:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 23931,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "3291:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23932,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "3305:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 23933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3318:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23928,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "3262:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 23934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3262:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23935,
                  "nodeType": "ExpressionStatement",
                  "src": "3262:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23943,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "3373:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 23936,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "3334:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 23939,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "3334:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 23940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "3334:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 23942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 23941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3364:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "3334:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 23944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3334:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23945,
                  "nodeType": "ExpressionStatement",
                  "src": "3334:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23948,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "3418:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 23949,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "3418:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23947,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "3399:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3399:30:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23951,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "3431:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23946,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3390:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3390:53:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23953,
                  "nodeType": "ExpressionStatement",
                  "src": "3390:53:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23956,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "3481:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23955,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "3462:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3462:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23958,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "3490:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23954,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3453:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3453:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23960,
                  "nodeType": "ExpressionStatement",
                  "src": "3453:49:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23963,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "3535:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 23964,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "3535:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23962,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "3521:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3521:25:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23966,
                        "name": "INITIAL_BALANCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32331,
                        "src": "3548:15:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23961,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3512:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3512:52:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23968,
                  "nodeType": "ExpressionStatement",
                  "src": "3512:52:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23971,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "3597:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23970,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "3583:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3583:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 23973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3606:7:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 23969,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3574:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3574:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23975,
                  "nodeType": "ExpressionStatement",
                  "src": "3574:40:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23981,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "3658:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 23982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3665:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 23976,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "3625:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 23979,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "3625:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 23980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellFractions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38168,
                      "src": "3625:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 23983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3625:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23984,
                  "nodeType": "ExpressionStatement",
                  "src": "3625:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23987,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "3709:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 23988,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "3709:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23986,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "3690:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3690:30:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "34303030",
                        "id": 23990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3722:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4000_by_1",
                          "typeString": "int_const 4000"
                        },
                        "value": "4000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_4000_by_1",
                          "typeString": "int_const 4000"
                        }
                      ],
                      "id": 23985,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3681:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3681:46:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23992,
                  "nodeType": "ExpressionStatement",
                  "src": "3681:46:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23995,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "3765:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 23994,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "3746:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 23996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3746:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36303030",
                        "id": 23997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3774:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6000_by_1",
                          "typeString": "int_const 6000"
                        },
                        "value": "6000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6000_by_1",
                          "typeString": "int_const 6000"
                        }
                      ],
                      "id": 23993,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3737:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3737:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23999,
                  "nodeType": "ExpressionStatement",
                  "src": "3737:42:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24002,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "3812:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24003,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "3812:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24001,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "3798:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3798:25:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130302e32",
                        "id": 24005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3825:11:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100200000000000000000_by_1",
                          "typeString": "int_const 100200000000000000000"
                        },
                        "value": "100.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100200000000000000000_by_1",
                          "typeString": "int_const 100200000000000000000"
                        }
                      ],
                      "id": 24000,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3789:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3789:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24007,
                  "nodeType": "ExpressionStatement",
                  "src": "3789:48:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24010,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "3870:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24009,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "3856:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3856:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e38",
                        "id": 24012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3879:9:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800000000000000000_by_1",
                          "typeString": "int_const 800000000000000000"
                        },
                        "value": "0.8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_800000000000000000_by_1",
                          "typeString": "int_const 800000000000000000"
                        }
                      ],
                      "id": 24008,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3847:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3847:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24014,
                  "nodeType": "ExpressionStatement",
                  "src": "3847:42:60"
                }
              ]
            },
            "documentation": {
              "id": 23925,
              "nodeType": "StructuredDocumentation",
              "src": "3111:100:60",
              "text": "==========================\n ===== SELL FRACTIONS =====\n =========================="
            },
            "functionSelector": "35e87791",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSellFractions",
            "nameLocation": "3225:17:60",
            "parameters": {
              "id": 23926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3242:2:60"
            },
            "returnParameters": {
              "id": 23927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3252:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24170,
            "nodeType": "FunctionDefinition",
            "src": "3902:1186:60",
            "body": {
              "id": 24169,
              "nodeType": "Block",
              "src": "3948:1140:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24020,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "3975:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24021,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "3982:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24022,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "3987:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24023,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "4001:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4014:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24019,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "3958:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 24025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3958:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24026,
                  "nodeType": "ExpressionStatement",
                  "src": "3958:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24034,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "4069:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24027,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "4030:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24030,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "4030:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "4030:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 24033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 24032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4060:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "4030:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 24035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4030:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24036,
                  "nodeType": "ExpressionStatement",
                  "src": "4030:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24039,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "4114:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24040,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "4114:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24038,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "4095:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4095:30:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24042,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "4127:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24037,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4086:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4086:53:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24044,
                  "nodeType": "ExpressionStatement",
                  "src": "4086:53:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24047,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "4177:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24046,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "4158:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4158:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24049,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "4186:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24045,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4149:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4149:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24051,
                  "nodeType": "ExpressionStatement",
                  "src": "4149:49:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24054,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "4231:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24055,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "4231:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24053,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "4217:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4217:25:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24057,
                        "name": "INITIAL_BALANCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32331,
                        "src": "4244:15:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24052,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4208:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4208:52:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24059,
                  "nodeType": "ExpressionStatement",
                  "src": "4208:52:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24062,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "4293:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24061,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "4279:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4279:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 24064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4302:7:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 24060,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4270:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4270:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24066,
                  "nodeType": "ExpressionStatement",
                  "src": "4270:40:60"
                },
                {
                  "expression": {
                    "id": 24080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 24067,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "4321:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      "id": 24069,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ferc1155",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32202,
                      "src": "4321:14:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FERC1155BS_$39034",
                        "typeString": "contract FERC1155BS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4361:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4353:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24073,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4353:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4353:10:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "313131",
                          "id": 24077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4365:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_111_by_1",
                            "typeString": "int_const 111"
                          },
                          "value": "111"
                        },
                        {
                          "id": 24078,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32229,
                          "src": "4370:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_111_by_1",
                            "typeString": "int_const 111"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4338:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_contract$_FERC1155BS_$39034_$",
                          "typeString": "function (address,uint256,address) returns (contract FERC1155BS)"
                        },
                        "typeName": {
                          "id": 24071,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24070,
                            "name": "FERC1155BS",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39034,
                            "src": "4342:10:60"
                          },
                          "referencedDeclaration": 39034,
                          "src": "4342:10:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FERC1155BS_$39034",
                            "typeString": "contract FERC1155BS"
                          }
                        }
                      },
                      "id": 24079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4338:38:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FERC1155BS_$39034",
                        "typeString": "contract FERC1155BS"
                      }
                    },
                    "src": "4321:55:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FERC1155BS_$39034",
                      "typeString": "contract FERC1155BS"
                    }
                  },
                  "id": 24081,
                  "nodeType": "ExpressionStatement",
                  "src": "4321:55:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24087,
                        "name": "buyout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32217,
                        "src": "4419:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 24088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4427:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24082,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "4386:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 24085,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ferc1155",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32202,
                        "src": "4386:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FERC1155BS_$39034",
                          "typeString": "contract FERC1155BS"
                        }
                      },
                      "id": 24086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38899,
                      "src": "4386:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4386:47:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24090,
                  "nodeType": "ExpressionStatement",
                  "src": "4386:47:60"
                },
                {
                  "assignments": [
                    24092,
                    24094,
                    24096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24092,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "4450:1:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 24169,
                      "src": "4444:7:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 24091,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4444:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24094,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "4461:1:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 24169,
                      "src": "4453:9:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 24093,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4453:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24096,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "4472:1:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 24169,
                      "src": "4464:9:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 24095,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4464:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24113,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24098,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "4504:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24099,
                        "name": "buyout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32217,
                        "src": "4523:6:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4543:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24105,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "4584:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24106,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "4584:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 24102,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32229,
                                "src": "4570:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24101,
                              "name": "FERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15080,
                              "src": "4561:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FERC1155_$15080_$",
                                "typeString": "type(contract FERC1155)"
                              }
                            },
                            "id": 24103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4561:15:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FERC1155_$15080",
                              "typeString": "contract FERC1155"
                            }
                          },
                          "id": 24104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nonces",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14317,
                          "src": "4561:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 24107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4561:34:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 24108,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4609:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 24109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4609:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 24110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4627:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4609:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24097,
                      "name": "signPermitAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34781,
                      "src": "4477:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_address_$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (struct TestUtil.User memory,address,bool,uint256,uint256) returns (uint8,bytes32,bytes32)"
                      }
                    },
                    "id": 24112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4477:161:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4443:195:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24119,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32229,
                        "src": "4695:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4714:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 24121,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4732:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 24122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4732:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 24123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4750:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4732:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24125,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24092,
                        "src": "4765:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 24126,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24094,
                        "src": "4780:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 24127,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24096,
                        "src": "4795:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24114,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "4649:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 24117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "4649:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 24118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selfPermitAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38148,
                      "src": "4649:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bool,uint256,uint8,bytes32,bytes32) external"
                      }
                    },
                    "id": 24128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4649:157:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24129,
                  "nodeType": "ExpressionStatement",
                  "src": "4649:157:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24135,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "4850:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4857:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24130,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "4817:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 24133,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "4817:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 24134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellFractions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38168,
                      "src": "4817:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4817:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24138,
                  "nodeType": "ExpressionStatement",
                  "src": "4817:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24141,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "4901:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24142,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "4901:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24140,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "4882:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4882:30:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "34303030",
                        "id": 24144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4914:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4000_by_1",
                          "typeString": "int_const 4000"
                        },
                        "value": "4000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_4000_by_1",
                          "typeString": "int_const 4000"
                        }
                      ],
                      "id": 24139,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4873:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4873:46:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24146,
                  "nodeType": "ExpressionStatement",
                  "src": "4873:46:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24149,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "4957:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24148,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "4938:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4938:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36303030",
                        "id": 24151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4966:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6000_by_1",
                          "typeString": "int_const 6000"
                        },
                        "value": "6000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6000_by_1",
                          "typeString": "int_const 6000"
                        }
                      ],
                      "id": 24147,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4929:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4929:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24153,
                  "nodeType": "ExpressionStatement",
                  "src": "4929:42:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24156,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "5004:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24157,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "5004:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24155,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "4990:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4990:25:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130302e32",
                        "id": 24159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5017:11:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100200000000000000000_by_1",
                          "typeString": "int_const 100200000000000000000"
                        },
                        "value": "100.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100200000000000000000_by_1",
                          "typeString": "int_const 100200000000000000000"
                        }
                      ],
                      "id": 24154,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4981:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4981:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24161,
                  "nodeType": "ExpressionStatement",
                  "src": "4981:48:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24164,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "5062:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24163,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "5048:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5048:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e38",
                        "id": 24166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5071:9:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800000000000000000_by_1",
                          "typeString": "int_const 800000000000000000"
                        },
                        "value": "0.8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_800000000000000000_by_1",
                          "typeString": "int_const 800000000000000000"
                        }
                      ],
                      "id": 24162,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "5039:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5039:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24168,
                  "nodeType": "ExpressionStatement",
                  "src": "5039:42:60"
                }
              ]
            },
            "functionSelector": "9aec5f4c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSellFractionsSelfPermit",
            "nameLocation": "3911:27:60",
            "parameters": {
              "id": 24017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3938:2:60"
            },
            "returnParameters": {
              "id": 24018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3948:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24261,
            "nodeType": "FunctionDefinition",
            "src": "5094:676:60",
            "body": {
              "id": 24260,
              "nodeType": "Block",
              "src": "5145:625:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24174,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "5172:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24175,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "5179:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24176,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "5184:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24177,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "5198:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5211:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24173,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "5155:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 24179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5155:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24180,
                  "nodeType": "ExpressionStatement",
                  "src": "5155:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24188,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "5268:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24181,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "5227:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24184,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "5227:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "5227:24:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 24187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 24186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5259:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "5227:40:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 24189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5227:47:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24190,
                  "nodeType": "ExpressionStatement",
                  "src": "5227:47:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24193,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "5313:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24194,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "5313:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24192,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "5294:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5294:30:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5326:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 24191,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "5285:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5285:43:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24198,
                  "nodeType": "ExpressionStatement",
                  "src": "5285:43:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24201,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "5366:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24200,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "5347:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5347:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24203,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "5375:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24199,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "5338:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5338:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24205,
                  "nodeType": "ExpressionStatement",
                  "src": "5338:49:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24208,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "5420:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24209,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "5420:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24207,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "5406:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5406:25:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3939",
                        "id": 24211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5433:8:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99000000000000000000_by_1",
                          "typeString": "int_const 99000000000000000000"
                        },
                        "value": "99"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_99000000000000000000_by_1",
                          "typeString": "int_const 99000000000000000000"
                        }
                      ],
                      "id": 24206,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "5397:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5397:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24213,
                  "nodeType": "ExpressionStatement",
                  "src": "5397:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24216,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "5475:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24215,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "5461:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5461:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 24218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5484:7:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 24214,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "5452:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5452:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24220,
                  "nodeType": "ExpressionStatement",
                  "src": "5452:40:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24226,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "5536:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5543:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24221,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "5503:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 24224,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "5503:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 24225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellFractions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38168,
                      "src": "5503:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5503:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24229,
                  "nodeType": "ExpressionStatement",
                  "src": "5503:42:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24232,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "5584:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24233,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "5584:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24231,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "5565:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5565:30:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5597:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 24230,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "5556:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5556:43:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24237,
                  "nodeType": "ExpressionStatement",
                  "src": "5556:43:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24240,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "5637:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24239,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "5618:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5618:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24242,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "5646:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24238,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "5609:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5609:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24244,
                  "nodeType": "ExpressionStatement",
                  "src": "5609:49:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24247,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "5691:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24248,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "5691:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24246,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "5677:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5677:25:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3939",
                        "id": 24250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5704:8:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99000000000000000000_by_1",
                          "typeString": "int_const 99000000000000000000"
                        },
                        "value": "99"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_99000000000000000000_by_1",
                          "typeString": "int_const 99000000000000000000"
                        }
                      ],
                      "id": 24245,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "5668:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5668:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24252,
                  "nodeType": "ExpressionStatement",
                  "src": "5668:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24255,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "5746:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24254,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "5732:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5732:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 24257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5755:7:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 24253,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "5723:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5723:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24259,
                  "nodeType": "ExpressionStatement",
                  "src": "5723:40:60"
                }
              ]
            },
            "functionSelector": "df4b95d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSellFractionsNoDepositAmount",
            "nameLocation": "5103:32:60",
            "parameters": {
              "id": 24171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5135:2:60"
            },
            "returnParameters": {
              "id": 24172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5145:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24321,
            "nodeType": "FunctionDefinition",
            "src": "5776:518:60",
            "body": {
              "id": 24320,
              "nodeType": "Block",
              "src": "5829:465:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24265,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "5856:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24266,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "5863:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24267,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "5868:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24268,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "5882:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5895:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24264,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "5839:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 24270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5839:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24271,
                  "nodeType": "ExpressionStatement",
                  "src": "5839:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24279,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "5950:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24272,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "5911:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24275,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "5911:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "5911:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 24278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 24277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5941:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "5911:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 24280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5911:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24281,
                  "nodeType": "ExpressionStatement",
                  "src": "5911:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24285,
                          "name": "proposalPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32239,
                          "src": "5974:14:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 24286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5991:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5974:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24282,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "5966:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3286,
                      "src": "5966:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5966:27:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24289,
                  "nodeType": "ExpressionStatement",
                  "src": "5966:27:60"
                },
                {
                  "assignments": [
                    24291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24291,
                      "mutability": "mutable",
                      "name": "expected",
                      "nameLocation": "6012:8:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 24320,
                      "src": "6004:16:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24290,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6004:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24296,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 24292,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6023:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 24293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6023:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 24294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6041:1:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6023:19:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6004:38:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 24302,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "6121:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 24303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "TimeExpired",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16598,
                              "src": "6121:19:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 24304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6121:28:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "expression": {
                              "id": 24305,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6167:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 24306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6167:15:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 24307,
                            "name": "expected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24291,
                            "src": "6200:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 24300,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6081:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 24301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "6081:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 24308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6081:141:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 24297,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "6052:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "6052:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 24309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6052:180:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24310,
                  "nodeType": "ExpressionStatement",
                  "src": "6052:180:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24316,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "6275:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6282:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24311,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "6242:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 24314,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "6242:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 24315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellFractions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38168,
                      "src": "6242:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6242:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24319,
                  "nodeType": "ExpressionStatement",
                  "src": "6242:45:60"
                }
              ]
            },
            "functionSelector": "938dcb04",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSellFractionsRevertTimeExpired",
            "nameLocation": "5785:34:60",
            "parameters": {
              "id": 24262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5819:2:60"
            },
            "returnParameters": {
              "id": 24263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5829:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24370,
            "nodeType": "FunctionDefinition",
            "src": "6300:418:60",
            "body": {
              "id": 24369,
              "nodeType": "Block",
              "src": "6351:367:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24325,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "6378:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24326,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "6385:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24327,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "6390:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24328,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "6404:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6417:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24324,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "6361:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 24330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6361:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24331,
                  "nodeType": "ExpressionStatement",
                  "src": "6361:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24339,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "6472:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24332,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "6433:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24335,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "6433:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "6433:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 24338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 24337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6463:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "6433:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 24340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6433:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24341,
                  "nodeType": "ExpressionStatement",
                  "src": "6433:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 24347,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "6558:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 24348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16591,
                              "src": "6558:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 24349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6558:25:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 24352,
                                "name": "baseVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32132,
                                "src": "6609:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              ],
                              "id": 24351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6601:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24350,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6601:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6601:18:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 24345,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6518:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 24346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "6518:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 24354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6518:115:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 24342,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "6489:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "6489:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 24355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6489:154:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24356,
                  "nodeType": "ExpressionStatement",
                  "src": "6489:154:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24364,
                            "name": "baseVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32132,
                            "src": "6694:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          ],
                          "id": 24363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6686:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24362,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6686:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6686:18:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6706:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24357,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "6653:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 24360,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "6653:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 24361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellFractions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38168,
                      "src": "6653:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6653:58:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24368,
                  "nodeType": "ExpressionStatement",
                  "src": "6653:58:60"
                }
              ]
            },
            "functionSelector": "f1084b56",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSellFractionsRevertNotAVault",
            "nameLocation": "6309:32:60",
            "parameters": {
              "id": 24322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6341:2:60"
            },
            "returnParameters": {
              "id": 24323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6351:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24398,
            "nodeType": "FunctionDefinition",
            "src": "6724:244:60",
            "body": {
              "id": 24397,
              "nodeType": "Block",
              "src": "6779:189:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24374,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "6806:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24375,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "6813:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24376,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "6818:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24377,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "6832:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6845:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24373,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "6789:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 24379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6789:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24380,
                  "nodeType": "ExpressionStatement",
                  "src": "6789:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24382,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "6879:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 24383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "LIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16549,
                        "src": "6879:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      },
                      {
                        "expression": {
                          "id": 24384,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "6891:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 24385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "INACTIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16548,
                        "src": "6891:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      ],
                      "id": 24381,
                      "name": "revertBuyoutState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34628,
                      "src": "6861:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_State_$16551_$_t_enum$_State_$16551_$returns$__$",
                        "typeString": "function (enum State,enum State)"
                      }
                    },
                    "id": 24386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6861:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24387,
                  "nodeType": "ExpressionStatement",
                  "src": "6861:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24393,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "6949:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6956:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24388,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "6916:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 24391,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "6916:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 24392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellFractions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38168,
                      "src": "6916:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6916:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24396,
                  "nodeType": "ExpressionStatement",
                  "src": "6916:45:60"
                }
              ]
            },
            "functionSelector": "dd42ea64",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSellFractionsRevertStateINACTIVE",
            "nameLocation": "6733:36:60",
            "parameters": {
              "id": 24371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6769:2:60"
            },
            "returnParameters": {
              "id": 24372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6779:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24477,
            "nodeType": "FunctionDefinition",
            "src": "6974:491:60",
            "body": {
              "id": 24476,
              "nodeType": "Block",
              "src": "7027:438:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24402,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "7053:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24403,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "7060:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24401,
                      "name": "deployBaseVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33264,
                      "src": "7037:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,uint256)"
                      }
                    },
                    "id": 24404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7037:36:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24405,
                  "nodeType": "ExpressionStatement",
                  "src": "7037:36:60"
                },
                {
                  "expression": {
                    "id": 24413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 24406,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32229,
                          "src": "7084:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 24407,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32243,
                          "src": "7091:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 24408,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7083:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 24411,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32231,
                          "src": "7124:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 24409,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32162,
                          "src": "7102:8:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VaultRegistry_$16140",
                            "typeString": "contract VaultRegistry"
                          }
                        },
                        "id": 24410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vaultToToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15727,
                        "src": "7102:21:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$_t_uint256_$",
                          "typeString": "function (address) view external returns (address,uint256)"
                        }
                      },
                      "id": 24412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7102:28:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "src": "7083:47:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24414,
                  "nodeType": "ExpressionStatement",
                  "src": "7083:47:60"
                },
                {
                  "expression": {
                    "id": 24431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 24415,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "7140:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      "id": 24417,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ferc1155",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32202,
                      "src": "7140:12:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FERC1155BS_$39034",
                        "typeString": "contract FERC1155BS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7178:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7170:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24421,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7170:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7170:10:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "323232",
                          "id": 24425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7182:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_222_by_1",
                            "typeString": "int_const 222"
                          },
                          "value": "222"
                        },
                        {
                          "arguments": [
                            {
                              "id": 24428,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32229,
                              "src": "7195:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7187:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24426,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7187:7:60",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7187:14:60",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_222_by_1",
                            "typeString": "int_const 222"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7155:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_contract$_FERC1155BS_$39034_$",
                          "typeString": "function (address,uint256,address) returns (contract FERC1155BS)"
                        },
                        "typeName": {
                          "id": 24419,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24418,
                            "name": "FERC1155BS",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39034,
                            "src": "7159:10:60"
                          },
                          "referencedDeclaration": 39034,
                          "src": "7159:10:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FERC1155BS_$39034",
                            "typeString": "contract FERC1155BS"
                          }
                        }
                      },
                      "id": 24430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7155:47:60",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FERC1155BS_$39034",
                        "typeString": "contract FERC1155BS"
                      }
                    },
                    "src": "7140:62:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FERC1155BS_$39034",
                      "typeString": "contract FERC1155BS"
                    }
                  },
                  "id": 24432,
                  "nodeType": "ExpressionStatement",
                  "src": "7140:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24434,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "7224:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24435,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "7229:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7236:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24433,
                      "name": "setApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34578,
                      "src": "7212:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,address,bool)"
                      }
                    },
                    "id": 24437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7212:29:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24438,
                  "nodeType": "ExpressionStatement",
                  "src": "7212:29:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24440,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "7263:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24443,
                            "name": "buyoutModule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32135,
                            "src": "7276:12:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Buyout_$20060",
                              "typeString": "contract Buyout"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Buyout_$20060",
                              "typeString": "contract Buyout"
                            }
                          ],
                          "id": 24442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7268:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24441,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7268:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7268:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7291:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24439,
                      "name": "setApproval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34578,
                      "src": "7251:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,address,bool)"
                      }
                    },
                    "id": 24446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7251:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24447,
                  "nodeType": "ExpressionStatement",
                  "src": "7251:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24455,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "7346:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24448,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "7307:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24451,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "7307:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "7307:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 24454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 24453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7337:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "7307:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 24456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7307:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24457,
                  "nodeType": "ExpressionStatement",
                  "src": "7307:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4e4f545f415554484f52495a4544",
                            "id": 24463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7385:16:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                              "typeString": "literal_string \"NOT_AUTHORIZED\""
                            },
                            "value": "NOT_AUTHORIZED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_e7e213d5e2bee0acc2c7bf8bfda19ef0cae82e7b8c997e7e898919269971e7c4",
                              "typeString": "literal_string \"NOT_AUTHORIZED\""
                            }
                          ],
                          "id": 24462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7379:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 24461,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7379:5:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7379:23:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 24458,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "7363:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "7363:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 24465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7363:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24466,
                  "nodeType": "ExpressionStatement",
                  "src": "7363:40:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24472,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "7446:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7453:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24467,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "7413:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 24470,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "7413:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 24471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellFractions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38168,
                      "src": "7413:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7413:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24475,
                  "nodeType": "ExpressionStatement",
                  "src": "7413:45:60"
                }
              ]
            },
            "functionSelector": "c29d8dac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSellFractionsRevertNotApproved",
            "nameLocation": "6983:34:60",
            "parameters": {
              "id": 24399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7017:2:60"
            },
            "returnParameters": {
              "id": 24400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7027:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24571,
            "nodeType": "FunctionDefinition",
            "src": "7573:701:60",
            "body": {
              "id": 24570,
              "nodeType": "Block",
              "src": "7614:660:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24482,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "7641:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24483,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "7648:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24484,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "7653:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24485,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "7667:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7680:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24481,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "7624:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 24487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7624:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24488,
                  "nodeType": "ExpressionStatement",
                  "src": "7624:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24496,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "7735:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24489,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "7696:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24492,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "7696:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "7696:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 24495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 24494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7726:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "7696:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 24497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7696:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24498,
                  "nodeType": "ExpressionStatement",
                  "src": "7696:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24501,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "7780:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24502,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "7780:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24500,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "7761:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7761:30:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24504,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "7793:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24499,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "7752:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7752:53:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24506,
                  "nodeType": "ExpressionStatement",
                  "src": "7752:53:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24509,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "7843:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24508,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "7824:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7824:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24511,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "7852:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24507,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "7815:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7815:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24513,
                  "nodeType": "ExpressionStatement",
                  "src": "7815:49:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24516,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "7897:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24517,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "7897:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24515,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "7883:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7883:25:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24519,
                        "name": "INITIAL_BALANCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32331,
                        "src": "7910:15:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24514,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "7874:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7874:52:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24521,
                  "nodeType": "ExpressionStatement",
                  "src": "7874:52:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24524,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "7959:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24523,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "7945:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7945:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 24526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7968:7:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 24522,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "7936:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7936:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24528,
                  "nodeType": "ExpressionStatement",
                  "src": "7936:40:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24536,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "8037:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8044:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24529,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "7987:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24532,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "7987:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "7987:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 24535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e32",
                          "id": 24534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8026:9:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "value": "0.2"
                        }
                      ],
                      "src": "7987:49:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 24538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7987:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24539,
                  "nodeType": "ExpressionStatement",
                  "src": "7987:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24542,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "8088:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24543,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "8088:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24541,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "8069:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8069:30:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36303030",
                        "id": 24545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8101:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6000_by_1",
                          "typeString": "int_const 6000"
                        },
                        "value": "6000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6000_by_1",
                          "typeString": "int_const 6000"
                        }
                      ],
                      "id": 24540,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8060:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8060:46:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24547,
                  "nodeType": "ExpressionStatement",
                  "src": "8060:46:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24550,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "8144:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24549,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "8125:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8125:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "34303030",
                        "id": 24552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8153:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4000_by_1",
                          "typeString": "int_const 4000"
                        },
                        "value": "4000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_4000_by_1",
                          "typeString": "int_const 4000"
                        }
                      ],
                      "id": 24548,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8116:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8116:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24554,
                  "nodeType": "ExpressionStatement",
                  "src": "8116:42:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24557,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "8191:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24558,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "8191:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24556,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "8177:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8177:25:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "39392e38",
                        "id": 24560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8204:10:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99800000000000000000_by_1",
                          "typeString": "int_const 99800000000000000000"
                        },
                        "value": "99.8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_99800000000000000000_by_1",
                          "typeString": "int_const 99800000000000000000"
                        }
                      ],
                      "id": 24555,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8168:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8168:47:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24562,
                  "nodeType": "ExpressionStatement",
                  "src": "8168:47:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24565,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "8248:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24564,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "8234:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8234:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "312e32",
                        "id": 24567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8257:9:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1200000000000000000_by_1",
                          "typeString": "int_const 1200000000000000000"
                        },
                        "value": "1.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1200000000000000000_by_1",
                          "typeString": "int_const 1200000000000000000"
                        }
                      ],
                      "id": 24563,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8225:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8225:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24569,
                  "nodeType": "ExpressionStatement",
                  "src": "8225:42:60"
                }
              ]
            },
            "documentation": {
              "id": 24478,
              "nodeType": "StructuredDocumentation",
              "src": "7471:97:60",
              "text": "=========================\n ===== BUY FRACTIONS =====\n ========================="
            },
            "functionSelector": "9d114318",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuyFractionsSingle",
            "nameLocation": "7582:22:60",
            "parameters": {
              "id": 24479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7604:2:60"
            },
            "returnParameters": {
              "id": 24480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7614:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24664,
            "nodeType": "FunctionDefinition",
            "src": "8280:722:60",
            "body": {
              "id": 24663,
              "nodeType": "Block",
              "src": "8330:672:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24575,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "8357:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24576,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "8364:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24577,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "8369:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24578,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "8383:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8396:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24574,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "8340:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 24580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8340:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24581,
                  "nodeType": "ExpressionStatement",
                  "src": "8340:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24589,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "8451:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24582,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "8412:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24585,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "8412:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "8412:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 24588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 24587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8442:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "8412:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 24590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8412:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24591,
                  "nodeType": "ExpressionStatement",
                  "src": "8412:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24594,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "8496:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24595,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "8496:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24593,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "8477:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8477:30:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24597,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "8509:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24592,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8468:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8468:53:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24599,
                  "nodeType": "ExpressionStatement",
                  "src": "8468:53:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24602,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "8559:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24601,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "8540:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8540:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24604,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "8568:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24600,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8531:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8531:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24606,
                  "nodeType": "ExpressionStatement",
                  "src": "8531:49:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24609,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "8613:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24610,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "8613:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24608,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "8599:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8599:25:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24612,
                        "name": "INITIAL_BALANCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32331,
                        "src": "8626:15:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24607,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8590:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8590:52:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24614,
                  "nodeType": "ExpressionStatement",
                  "src": "8590:52:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24617,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "8675:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24616,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "8661:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8661:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 24619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8684:7:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 24615,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8652:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8652:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24621,
                  "nodeType": "ExpressionStatement",
                  "src": "8652:40:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24629,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "8751:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8758:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24622,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "8703:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "8703:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "8703:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 24628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "30",
                          "id": 24627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8742:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "src": "8703:47:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 24631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8703:57:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24632,
                  "nodeType": "ExpressionStatement",
                  "src": "8703:57:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24635,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "8799:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24636,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "8799:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24634,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "8780:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8780:30:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24638,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "8812:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24633,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8771:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8771:53:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24640,
                  "nodeType": "ExpressionStatement",
                  "src": "8771:53:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24643,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "8862:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24642,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "8843:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8843:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24645,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "8871:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24641,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8834:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8834:49:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24647,
                  "nodeType": "ExpressionStatement",
                  "src": "8834:49:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24650,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "8916:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24651,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "8916:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24649,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "8902:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8902:25:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24653,
                        "name": "INITIAL_BALANCE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32331,
                        "src": "8929:15:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24648,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8893:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8893:52:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24655,
                  "nodeType": "ExpressionStatement",
                  "src": "8893:52:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24658,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "8978:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24657,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "8964:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8964:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 24660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8987:7:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 24656,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "8955:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8955:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24662,
                  "nodeType": "ExpressionStatement",
                  "src": "8955:40:60"
                }
              ]
            },
            "functionSelector": "5941d5e7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuyFractionsNoDepositAmount",
            "nameLocation": "8289:31:60",
            "parameters": {
              "id": 24572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8320:2:60"
            },
            "returnParameters": {
              "id": 24573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8330:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24715,
            "nodeType": "FunctionDefinition",
            "src": "9008:462:60",
            "body": {
              "id": 24714,
              "nodeType": "Block",
              "src": "9052:418:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24668,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "9079:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24669,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "9086:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24670,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "9091:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24671,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "9105:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9118:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24667,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "9062:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 24673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9062:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24674,
                  "nodeType": "ExpressionStatement",
                  "src": "9062:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24682,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "9173:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24675,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "9134:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24678,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "9134:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "9134:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 24681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 24680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9164:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "9134:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 24683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9134:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24684,
                  "nodeType": "ExpressionStatement",
                  "src": "9134:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 24690,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "9259:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 24691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16591,
                              "src": "9259:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 24692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9259:25:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 24695,
                                "name": "baseVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32132,
                                "src": "9310:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              ],
                              "id": 24694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9302:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24693,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9302:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9302:18:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 24688,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9219:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 24689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9219:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 24697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9219:115:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 24685,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "9190:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "9190:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 24698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9190:154:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24699,
                  "nodeType": "ExpressionStatement",
                  "src": "9190:154:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24709,
                            "name": "baseVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32132,
                            "src": "9425:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          ],
                          "id": 24708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9417:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24707,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9417:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9417:18:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9449:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24700,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "9354:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24703,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "9354:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "9354:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 24706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e32",
                          "id": 24705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9393:9:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "value": "0.2"
                        }
                      ],
                      "src": "9354:49:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 24712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9354:109:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24713,
                  "nodeType": "ExpressionStatement",
                  "src": "9354:109:60"
                }
              ]
            },
            "functionSelector": "37583f0f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuyFractionsNotAVault",
            "nameLocation": "9017:25:60",
            "parameters": {
              "id": 24665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9042:2:60"
            },
            "returnParameters": {
              "id": 24666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9052:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24745,
            "nodeType": "FunctionDefinition",
            "src": "9476:260:60",
            "body": {
              "id": 24744,
              "nodeType": "Block",
              "src": "9530:206:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24719,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "9557:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24720,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "9564:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24721,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "9569:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24722,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "9583:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9596:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24718,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "9540:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 24724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9540:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24725,
                  "nodeType": "ExpressionStatement",
                  "src": "9540:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24727,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "9630:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 24728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "LIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16549,
                        "src": "9630:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      },
                      {
                        "expression": {
                          "id": 24729,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "9642:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 24730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "INACTIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16548,
                        "src": "9642:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      ],
                      "id": 24726,
                      "name": "revertBuyoutState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34628,
                      "src": "9612:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_State_$16551_$_t_enum$_State_$16551_$returns$__$",
                        "typeString": "function (enum State,enum State)"
                      }
                    },
                    "id": 24731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9612:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24732,
                  "nodeType": "ExpressionStatement",
                  "src": "9612:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24740,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "9717:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9724:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24733,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "9667:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24736,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "9667:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "9667:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 24739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e32",
                          "id": 24738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9706:9:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "value": "0.2"
                        }
                      ],
                      "src": "9667:49:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 24742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9667:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24743,
                  "nodeType": "ExpressionStatement",
                  "src": "9667:62:60"
                }
              ]
            },
            "functionSelector": "b423c7cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuyFractionsRevertStateINACTIVE",
            "nameLocation": "9485:35:60",
            "parameters": {
              "id": 24716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9520:2:60"
            },
            "returnParameters": {
              "id": 24717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9530:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24807,
            "nodeType": "FunctionDefinition",
            "src": "9742:536:60",
            "body": {
              "id": 24806,
              "nodeType": "Block",
              "src": "9794:484:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24749,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "9821:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24750,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "9828:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24751,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "9833:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24752,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "9847:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9860:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24748,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "9804:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 24754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9804:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24755,
                  "nodeType": "ExpressionStatement",
                  "src": "9804:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24763,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "9915:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24756,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "9876:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24759,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "9876:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "9876:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 24762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 24761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9906:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "9876:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 24764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9876:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24765,
                  "nodeType": "ExpressionStatement",
                  "src": "9876:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24769,
                          "name": "rejectionPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32241,
                          "src": "9939:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 24770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9957:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9939:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24766,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "9931:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3286,
                      "src": "9931:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9931:28:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24773,
                  "nodeType": "ExpressionStatement",
                  "src": "9931:28:60"
                },
                {
                  "assignments": [
                    24775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24775,
                      "mutability": "mutable",
                      "name": "expected",
                      "nameLocation": "9977:8:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 24806,
                      "src": "9969:16:60",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24774,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9969:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24780,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 24776,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9988:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 24777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "9988:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 24778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10006:1:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9988:19:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9969:38:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 24786,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "10087:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 24787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "TimeExpired",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16598,
                              "src": "10087:19:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 24788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "10087:28:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "expression": {
                              "id": 24789,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10133:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 24790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10133:15:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 24791,
                            "name": "expected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24775,
                            "src": "10166:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 24784,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10047:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 24785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "10047:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 24792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10047:141:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 24781,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "10018:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "10018:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 24793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10018:180:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24794,
                  "nodeType": "ExpressionStatement",
                  "src": "10018:180:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24802,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "10259:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10266:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24795,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "10209:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24798,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "10209:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "10209:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 24801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e32",
                          "id": 24800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10248:9:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "value": "0.2"
                        }
                      ],
                      "src": "10209:49:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 24804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10209:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24805,
                  "nodeType": "ExpressionStatement",
                  "src": "10209:62:60"
                }
              ]
            },
            "functionSelector": "398f285f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuyFractionsRevertTimeExpired",
            "nameLocation": "9751:33:60",
            "parameters": {
              "id": 24746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9784:2:60"
            },
            "returnParameters": {
              "id": 24747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9794:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24851,
            "nodeType": "FunctionDefinition",
            "src": "10284:368:60",
            "body": {
              "id": 24850,
              "nodeType": "Block",
              "src": "10339:313:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24811,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "10366:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24812,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "10373:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24813,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "10378:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24814,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "10392:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10405:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24810,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "10349:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 24816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10349:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24817,
                  "nodeType": "ExpressionStatement",
                  "src": "10349:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24825,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "10460:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24818,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "10421:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24821,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "10421:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "10421:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 24824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 24823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10451:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "10421:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 24826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10421:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24827,
                  "nodeType": "ExpressionStatement",
                  "src": "10421:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 24833,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "10529:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 24834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "InvalidPayment",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16571,
                              "src": "10529:22:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 24835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "10529:31:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 24831,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10506:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 24832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "10506:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 24836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10506:55:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 24828,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "10477:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "10477:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 24837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10477:94:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24838,
                  "nodeType": "ExpressionStatement",
                  "src": "10477:94:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24846,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "10633:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10640:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24839,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "10582:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24842,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "10582:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "10582:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 24845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e3139",
                          "id": 24844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10621:10:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_190000000000000000_by_1",
                            "typeString": "int_const 190000000000000000"
                          },
                          "value": "0.19"
                        }
                      ],
                      "src": "10582:50:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 24848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10582:63:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24849,
                  "nodeType": "ExpressionStatement",
                  "src": "10582:63:60"
                }
              ]
            },
            "functionSelector": "97e62a9e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBuyFractionsRevertInvalidPayment",
            "nameLocation": "10293:36:60",
            "parameters": {
              "id": 24808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10329:2:60"
            },
            "returnParameters": {
              "id": 24809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10339:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24930,
            "nodeType": "FunctionDefinition",
            "src": "10751:517:60",
            "body": {
              "id": 24929,
              "nodeType": "Block",
              "src": "10787:481:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24856,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "10814:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24857,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "10821:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24858,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "10826:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24859,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "10840:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10853:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24855,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "10797:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 24861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10797:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24862,
                  "nodeType": "ExpressionStatement",
                  "src": "10797:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24870,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "10908:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24863,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "10869:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24866,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "10869:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "10869:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 24869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 24868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10899:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "10869:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 24871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10869:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24872,
                  "nodeType": "ExpressionStatement",
                  "src": "10869:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24878,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "10957:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10964:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24873,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "10924:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 24876,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "10924:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 24877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellFractions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38168,
                      "src": "10924:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 24880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10924:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24881,
                  "nodeType": "ExpressionStatement",
                  "src": "10924:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24885,
                          "name": "rejectionPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32241,
                          "src": "10987:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 24886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11005:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10987:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24882,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "10979:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3286,
                      "src": "10979:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10979:28:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24889,
                  "nodeType": "ExpressionStatement",
                  "src": "10979:28:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24892,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "11046:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24893,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "11046:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24891,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "11027:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11027:28:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11057:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 24890,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11018:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11018:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24897,
                  "nodeType": "ExpressionStatement",
                  "src": "11018:41:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24900,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "11097:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24899,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "11078:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11078:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "36303030",
                        "id": 24902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11106:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6000_by_1",
                          "typeString": "int_const 6000"
                        },
                        "value": "6000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_6000_by_1",
                          "typeString": "int_const 6000"
                        }
                      ],
                      "id": 24898,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11069:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11069:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24904,
                  "nodeType": "ExpressionStatement",
                  "src": "11069:42:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24910,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "11143:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24911,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "11150:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24905,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "11122:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 24908,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "11122:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 24909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37896,
                      "src": "11122:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 24912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11122:38:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24913,
                  "nodeType": "ExpressionStatement",
                  "src": "11122:38:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24916,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "11199:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24917,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "11199:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24915,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "11180:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11180:28:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11210:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 24914,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11171:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11171:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24921,
                  "nodeType": "ExpressionStatement",
                  "src": "11171:41:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24924,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "11250:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24923,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "11231:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11231:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11259:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 24922,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11222:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11222:39:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24928,
                  "nodeType": "ExpressionStatement",
                  "src": "11222:39:60"
                }
              ]
            },
            "documentation": {
              "id": 24852,
              "nodeType": "StructuredDocumentation",
              "src": "10658:88:60",
              "text": "======================\n ===== END BUYOUT =====\n ======================"
            },
            "functionSelector": "2f2732c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEndSuccesfull",
            "nameLocation": "10760:17:60",
            "parameters": {
              "id": 24853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10777:2:60"
            },
            "returnParameters": {
              "id": 24854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10787:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25040,
            "nodeType": "FunctionDefinition",
            "src": "11274:750:60",
            "body": {
              "id": 25039,
              "nodeType": "Block",
              "src": "11312:712:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24934,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "11339:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24935,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "11346:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 24936,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "11351:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24937,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "11365:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11378:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24933,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "11322:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 24939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11322:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24940,
                  "nodeType": "ExpressionStatement",
                  "src": "11322:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24948,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "11433:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24941,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "11394:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24944,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "11394:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "11394:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 24947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 24946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11424:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "11394:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 24949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11394:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24950,
                  "nodeType": "ExpressionStatement",
                  "src": "11394:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24958,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "11499:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 24959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11506:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 24951,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "11449:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 24954,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "11449:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 24955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "11449:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 24957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e32",
                          "id": 24956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11488:9:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "value": "0.2"
                        }
                      ],
                      "src": "11449:49:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 24960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11449:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24961,
                  "nodeType": "ExpressionStatement",
                  "src": "11449:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24965,
                          "name": "rejectionPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32241,
                          "src": "11529:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 24966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11547:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11529:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24962,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "11521:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3286,
                      "src": "11521:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 24968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11521:28:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24969,
                  "nodeType": "ExpressionStatement",
                  "src": "11521:28:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24972,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "11588:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24973,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "11588:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24971,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "11569:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11569:28:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11599:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 24970,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11560:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11560:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24977,
                  "nodeType": "ExpressionStatement",
                  "src": "11560:41:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24980,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "11639:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24979,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "11620:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11620:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "34303030",
                        "id": 24982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11648:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4000_by_1",
                          "typeString": "int_const 4000"
                        },
                        "value": "4000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_4000_by_1",
                          "typeString": "int_const 4000"
                        }
                      ],
                      "id": 24978,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11611:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11611:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24984,
                  "nodeType": "ExpressionStatement",
                  "src": "11611:42:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 24987,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "11686:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 24988,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "11686:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24986,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "11672:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11672:23:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3939",
                        "id": 24990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11697:8:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99000000000000000000_by_1",
                          "typeString": "int_const 99000000000000000000"
                        },
                        "value": "99"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_99000000000000000000_by_1",
                          "typeString": "int_const 99000000000000000000"
                        }
                      ],
                      "id": 24985,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11663:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11663:43:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24992,
                  "nodeType": "ExpressionStatement",
                  "src": "11663:43:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24995,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "11739:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24994,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "11725:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 24996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11725:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "312e32",
                        "id": 24997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11748:9:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1200000000000000000_by_1",
                          "typeString": "int_const 1200000000000000000"
                        },
                        "value": "1.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1200000000000000000_by_1",
                          "typeString": "int_const 1200000000000000000"
                        }
                      ],
                      "id": 24993,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11716:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11716:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24999,
                  "nodeType": "ExpressionStatement",
                  "src": "11716:42:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25005,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "11790:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25006,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "11797:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25000,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "11769:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25003,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "11769:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37896,
                      "src": "11769:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11769:38:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25008,
                  "nodeType": "ExpressionStatement",
                  "src": "11769:38:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25011,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "11846:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 25012,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "11846:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25010,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "11827:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11827:28:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "34303030",
                        "id": 25014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11857:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4000_by_1",
                          "typeString": "int_const 4000"
                        },
                        "value": "4000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_4000_by_1",
                          "typeString": "int_const 4000"
                        }
                      ],
                      "id": 25009,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11818:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11818:44:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25016,
                  "nodeType": "ExpressionStatement",
                  "src": "11818:44:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25019,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "11900:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25018,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "11881:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11881:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11909:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 25017,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11872:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11872:39:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25023,
                  "nodeType": "ExpressionStatement",
                  "src": "11872:39:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25026,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "11944:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 25027,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "11944:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25025,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "11930:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11930:23:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130302e32",
                        "id": 25029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11955:11:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100200000000000000000_by_1",
                          "typeString": "int_const 100200000000000000000"
                        },
                        "value": "100.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100200000000000000000_by_1",
                          "typeString": "int_const 100200000000000000000"
                        }
                      ],
                      "id": 25024,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11921:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11921:46:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25031,
                  "nodeType": "ExpressionStatement",
                  "src": "11921:46:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25034,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "12000:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25033,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "11986:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11986:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12009:7:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 25032,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "11977:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11977:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25038,
                  "nodeType": "ExpressionStatement",
                  "src": "11977:40:60"
                }
              ]
            },
            "functionSelector": "776a367c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEndUnsuccesfull",
            "nameLocation": "11283:19:60",
            "parameters": {
              "id": 24931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11302:2:60"
            },
            "returnParameters": {
              "id": 24932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11312:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25098,
            "nodeType": "FunctionDefinition",
            "src": "12030:456:60",
            "body": {
              "id": 25097,
              "nodeType": "Block",
              "src": "12071:415:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25044,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "12098:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25045,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "12105:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25046,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "12110:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25047,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "12124:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12137:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25043,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "12081:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12081:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25050,
                  "nodeType": "ExpressionStatement",
                  "src": "12081:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25058,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "12192:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 25051,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "12153:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 25054,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "12153:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 25055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "12153:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 25057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 25056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12183:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "12153:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 25059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12153:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25060,
                  "nodeType": "ExpressionStatement",
                  "src": "12153:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25066,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "12241:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12248:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25061,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "12208:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25064,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "12208:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellFractions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38168,
                      "src": "12208:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12208:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25069,
                  "nodeType": "ExpressionStatement",
                  "src": "12208:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 25075,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "12333:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 25076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16591,
                              "src": "12333:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 25077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "12333:25:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 25080,
                                "name": "baseVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32132,
                                "src": "12384:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              ],
                              "id": 25079,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12376:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25078,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12376:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12376:18:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25073,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12293:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 25074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "12293:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 25082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12293:115:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25070,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "12264:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "12264:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12264:154:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25084,
                  "nodeType": "ExpressionStatement",
                  "src": "12264:154:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25092,
                            "name": "baseVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32132,
                            "src": "12457:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          ],
                          "id": 25091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12449:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25090,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12449:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12449:18:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25094,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "12469:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25085,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "12428:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25088,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "12428:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37896,
                      "src": "12428:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12428:51:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25096,
                  "nodeType": "ExpressionStatement",
                  "src": "12428:51:60"
                }
              ]
            },
            "functionSelector": "c0f7b5c0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEndRevertNotAVault",
            "nameLocation": "12039:22:60",
            "parameters": {
              "id": 25041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12061:2:60"
            },
            "returnParameters": {
              "id": 25042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12071:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25126,
            "nodeType": "FunctionDefinition",
            "src": "12492:227:60",
            "body": {
              "id": 25125,
              "nodeType": "Block",
              "src": "12537:182:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25102,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "12564:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25103,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "12571:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25104,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "12576:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25105,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "12590:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12603:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25101,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "12547:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12547:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25108,
                  "nodeType": "ExpressionStatement",
                  "src": "12547:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25110,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "12637:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 25111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "LIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16549,
                        "src": "12637:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      },
                      {
                        "expression": {
                          "id": 25112,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "12649:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 25113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "INACTIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16548,
                        "src": "12649:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      ],
                      "id": 25109,
                      "name": "revertBuyoutState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34628,
                      "src": "12619:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_State_$16551_$_t_enum$_State_$16551_$returns$__$",
                        "typeString": "function (enum State,enum State)"
                      }
                    },
                    "id": 25114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12619:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25115,
                  "nodeType": "ExpressionStatement",
                  "src": "12619:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25121,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "12695:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25122,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "12702:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25116,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "12674:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25119,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "12674:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37896,
                      "src": "12674:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12674:38:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25124,
                  "nodeType": "ExpressionStatement",
                  "src": "12674:38:60"
                }
              ]
            },
            "functionSelector": "35e0d119",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEndRevertStateINACTIVE",
            "nameLocation": "12501:26:60",
            "parameters": {
              "id": 25099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12527:2:60"
            },
            "returnParameters": {
              "id": 25100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12537:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25189,
            "nodeType": "FunctionDefinition",
            "src": "12725:535:60",
            "body": {
              "id": 25188,
              "nodeType": "Block",
              "src": "12771:489:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25130,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "12798:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25131,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "12805:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25132,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "12810:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25133,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "12824:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12837:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25129,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "12781:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12781:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25136,
                  "nodeType": "ExpressionStatement",
                  "src": "12781:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25144,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "12892:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 25137,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "12853:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 25140,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "12853:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 25141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "12853:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 25143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 25142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12883:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "12853:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 25145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12853:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25146,
                  "nodeType": "ExpressionStatement",
                  "src": "12853:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25154,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "12958:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12965:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 25147,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "12908:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 25150,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "12908:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 25151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "12908:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 25153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e32",
                          "id": 25152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12947:9:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "value": "0.2"
                        }
                      ],
                      "src": "12908:49:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 25156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12908:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25157,
                  "nodeType": "ExpressionStatement",
                  "src": "12908:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25161,
                        "name": "rejectionPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32241,
                        "src": "12988:15:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25158,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "12980:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3286,
                      "src": "12980:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12980:24:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25163,
                  "nodeType": "ExpressionStatement",
                  "src": "12980:24:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 25169,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "13084:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 25170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "TimeNotElapsed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16605,
                              "src": "13084:22:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 25171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "13084:31:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "expression": {
                              "id": 25172,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "13133:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 25173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "13133:15:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 25174,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "13166:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 25175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "13166:15:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 25167,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13044:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 25168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "13044:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 25176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13044:151:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25164,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "13015:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "13015:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13015:190:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25178,
                  "nodeType": "ExpressionStatement",
                  "src": "13015:190:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25184,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "13236:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25185,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "13243:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25179,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "13215:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25182,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "13215:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37896,
                      "src": "13215:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13215:38:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25187,
                  "nodeType": "ExpressionStatement",
                  "src": "13215:38:60"
                }
              ]
            },
            "functionSelector": "01761934",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEndRevertTimeNotElapsed",
            "nameLocation": "12734:27:60",
            "parameters": {
              "id": 25127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12761:2:60"
            },
            "returnParameters": {
              "id": 25128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12771:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25276,
            "nodeType": "FunctionDefinition",
            "src": "13353:619:60",
            "body": {
              "id": 25275,
              "nodeType": "Block",
              "src": "13380:592:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25194,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "13407:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25195,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "13414:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25196,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "13419:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25197,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "13433:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13446:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25193,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "13390:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13390:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25200,
                  "nodeType": "ExpressionStatement",
                  "src": "13390:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25202,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "13477:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25203,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "13484:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 25201,
                      "name": "setUpBuyoutCash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33476,
                      "src": "13461:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 25204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13461:27:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25205,
                  "nodeType": "ExpressionStatement",
                  "src": "13461:27:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25208,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "13527:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 25209,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "13527:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25207,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "13508:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13508:30:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "34303030",
                        "id": 25211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13540:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4000_by_1",
                          "typeString": "int_const 4000"
                        },
                        "value": "4000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_4000_by_1",
                          "typeString": "int_const 4000"
                        }
                      ],
                      "id": 25206,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "13499:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13499:46:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25213,
                  "nodeType": "ExpressionStatement",
                  "src": "13499:46:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25216,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "13583:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25215,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "13564:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13564:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13592:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 25214,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "13555:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13555:39:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25220,
                  "nodeType": "ExpressionStatement",
                  "src": "13555:39:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25223,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "13627:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 25224,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "13627:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25222,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "13613:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13613:25:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130302e32",
                        "id": 25226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13640:11:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100200000000000000000_by_1",
                          "typeString": "int_const 100200000000000000000"
                        },
                        "value": "100.2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100200000000000000000_by_1",
                          "typeString": "int_const 100200000000000000000"
                        }
                      ],
                      "id": 25221,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "13604:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13604:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25228,
                  "nodeType": "ExpressionStatement",
                  "src": "13604:48:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25231,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "13685:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25230,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "13671:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13671:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e38",
                        "id": 25233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13694:9:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_800000000000000000_by_1",
                          "typeString": "int_const 800000000000000000"
                        },
                        "value": "0.8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_800000000000000000_by_1",
                          "typeString": "int_const 800000000000000000"
                        }
                      ],
                      "id": 25229,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "13662:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13662:42:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25235,
                  "nodeType": "ExpressionStatement",
                  "src": "13662:42:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25241,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "13739:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25242,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "13746:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25236,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "13715:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "13715:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37875,
                      "src": "13715:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13715:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25244,
                  "nodeType": "ExpressionStatement",
                  "src": "13715:41:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25247,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "13795:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 25248,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "13795:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25246,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "13776:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13776:30:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13808:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 25245,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "13767:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13767:43:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25252,
                  "nodeType": "ExpressionStatement",
                  "src": "13767:43:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25255,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "13848:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25254,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "13829:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13829:26:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13857:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 25253,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "13820:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13820:39:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25259,
                  "nodeType": "ExpressionStatement",
                  "src": "13820:39:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25262,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32209,
                              "src": "13892:5:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 25263,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "13892:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25261,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "13878:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13878:25:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313031",
                        "id": 25265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13905:9:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_101000000000000000000_by_1",
                          "typeString": "int_const 101000000000000000000"
                        },
                        "value": "101"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_101000000000000000000_by_1",
                          "typeString": "int_const 101000000000000000000"
                        }
                      ],
                      "id": 25260,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "13869:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13869:46:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25267,
                  "nodeType": "ExpressionStatement",
                  "src": "13869:46:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25270,
                            "name": "buyout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32217,
                            "src": "13948:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25269,
                          "name": "getETHBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34605,
                          "src": "13934:13:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13934:21:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13957:7:60",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 25268,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "13925:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13925:40:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25274,
                  "nodeType": "ExpressionStatement",
                  "src": "13925:40:60"
                }
              ]
            },
            "documentation": {
              "id": 25190,
              "nodeType": "StructuredDocumentation",
              "src": "13266:82:60",
              "text": "====================\n ===== CASH OUT =====\n ===================="
            },
            "functionSelector": "563dfd14",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCash",
            "nameLocation": "13362:8:60",
            "parameters": {
              "id": 25191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13370:2:60"
            },
            "returnParameters": {
              "id": 25192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13380:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25320,
            "nodeType": "FunctionDefinition",
            "src": "13978:384:60",
            "body": {
              "id": 25319,
              "nodeType": "Block",
              "src": "14020:342:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25280,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "14047:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25281,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "14054:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25282,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "14059:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25283,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "14073:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14086:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25279,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "14030:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14030:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25286,
                  "nodeType": "ExpressionStatement",
                  "src": "14030:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25288,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "14117:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25289,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "14124:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 25287,
                      "name": "setUpBuyoutCash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33476,
                      "src": "14101:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 25290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14101:27:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25291,
                  "nodeType": "ExpressionStatement",
                  "src": "14101:27:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 25297,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "14208:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 25298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16591,
                              "src": "14208:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 25299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "14208:25:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 25302,
                                "name": "baseVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32132,
                                "src": "14259:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              ],
                              "id": 25301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14251:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25300,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14251:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14251:18:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25295,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14168:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 25296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "14168:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 25304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14168:115:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25292,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "14139:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "14139:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14139:154:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25306,
                  "nodeType": "ExpressionStatement",
                  "src": "14139:154:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25314,
                            "name": "baseVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32132,
                            "src": "14333:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          ],
                          "id": 25313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14325:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14325:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14325:18:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25316,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "14345:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25307,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "14303:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25310,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "14303:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37875,
                      "src": "14303:21:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14303:52:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25318,
                  "nodeType": "ExpressionStatement",
                  "src": "14303:52:60"
                }
              ]
            },
            "functionSelector": "61aa3d4e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCashRevertNotAVault",
            "nameLocation": "13987:23:60",
            "parameters": {
              "id": 25277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14010:2:60"
            },
            "returnParameters": {
              "id": 25278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14020:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25373,
            "nodeType": "FunctionDefinition",
            "src": "14368:369:60",
            "body": {
              "id": 25372,
              "nodeType": "Block",
              "src": "14410:327:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25324,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "14437:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25325,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "14444:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25326,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "14449:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25327,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "14463:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14476:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25323,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "14420:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14420:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25330,
                  "nodeType": "ExpressionStatement",
                  "src": "14420:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25338,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "14531:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 25331,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "14492:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 25334,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "14492:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 25335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "14492:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 25337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 25336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14522:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "14492:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 25339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14492:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25340,
                  "nodeType": "ExpressionStatement",
                  "src": "14492:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25346,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "14580:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14587:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25341,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "14547:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25344,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "14547:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellFractions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38168,
                      "src": "14547:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14547:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25349,
                  "nodeType": "ExpressionStatement",
                  "src": "14547:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25353,
                        "name": "rejectionPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32241,
                        "src": "14610:15:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25350,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "14602:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3286,
                      "src": "14602:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14602:24:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25355,
                  "nodeType": "ExpressionStatement",
                  "src": "14602:24:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25357,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "14655:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 25358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SUCCESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16550,
                        "src": "14655:13:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      },
                      {
                        "expression": {
                          "id": 25359,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "14670:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 25360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "LIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16549,
                        "src": "14670:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      ],
                      "id": 25356,
                      "name": "revertBuyoutState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34628,
                      "src": "14637:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_State_$16551_$_t_enum$_State_$16551_$returns$__$",
                        "typeString": "function (enum State,enum State)"
                      }
                    },
                    "id": 25361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14637:44:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25362,
                  "nodeType": "ExpressionStatement",
                  "src": "14637:44:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25368,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "14713:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25369,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "14720:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25363,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "14691:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25366,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "14691:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37875,
                      "src": "14691:21:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14691:39:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25371,
                  "nodeType": "ExpressionStatement",
                  "src": "14691:39:60"
                }
              ]
            },
            "functionSelector": "75f6b129",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCashRevertStateLIVE",
            "nameLocation": "14377:23:60",
            "parameters": {
              "id": 25321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14400:2:60"
            },
            "returnParameters": {
              "id": 25322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14410:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25439,
            "nodeType": "FunctionDefinition",
            "src": "14743:446:60",
            "body": {
              "id": 25438,
              "nodeType": "Block",
              "src": "14789:400:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25377,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "14816:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25378,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "14823:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25379,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "14828:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25380,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "14842:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14855:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25376,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "14799:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14799:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25383,
                  "nodeType": "ExpressionStatement",
                  "src": "14799:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25391,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "14910:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 25384,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "14871:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 25387,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "14871:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 25388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "14871:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 25390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 25389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14901:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "14871:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 25392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14871:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25393,
                  "nodeType": "ExpressionStatement",
                  "src": "14871:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25401,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "14976:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14983:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 25394,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "14926:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 25397,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "14926:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 25398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "14926:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 25400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e32",
                          "id": 25399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14965:9:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "value": "0.2"
                        }
                      ],
                      "src": "14926:49:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 25403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14926:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25404,
                  "nodeType": "ExpressionStatement",
                  "src": "14926:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25408,
                          "name": "rejectionPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32241,
                          "src": "15006:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 25409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15024:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15006:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25405,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "14998:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3286,
                      "src": "14998:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14998:28:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25412,
                  "nodeType": "ExpressionStatement",
                  "src": "14998:28:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25418,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "15057:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25419,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "15064:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25413,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "15036:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25416,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "15036:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37896,
                      "src": "15036:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15036:38:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25421,
                  "nodeType": "ExpressionStatement",
                  "src": "15036:38:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25423,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "15103:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 25424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SUCCESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16550,
                        "src": "15103:13:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      },
                      {
                        "expression": {
                          "id": 25425,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "15118:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 25426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "INACTIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16548,
                        "src": "15118:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      ],
                      "id": 25422,
                      "name": "revertBuyoutState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34628,
                      "src": "15085:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_State_$16551_$_t_enum$_State_$16551_$returns$__$",
                        "typeString": "function (enum State,enum State)"
                      }
                    },
                    "id": 25427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15085:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25428,
                  "nodeType": "ExpressionStatement",
                  "src": "15085:48:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25434,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "15165:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25435,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "15172:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25429,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "15143:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25432,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "15143:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37875,
                      "src": "15143:21:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15143:39:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25437,
                  "nodeType": "ExpressionStatement",
                  "src": "15143:39:60"
                }
              ]
            },
            "functionSelector": "27a5b7fa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCashRevertStateINACTIVE",
            "nameLocation": "14752:27:60",
            "parameters": {
              "id": 25374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14779:2:60"
            },
            "returnParameters": {
              "id": 25375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14789:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25507,
            "nodeType": "FunctionDefinition",
            "src": "15195:448:60",
            "body": {
              "id": 25506,
              "nodeType": "Block",
              "src": "15239:404:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25443,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "15266:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25444,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "15273:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25445,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "15278:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25446,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "15292:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15305:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25442,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "15249:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15249:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25449,
                  "nodeType": "ExpressionStatement",
                  "src": "15249:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25457,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "15360:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 25450,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "15321:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 25453,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "15321:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 25454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "15321:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 25456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 25455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15351:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "15321:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 25458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15321:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25459,
                  "nodeType": "ExpressionStatement",
                  "src": "15321:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25465,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "15409:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15416:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25460,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "15376:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25463,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "15376:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellFractions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38168,
                      "src": "15376:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15376:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25468,
                  "nodeType": "ExpressionStatement",
                  "src": "15376:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25472,
                          "name": "rejectionPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32241,
                          "src": "15439:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 25473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15457:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15439:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25469,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "15431:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3286,
                      "src": "15431:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15431:28:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25476,
                  "nodeType": "ExpressionStatement",
                  "src": "15431:28:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25482,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "15490:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25483,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "15497:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25477,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "15469:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25480,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "15469:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37896,
                      "src": "15469:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15469:38:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25485,
                  "nodeType": "ExpressionStatement",
                  "src": "15469:38:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 25491,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "15557:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 25492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NoFractions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16583,
                              "src": "15557:19:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 25493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15557:28:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 25489,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15534:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 25490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15534:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 25494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15534:52:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25486,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "15518:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "15518:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15518:69:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25496,
                  "nodeType": "ExpressionStatement",
                  "src": "15518:69:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25502,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "15619:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25503,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "15626:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25497,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "15597:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25500,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "15597:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37875,
                      "src": "15597:21:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15597:39:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25505,
                  "nodeType": "ExpressionStatement",
                  "src": "15597:39:60"
                }
              ]
            },
            "functionSelector": "f908bf67",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCashRevertNoFractions",
            "nameLocation": "15204:25:60",
            "parameters": {
              "id": 25440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15229:2:60"
            },
            "returnParameters": {
              "id": 25441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15239:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25544,
            "nodeType": "FunctionDefinition",
            "src": "15739:273:60",
            "body": {
              "id": 25543,
              "nodeType": "Block",
              "src": "15768:244:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25511,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "15795:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25512,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "15802:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25513,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "15807:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25514,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "15821:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15835:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25510,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "15778:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15778:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25517,
                  "nodeType": "ExpressionStatement",
                  "src": "15778:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25520,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "15879:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 25521,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "15879:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25519,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "15860:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15860:28:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25523,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "15890:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25518,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "15851:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15851:52:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25525,
                  "nodeType": "ExpressionStatement",
                  "src": "15851:52:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25531,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "15937:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25532,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "15944:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25526,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "15913:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25529,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "15913:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38065,
                      "src": "15913:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15913:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25534,
                  "nodeType": "ExpressionStatement",
                  "src": "15913:41:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25537,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "15992:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 25538,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "15992:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25536,
                          "name": "getFractionBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34594,
                          "src": "15973:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 25539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15973:28:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16003:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 25535,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "15964:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15964:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25542,
                  "nodeType": "ExpressionStatement",
                  "src": "15964:41:60"
                }
              ]
            },
            "functionSelector": "f72b5ffa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRedeem",
            "nameLocation": "15748:10:60",
            "parameters": {
              "id": 25508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15758:2:60"
            },
            "returnParameters": {
              "id": 25509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15768:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25583,
            "nodeType": "FunctionDefinition",
            "src": "16018:351:60",
            "body": {
              "id": 25582,
              "nodeType": "Block",
              "src": "16062:307:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25548,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "16089:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25549,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "16096:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25550,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "16101:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25551,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "16115:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16128:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25547,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "16072:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16072:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25554,
                  "nodeType": "ExpressionStatement",
                  "src": "16072:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 25560,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "16213:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 25561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16591,
                              "src": "16213:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 25562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16213:25:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 25565,
                                "name": "baseVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32132,
                                "src": "16264:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              ],
                              "id": 25564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16256:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25563,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16256:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16256:18:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25558,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16173:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 25559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16173:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 25567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16173:115:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25555,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "16144:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "16144:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16144:154:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25569,
                  "nodeType": "ExpressionStatement",
                  "src": "16144:154:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25577,
                            "name": "baseVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32132,
                            "src": "16340:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          ],
                          "id": 25576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16332:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25575,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16332:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16332:18:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25579,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "16352:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25570,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "16308:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25573,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "16308:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38065,
                      "src": "16308:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16308:54:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25581,
                  "nodeType": "ExpressionStatement",
                  "src": "16308:54:60"
                }
              ]
            },
            "functionSelector": "62bc8b3c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRedeemRevertNotAVault",
            "nameLocation": "16027:25:60",
            "parameters": {
              "id": 25545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16052:2:60"
            },
            "returnParameters": {
              "id": 25546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16062:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25632,
            "nodeType": "FunctionDefinition",
            "src": "16375:364:60",
            "body": {
              "id": 25631,
              "nodeType": "Block",
              "src": "16419:320:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25587,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "16446:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25588,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "16453:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25589,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "16458:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25590,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "16472:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16485:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25586,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "16429:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16429:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25593,
                  "nodeType": "ExpressionStatement",
                  "src": "16429:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25601,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "16540:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 25594,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "16501:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 25597,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "16501:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 25598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "16501:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 25600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 25599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16531:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "16501:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 25602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16501:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25603,
                  "nodeType": "ExpressionStatement",
                  "src": "16501:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25611,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "16604:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25612,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "16611:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 25604,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "16556:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 25607,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "16556:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 25608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "16556:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 25610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 25609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16595:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "16556:47:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 25613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16556:67:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25614,
                  "nodeType": "ExpressionStatement",
                  "src": "16556:67:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25616,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "16652:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 25617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "INACTIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16548,
                        "src": "16652:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      },
                      {
                        "expression": {
                          "id": 25618,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "16668:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 25619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "LIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16549,
                        "src": "16668:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      ],
                      "id": 25615,
                      "name": "revertBuyoutState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34628,
                      "src": "16634:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_State_$16551_$_t_enum$_State_$16551_$returns$__$",
                        "typeString": "function (enum State,enum State)"
                      }
                    },
                    "id": 25620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16634:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25621,
                  "nodeType": "ExpressionStatement",
                  "src": "16634:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25627,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "16715:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25628,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "16722:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25622,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "16689:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25625,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "16689:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38065,
                      "src": "16689:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16689:43:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25630,
                  "nodeType": "ExpressionStatement",
                  "src": "16689:43:60"
                }
              ]
            },
            "functionSelector": "c8d1adf6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRedeemRevertStateLIVE",
            "nameLocation": "16384:25:60",
            "parameters": {
              "id": 25584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16409:2:60"
            },
            "returnParameters": {
              "id": 25585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16419:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25660,
            "nodeType": "FunctionDefinition",
            "src": "16745:230:60",
            "body": {
              "id": 25659,
              "nodeType": "Block",
              "src": "16794:181:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25636,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "16821:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25637,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "16828:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25638,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "16833:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25639,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "16847:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16860:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25635,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "16804:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16804:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25642,
                  "nodeType": "ExpressionStatement",
                  "src": "16804:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25646,
                          "name": "stdError",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2293,
                          "src": "16892:8:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_stdError_$2293_$",
                            "typeString": "type(library stdError)"
                          }
                        },
                        "id": 25647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "arithmeticError",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2237,
                        "src": "16892:24:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25643,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "16876:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "16876:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16876:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25649,
                  "nodeType": "ExpressionStatement",
                  "src": "16876:41:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25655,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "16951:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25656,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "16958:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25650,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "16927:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25653,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "16927:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38065,
                      "src": "16927:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16927:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25658,
                  "nodeType": "ExpressionStatement",
                  "src": "16927:41:60"
                }
              ]
            },
            "functionSelector": "da78ee5a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRedeemRevertNotTotalSupply",
            "nameLocation": "16754:30:60",
            "parameters": {
              "id": 25633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16784:2:60"
            },
            "returnParameters": {
              "id": 25634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16794:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25749,
            "nodeType": "FunctionDefinition",
            "src": "17089:696:60",
            "body": {
              "id": 25748,
              "nodeType": "Block",
              "src": "17126:659:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25665,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "17153:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25666,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "17160:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25667,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "17165:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25668,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "17179:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17192:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25664,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "17136:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17136:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25671,
                  "nodeType": "ExpressionStatement",
                  "src": "17136:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25673,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "17227:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25674,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "17234:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 25672,
                      "name": "setUpWithdrawERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33542,
                      "src": "17207:19:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 25675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17207:31:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25676,
                  "nodeType": "ExpressionStatement",
                  "src": "17207:31:60"
                },
                {
                  "assignments": [
                    25678
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25678,
                      "mutability": "mutable",
                      "name": "withdrawERC721",
                      "nameLocation": "17262:14:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 25748,
                      "src": "17249:27:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 25677,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17249:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25685,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25680,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "17319:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 25681,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "17338:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25682,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "17338:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 25683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17360:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 25679,
                      "name": "initializeWithdrawalERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34365,
                      "src": "17279:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 25684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17279:92:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17249:122:60"
                },
                {
                  "assignments": [
                    25687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25687,
                      "mutability": "mutable",
                      "name": "withdraw2ERC721",
                      "nameLocation": "17394:15:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 25748,
                      "src": "17381:28:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 25686,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17381:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25694,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25689,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "17452:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 25690,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "17471:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25691,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "17471:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 25692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17493:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 25688,
                      "name": "initializeWithdrawalERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34365,
                      "src": "17412:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 25693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17412:92:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17381:123:60"
                },
                {
                  "assignments": [
                    25699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25699,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "17529:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 25748,
                      "src": "17514:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25697,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "17514:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 25698,
                        "nodeType": "ArrayTypeName",
                        "src": "17514:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25705,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 25703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17548:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 25702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "17536:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25700,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "17540:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 25701,
                        "nodeType": "ArrayTypeName",
                        "src": "17540:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 25704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17536:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17514:36:60"
                },
                {
                  "expression": {
                    "id": 25710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25706,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25699,
                        "src": "17560:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 25708,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 25707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17565:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17560:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25709,
                      "name": "withdrawERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25678,
                      "src": "17570:14:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "17560:24:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 25711,
                  "nodeType": "ExpressionStatement",
                  "src": "17560:24:60"
                },
                {
                  "expression": {
                    "id": 25716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25712,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25699,
                        "src": "17594:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 25714,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 25713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17599:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "17594:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25715,
                      "name": "withdraw2ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25687,
                      "src": "17604:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "17594:25:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 25717,
                  "nodeType": "ExpressionStatement",
                  "src": "17594:25:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25723,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "17665:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 25724,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "17665:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 25720,
                                "name": "erc721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32221,
                                "src": "17647:6:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 25719,
                              "name": "IERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17185,
                              "src": "17639:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$17185_$",
                                "typeString": "type(contract IERC721)"
                              }
                            },
                            "id": 25721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17639:15:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$17185",
                              "typeString": "contract IERC721"
                            }
                          },
                          "id": 25722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17101,
                          "src": "17639:25:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17639:35:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17676:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 25718,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "17630:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17630:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25728,
                  "nodeType": "ExpressionStatement",
                  "src": "17630:48:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25734,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25699,
                        "src": "17715:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25729,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "17688:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25732,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "17688:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "17688:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 25735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17688:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 25736,
                  "nodeType": "ExpressionStatement",
                  "src": "17688:32:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25742,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "17765:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 25743,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "17765:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 25739,
                                "name": "erc721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32221,
                                "src": "17747:6:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 25738,
                              "name": "IERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17185,
                              "src": "17739:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$17185_$",
                                "typeString": "type(contract IERC721)"
                              }
                            },
                            "id": 25740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17739:15:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$17185",
                              "typeString": "contract IERC721"
                            }
                          },
                          "id": 25741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17101,
                          "src": "17739:25:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17739:35:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 25745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17776:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 25737,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "17730:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17730:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25747,
                  "nodeType": "ExpressionStatement",
                  "src": "17730:48:60"
                }
              ]
            },
            "documentation": {
              "id": 25661,
              "nodeType": "StructuredDocumentation",
              "src": "16981:103:60",
              "text": "===========================\n ===== WITHDRAW ERC721 =====\n ==========================="
            },
            "functionSelector": "a65dcafe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC721",
            "nameLocation": "17098:18:60",
            "parameters": {
              "id": 25662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17116:2:60"
            },
            "returnParameters": {
              "id": 25663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17126:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25841,
            "nodeType": "FunctionDefinition",
            "src": "17791:712:60",
            "body": {
              "id": 25840,
              "nodeType": "Block",
              "src": "17834:669:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25753,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "17861:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25754,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "17868:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25755,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "17873:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25756,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "17887:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17901:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25752,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "17844:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17844:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25759,
                  "nodeType": "ExpressionStatement",
                  "src": "17844:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25765,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "17944:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25766,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "17944:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25767,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "17954:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 25768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17961:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25760,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "17916:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25763,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "erc721",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32187,
                        "src": "17916:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC721BS_$46122",
                          "typeString": "contract MockERC721BS"
                        }
                      },
                      "id": 25764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45998,
                      "src": "17916:27:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 25769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17916:47:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25770,
                  "nodeType": "ExpressionStatement",
                  "src": "17916:47:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25776,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "17997:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25777,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "18004:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25771,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "17973:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25774,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "17973:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38065,
                      "src": "17973:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17973:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25779,
                  "nodeType": "ExpressionStatement",
                  "src": "17973:41:60"
                },
                {
                  "assignments": [
                    25781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25781,
                      "mutability": "mutable",
                      "name": "withdrawERC721",
                      "nameLocation": "18038:14:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 25840,
                      "src": "18025:27:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 25780,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "18025:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25788,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25783,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "18095:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 25784,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "18114:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25785,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "18114:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 25786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18136:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 25782,
                      "name": "initializeWithdrawalERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34365,
                      "src": "18055:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 25787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18055:92:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18025:122:60"
                },
                {
                  "assignments": [
                    25790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25790,
                      "mutability": "mutable",
                      "name": "withdraw2ERC721",
                      "nameLocation": "18170:15:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 25840,
                      "src": "18157:28:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 25789,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "18157:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25797,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25792,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "18228:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 25793,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "18247:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25794,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "18247:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 25795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18269:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 25791,
                      "name": "initializeWithdrawalERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34365,
                      "src": "18188:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 25796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18188:92:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18157:123:60"
                },
                {
                  "assignments": [
                    25802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25802,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "18305:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 25840,
                      "src": "18290:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25800,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "18290:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 25801,
                        "nodeType": "ArrayTypeName",
                        "src": "18290:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25808,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 25806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18324:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 25805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "18312:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25803,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "18316:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 25804,
                        "nodeType": "ArrayTypeName",
                        "src": "18316:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 25807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18312:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18290:36:60"
                },
                {
                  "expression": {
                    "id": 25813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25809,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25802,
                        "src": "18336:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 25811,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 25810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18341:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18336:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25812,
                      "name": "withdrawERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25781,
                      "src": "18346:14:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "18336:24:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 25814,
                  "nodeType": "ExpressionStatement",
                  "src": "18336:24:60"
                },
                {
                  "expression": {
                    "id": 25819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25815,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25802,
                        "src": "18370:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 25817,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 25816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18375:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18370:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25818,
                      "name": "withdraw2ERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25790,
                      "src": "18380:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "18370:25:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 25820,
                  "nodeType": "ExpressionStatement",
                  "src": "18370:25:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25826,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25802,
                        "src": "18433:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25821,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "18406:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25824,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "18406:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "18406:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 25827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18406:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 25828,
                  "nodeType": "ExpressionStatement",
                  "src": "18406:32:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25834,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "18483:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 25835,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "18483:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 25831,
                                "name": "erc721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32221,
                                "src": "18465:6:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 25830,
                              "name": "IERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17185,
                              "src": "18457:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$17185_$",
                                "typeString": "type(contract IERC721)"
                              }
                            },
                            "id": 25832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18457:15:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$17185",
                              "typeString": "contract IERC721"
                            }
                          },
                          "id": 25833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17101,
                          "src": "18457:25:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18457:35:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 25837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18494:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 25829,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "18448:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18448:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25839,
                  "nodeType": "ExpressionStatement",
                  "src": "18448:48:60"
                }
              ]
            },
            "functionSelector": "378c0afe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC721Redeem",
            "nameLocation": "17800:24:60",
            "parameters": {
              "id": 25750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17824:2:60"
            },
            "returnParameters": {
              "id": 25751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17834:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25910,
            "nodeType": "FunctionDefinition",
            "src": "18509:604:60",
            "body": {
              "id": 25909,
              "nodeType": "Block",
              "src": "18561:552:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25845,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "18588:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25846,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "18595:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25847,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "18600:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25848,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "18614:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18627:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25844,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "18571:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18571:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25851,
                  "nodeType": "ExpressionStatement",
                  "src": "18571:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25853,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "18662:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25854,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "18669:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 25852,
                      "name": "setUpWithdrawERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33542,
                      "src": "18642:19:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 25855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18642:31:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25856,
                  "nodeType": "ExpressionStatement",
                  "src": "18642:31:60"
                },
                {
                  "assignments": [
                    25858
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25858,
                      "mutability": "mutable",
                      "name": "withdrawERC721",
                      "nameLocation": "18697:14:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 25909,
                      "src": "18684:27:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 25857,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "18684:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25868,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25862,
                            "name": "baseVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32132,
                            "src": "18762:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          ],
                          "id": 25861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18754:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25860,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18754:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18754:18:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 25864,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "18786:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25865,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "18786:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 25866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18808:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 25859,
                      "name": "initializeWithdrawalERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34365,
                      "src": "18714:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 25867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18714:105:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18684:135:60"
                },
                {
                  "assignments": [
                    25873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25873,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "18844:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 25909,
                      "src": "18829:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25871,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "18829:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 25872,
                        "nodeType": "ArrayTypeName",
                        "src": "18829:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25879,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 25877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18863:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 25876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "18851:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25874,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "18855:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 25875,
                        "nodeType": "ArrayTypeName",
                        "src": "18855:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 25878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18851:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18829:36:60"
                },
                {
                  "expression": {
                    "id": 25884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25880,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25873,
                        "src": "18875:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 25882,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 25881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18880:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18875:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25883,
                      "name": "withdrawERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25858,
                      "src": "18885:14:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "18875:24:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 25885,
                  "nodeType": "ExpressionStatement",
                  "src": "18875:24:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 25891,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "18979:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 25892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16591,
                              "src": "18979:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 25893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "18979:25:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 25896,
                                "name": "baseVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32132,
                                "src": "19030:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              ],
                              "id": 25895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19022:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25894,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19022:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19022:18:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25889,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18939:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 25890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "18939:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 25898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18939:115:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25886,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "18910:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "18910:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18910:154:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25900,
                  "nodeType": "ExpressionStatement",
                  "src": "18910:154:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25906,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25873,
                        "src": "19101:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25901,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "19074:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25904,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "19074:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "19074:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 25907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19074:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 25908,
                  "nodeType": "ExpressionStatement",
                  "src": "19074:32:60"
                }
              ]
            },
            "functionSelector": "87d7898c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC721RevertNotAVault",
            "nameLocation": "18518:33:60",
            "parameters": {
              "id": 25842,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18551:2:60"
            },
            "returnParameters": {
              "id": 25843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18561:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25983,
            "nodeType": "FunctionDefinition",
            "src": "19119:576:60",
            "body": {
              "id": 25982,
              "nodeType": "Block",
              "src": "19175:520:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25914,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "19202:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25915,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "19209:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25916,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "19214:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25917,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "19228:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19241:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25913,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "19185:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19185:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25920,
                  "nodeType": "ExpressionStatement",
                  "src": "19185:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25928,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "19296:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 25921,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "19257:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 25924,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "19257:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 25925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "19257:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 25927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 25926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19287:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "19257:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 25929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19257:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25930,
                  "nodeType": "ExpressionStatement",
                  "src": "19257:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25938,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "19362:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 25939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19369:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 25931,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "19312:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 25934,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "19312:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 25935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "19312:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 25937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e32",
                          "id": 25936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19351:9:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "value": "0.2"
                        }
                      ],
                      "src": "19312:49:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 25940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19312:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25941,
                  "nodeType": "ExpressionStatement",
                  "src": "19312:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25945,
                          "name": "rejectionPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32241,
                          "src": "19392:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 25946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19410:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19392:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25942,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "19384:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3286,
                      "src": "19384:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 25948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19384:28:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25949,
                  "nodeType": "ExpressionStatement",
                  "src": "19384:28:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25955,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "19443:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25956,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "19450:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25950,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "19422:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25953,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "19422:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37896,
                      "src": "19422:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 25957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19422:38:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25958,
                  "nodeType": "ExpressionStatement",
                  "src": "19422:38:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25960,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "19489:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 25961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SUCCESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16550,
                        "src": "19489:13:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      },
                      {
                        "expression": {
                          "id": 25962,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "19504:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 25963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "INACTIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16548,
                        "src": "19504:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      ],
                      "id": 25959,
                      "name": "revertBuyoutState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34628,
                      "src": "19471:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_State_$16551_$_t_enum$_State_$16551_$returns$__$",
                        "typeString": "function (enum State,enum State)"
                      }
                    },
                    "id": 25964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19471:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25965,
                  "nodeType": "ExpressionStatement",
                  "src": "19471:48:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25971,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "19574:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 25974,
                            "name": "erc721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32221,
                            "src": "19601:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19593:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25972,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19593:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19593:15:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 25976,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "19622:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25977,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "19622:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 25978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19644:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 25979,
                        "name": "erc721TransferProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32296,
                        "src": "19659:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 25966,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "19529:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 25969,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "19529:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 25970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38313,
                      "src": "19529:31:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes32[] memory) external"
                      }
                    },
                    "id": 25980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19529:159:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25981,
                  "nodeType": "ExpressionStatement",
                  "src": "19529:159:60"
                }
              ]
            },
            "functionSelector": "dce0d839",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC721RevertStateINACTIVE",
            "nameLocation": "19128:37:60",
            "parameters": {
              "id": 25911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19165:2:60"
            },
            "returnParameters": {
              "id": 25912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19175:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26045,
            "nodeType": "FunctionDefinition",
            "src": "19701:509:60",
            "body": {
              "id": 26044,
              "nodeType": "Block",
              "src": "19754:456:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25987,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "19781:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25988,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "19788:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25989,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "19793:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25990,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "19807:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19820:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25986,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "19764:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 25992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19764:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25993,
                  "nodeType": "ExpressionStatement",
                  "src": "19764:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25995,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "19855:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 25996,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "19862:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 25994,
                      "name": "setUpWithdrawERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33542,
                      "src": "19835:19:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 25997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19835:31:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25998,
                  "nodeType": "ExpressionStatement",
                  "src": "19835:31:60"
                },
                {
                  "assignments": [
                    26000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26000,
                      "mutability": "mutable",
                      "name": "withdrawERC721",
                      "nameLocation": "19890:14:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26044,
                      "src": "19877:27:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 25999,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "19877:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26007,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26002,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "19947:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26003,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "19966:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26004,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "19966:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19990:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26001,
                      "name": "initializeWithdrawalERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34365,
                      "src": "19907:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 26006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19907:94:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19877:124:60"
                },
                {
                  "assignments": [
                    26012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26012,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "20026:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26044,
                      "src": "20011:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26010,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "20011:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26011,
                        "nodeType": "ArrayTypeName",
                        "src": "20011:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26018,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 26016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20045:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "20033:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26013,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "20037:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26014,
                        "nodeType": "ArrayTypeName",
                        "src": "20037:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 26017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20033:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20011:36:60"
                },
                {
                  "expression": {
                    "id": 26023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26019,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26012,
                        "src": "20057:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 26021,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 26020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20062:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20057:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26022,
                      "name": "withdrawERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26000,
                      "src": "20067:14:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "20057:24:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 26024,
                  "nodeType": "ExpressionStatement",
                  "src": "20057:24:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 26030,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "20131:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 26031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotWinner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16586,
                              "src": "20131:17:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 26032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "20131:26:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 26028,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "20108:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "20108:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 26033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20108:50:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 26025,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "20092:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "20092:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20092:67:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26035,
                  "nodeType": "ExpressionStatement",
                  "src": "20092:67:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26041,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26012,
                        "src": "20198:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26036,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "20169:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26039,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "20169:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "20169:28:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 26042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20169:34:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 26043,
                  "nodeType": "ExpressionStatement",
                  "src": "20169:34:60"
                }
              ]
            },
            "functionSelector": "3fc16abf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC721RevertNotAllowed",
            "nameLocation": "19710:34:60",
            "parameters": {
              "id": 25984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19744:2:60"
            },
            "returnParameters": {
              "id": 25985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19754:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26122,
            "nodeType": "FunctionDefinition",
            "src": "20327:560:60",
            "body": {
              "id": 26121,
              "nodeType": "Block",
              "src": "20365:522:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26050,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "20392:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26051,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "20399:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26052,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "20404:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26053,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "20418:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20431:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26049,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "20375:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 26055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20375:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26056,
                  "nodeType": "ExpressionStatement",
                  "src": "20375:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26058,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "20467:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26059,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "20474:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 26057,
                      "name": "setUpWithdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33602,
                      "src": "20446:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 26060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20446:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26061,
                  "nodeType": "ExpressionStatement",
                  "src": "20446:32:60"
                },
                {
                  "assignments": [
                    26063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26063,
                      "mutability": "mutable",
                      "name": "withdrawERC1155",
                      "nameLocation": "20502:15:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26121,
                      "src": "20489:28:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26062,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "20489:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26071,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26065,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "20561:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26066,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "20580:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26067,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "20580:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20602:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130",
                        "id": 26069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20617:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26064,
                      "name": "initializeWithdrawalERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34394,
                      "src": "20520:27:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 26070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20520:109:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20489:140:60"
                },
                {
                  "assignments": [
                    26076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26076,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "20654:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26121,
                      "src": "20639:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26074,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "20639:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26075,
                        "nodeType": "ArrayTypeName",
                        "src": "20639:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26082,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 26080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20673:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "20661:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26077,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "20665:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26078,
                        "nodeType": "ArrayTypeName",
                        "src": "20665:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 26081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20661:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20639:36:60"
                },
                {
                  "expression": {
                    "id": 26087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26083,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26076,
                        "src": "20685:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 26085,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 26084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20690:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20685:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26086,
                      "name": "withdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26063,
                      "src": "20695:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "20685:25:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 26088,
                  "nodeType": "ExpressionStatement",
                  "src": "20685:25:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26094,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "20758:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26095,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "20758:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 26096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20768:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26091,
                                "name": "erc1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32223,
                                "src": "20739:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26090,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16946,
                              "src": "20730:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$16946_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 26092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20730:17:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$16946",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "id": 26093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16875,
                          "src": "20730:27:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 26097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20730:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20772:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 26089,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "20721:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20721:53:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26100,
                  "nodeType": "ExpressionStatement",
                  "src": "20721:53:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26106,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26076,
                        "src": "20811:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26101,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "20784:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26104,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "20784:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "20784:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 26107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20784:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 26108,
                  "nodeType": "ExpressionStatement",
                  "src": "20784:32:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26114,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "20863:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26115,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "20863:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 26116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20873:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26111,
                                "name": "erc1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32223,
                                "src": "20844:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26110,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16946,
                              "src": "20835:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$16946_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 26112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20835:17:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$16946",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "id": 26113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16875,
                          "src": "20835:27:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 26117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20835:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 26118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20877:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26109,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "20826:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20826:54:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26120,
                  "nodeType": "ExpressionStatement",
                  "src": "20826:54:60"
                }
              ]
            },
            "documentation": {
              "id": 26046,
              "nodeType": "StructuredDocumentation",
              "src": "20216:106:60",
              "text": "============================\n ===== WITHDRAW ERC1155 =====\n ============================"
            },
            "functionSelector": "531960df",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC1155",
            "nameLocation": "20336:19:60",
            "parameters": {
              "id": 26047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20355:2:60"
            },
            "returnParameters": {
              "id": 26048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20365:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26200,
            "nodeType": "FunctionDefinition",
            "src": "20893:566:60",
            "body": {
              "id": 26199,
              "nodeType": "Block",
              "src": "20937:522:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26126,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "20964:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26127,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "20971:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26128,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "20976:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26129,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "20990:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21004:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26125,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "20947:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 26131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20947:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26132,
                  "nodeType": "ExpressionStatement",
                  "src": "20947:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26137,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "21045:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21052:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130",
                        "id": 26139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21055:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "",
                        "id": 26140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21059:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 26134,
                            "name": "erc1155",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32223,
                            "src": "21031:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 26133,
                          "name": "MockERC1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18408,
                          "src": "21019:11:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MockERC1155_$18408_$",
                            "typeString": "type(contract MockERC1155)"
                          }
                        },
                        "id": 26135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21019:20:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC1155_$18408",
                          "typeString": "contract MockERC1155"
                        }
                      },
                      "id": 26136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18352,
                      "src": "21019:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory) external"
                      }
                    },
                    "id": 26141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21019:43:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26142,
                  "nodeType": "ExpressionStatement",
                  "src": "21019:43:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26148,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "21096:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26149,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "21103:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26143,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "21072:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26146,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "21072:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38065,
                      "src": "21072:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 26150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21072:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26151,
                  "nodeType": "ExpressionStatement",
                  "src": "21072:41:60"
                },
                {
                  "assignments": [
                    26153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26153,
                      "mutability": "mutable",
                      "name": "withdrawERC1155",
                      "nameLocation": "21137:15:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26199,
                      "src": "21124:28:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26152,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "21124:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26161,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26155,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "21196:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26156,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "21215:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26157,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "21215:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21237:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130",
                        "id": 26159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21252:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26154,
                      "name": "initializeWithdrawalERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34394,
                      "src": "21155:27:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 26160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21155:109:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21124:140:60"
                },
                {
                  "assignments": [
                    26166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26166,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "21289:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26199,
                      "src": "21274:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26164,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "21274:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26165,
                        "nodeType": "ArrayTypeName",
                        "src": "21274:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26172,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 26170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21308:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "21296:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26167,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "21300:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26168,
                        "nodeType": "ArrayTypeName",
                        "src": "21300:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 26171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21296:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21274:36:60"
                },
                {
                  "expression": {
                    "id": 26177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26173,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26166,
                        "src": "21320:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 26175,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 26174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21325:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21320:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26176,
                      "name": "withdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26153,
                      "src": "21330:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "21320:25:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 26178,
                  "nodeType": "ExpressionStatement",
                  "src": "21320:25:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26184,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26166,
                        "src": "21383:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26179,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "21356:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26182,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "21356:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "21356:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 26185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21356:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 26186,
                  "nodeType": "ExpressionStatement",
                  "src": "21356:32:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26192,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "21435:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26193,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "21435:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 26194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21445:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26189,
                                "name": "erc1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32223,
                                "src": "21416:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26188,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16946,
                              "src": "21407:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$16946_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 26190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21407:17:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$16946",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "id": 26191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16875,
                          "src": "21407:27:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 26195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21407:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 26196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21449:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26187,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "21398:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21398:54:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26198,
                  "nodeType": "ExpressionStatement",
                  "src": "21398:54:60"
                }
              ]
            },
            "functionSelector": "c805cb5c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC1155Redeem",
            "nameLocation": "20902:25:60",
            "parameters": {
              "id": 26123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20927:2:60"
            },
            "returnParameters": {
              "id": 26124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20937:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26270,
            "nodeType": "FunctionDefinition",
            "src": "21465:625:60",
            "body": {
              "id": 26269,
              "nodeType": "Block",
              "src": "21518:572:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26204,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "21545:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26205,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "21552:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26206,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "21557:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26207,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "21571:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21584:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26203,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "21528:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 26209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21528:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26210,
                  "nodeType": "ExpressionStatement",
                  "src": "21528:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26212,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "21620:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26213,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "21627:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 26211,
                      "name": "setUpWithdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33602,
                      "src": "21599:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 26214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21599:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26215,
                  "nodeType": "ExpressionStatement",
                  "src": "21599:32:60"
                },
                {
                  "assignments": [
                    26217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26217,
                      "mutability": "mutable",
                      "name": "withdrawERC1155",
                      "nameLocation": "21655:15:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26269,
                      "src": "21642:28:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26216,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "21642:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26228,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26221,
                            "name": "baseVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32132,
                            "src": "21722:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          ],
                          "id": 26220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21714:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26219,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21714:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21714:18:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26223,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "21746:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26224,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "21746:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21768:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130",
                        "id": 26226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21783:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26218,
                      "name": "initializeWithdrawalERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34394,
                      "src": "21673:27:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 26227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21673:122:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21642:153:60"
                },
                {
                  "assignments": [
                    26233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26233,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "21820:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26269,
                      "src": "21805:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26231,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "21805:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26232,
                        "nodeType": "ArrayTypeName",
                        "src": "21805:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26239,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 26237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21839:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "21827:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26234,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "21831:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26235,
                        "nodeType": "ArrayTypeName",
                        "src": "21831:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 26238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21827:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21805:36:60"
                },
                {
                  "expression": {
                    "id": 26244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26240,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26233,
                        "src": "21851:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 26242,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 26241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21856:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21851:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26243,
                      "name": "withdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26217,
                      "src": "21861:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "21851:25:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 26245,
                  "nodeType": "ExpressionStatement",
                  "src": "21851:25:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 26251,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "21956:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 26252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16591,
                              "src": "21956:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 26253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "21956:25:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 26256,
                                "name": "baseVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32132,
                                "src": "22007:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              ],
                              "id": 26255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21999:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26254,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "21999:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21999:18:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 26249,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "21916:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "21916:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 26258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21916:115:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 26246,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "21887:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "21887:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21887:154:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26260,
                  "nodeType": "ExpressionStatement",
                  "src": "21887:154:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26266,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26233,
                        "src": "22078:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26261,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "22051:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26264,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "22051:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "22051:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 26267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22051:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 26268,
                  "nodeType": "ExpressionStatement",
                  "src": "22051:32:60"
                }
              ]
            },
            "functionSelector": "256f6bf7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC1155RevertNotAVault",
            "nameLocation": "21474:34:60",
            "parameters": {
              "id": 26201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21508:2:60"
            },
            "returnParameters": {
              "id": 26202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21518:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26344,
            "nodeType": "FunctionDefinition",
            "src": "22096:596:60",
            "body": {
              "id": 26343,
              "nodeType": "Block",
              "src": "22153:539:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26274,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "22180:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26275,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "22187:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26276,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "22192:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26277,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "22206:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22219:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26273,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "22163:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 26279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22163:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26280,
                  "nodeType": "ExpressionStatement",
                  "src": "22163:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26288,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "22274:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 26281,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "22235:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 26284,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "22235:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 26285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "22235:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 26287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 26286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22265:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "22235:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 26289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22235:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26290,
                  "nodeType": "ExpressionStatement",
                  "src": "22235:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26298,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "22340:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 26299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22347:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 26291,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "22290:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 26294,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "22290:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 26295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "22290:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 26297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e32",
                          "id": 26296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22329:9:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "value": "0.2"
                        }
                      ],
                      "src": "22290:49:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 26300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22290:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26301,
                  "nodeType": "ExpressionStatement",
                  "src": "22290:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 26307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26305,
                          "name": "rejectionPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32241,
                          "src": "22370:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 26306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22388:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "22370:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 26302,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "22362:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3286,
                      "src": "22362:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 26308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22362:28:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26309,
                  "nodeType": "ExpressionStatement",
                  "src": "22362:28:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26315,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "22421:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26316,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "22428:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26310,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "22400:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26313,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "22400:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37896,
                      "src": "22400:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 26317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22400:38:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26318,
                  "nodeType": "ExpressionStatement",
                  "src": "22400:38:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 26320,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "22467:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 26321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SUCCESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16550,
                        "src": "22467:13:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      },
                      {
                        "expression": {
                          "id": 26322,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "22482:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 26323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "INACTIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16548,
                        "src": "22482:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      ],
                      "id": 26319,
                      "name": "revertBuyoutState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34628,
                      "src": "22449:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_State_$16551_$_t_enum$_State_$16551_$returns$__$",
                        "typeString": "function (enum State,enum State)"
                      }
                    },
                    "id": 26324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22449:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26325,
                  "nodeType": "ExpressionStatement",
                  "src": "22449:48:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26331,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "22553:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26334,
                            "name": "erc1155",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32223,
                            "src": "22580:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 26333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22572:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26332,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "22572:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22572:16:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26336,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "22602:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26337,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "22602:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22624:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130",
                        "id": 26339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22639:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "id": 26340,
                        "name": "erc1155TransferProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32304,
                        "src": "22655:20:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26326,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "22507:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26329,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "22507:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawERC1155",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38253,
                      "src": "22507:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes32[] memory) external"
                      }
                    },
                    "id": 26341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22507:178:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26342,
                  "nodeType": "ExpressionStatement",
                  "src": "22507:178:60"
                }
              ]
            },
            "functionSelector": "b37c0b52",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC1155RevertStateINACTIVE",
            "nameLocation": "22105:38:60",
            "parameters": {
              "id": 26271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22143:2:60"
            },
            "returnParameters": {
              "id": 26272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22153:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26407,
            "nodeType": "FunctionDefinition",
            "src": "22698:530:60",
            "body": {
              "id": 26406,
              "nodeType": "Block",
              "src": "22752:476:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26348,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "22779:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26349,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "22786:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26350,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "22791:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26351,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "22805:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22818:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26347,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "22762:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 26353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22762:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26354,
                  "nodeType": "ExpressionStatement",
                  "src": "22762:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26356,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "22854:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26357,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "22861:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 26355,
                      "name": "setUpWithdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33602,
                      "src": "22833:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 26358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22833:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26359,
                  "nodeType": "ExpressionStatement",
                  "src": "22833:32:60"
                },
                {
                  "assignments": [
                    26361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26361,
                      "mutability": "mutable",
                      "name": "withdrawERC1155",
                      "nameLocation": "22889:15:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26406,
                      "src": "22876:28:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26360,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "22876:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26369,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26363,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "22948:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26364,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "22967:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26365,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "22967:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22991:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3130",
                        "id": 26367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23006:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26362,
                      "name": "initializeWithdrawalERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34394,
                      "src": "22907:27:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 26368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22907:111:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22876:142:60"
                },
                {
                  "assignments": [
                    26374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26374,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "23043:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26406,
                      "src": "23028:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26372,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "23028:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26373,
                        "nodeType": "ArrayTypeName",
                        "src": "23028:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26380,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 26378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23062:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "23050:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26375,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "23054:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26376,
                        "nodeType": "ArrayTypeName",
                        "src": "23054:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 26379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23050:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23028:36:60"
                },
                {
                  "expression": {
                    "id": 26385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26381,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26374,
                        "src": "23074:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 26383,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 26382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23079:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23074:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26384,
                      "name": "withdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26361,
                      "src": "23084:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "23074:25:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 26386,
                  "nodeType": "ExpressionStatement",
                  "src": "23074:25:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 26392,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "23149:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 26393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotWinner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16586,
                              "src": "23149:17:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 26394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "23149:26:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 26390,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "23126:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "23126:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 26395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23126:50:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 26387,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "23110:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "23110:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23110:67:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26397,
                  "nodeType": "ExpressionStatement",
                  "src": "23110:67:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26403,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26374,
                        "src": "23216:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26398,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "23187:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26401,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "23187:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "23187:28:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 26404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23187:34:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 26405,
                  "nodeType": "ExpressionStatement",
                  "src": "23187:34:60"
                }
              ]
            },
            "functionSelector": "b1437474",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC1155RevertNotAllowed",
            "nameLocation": "22707:35:60",
            "parameters": {
              "id": 26345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22742:2:60"
            },
            "returnParameters": {
              "id": 26346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22752:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26531,
            "nodeType": "FunctionDefinition",
            "src": "23363:825:60",
            "body": {
              "id": 26530,
              "nodeType": "Block",
              "src": "23406:782:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26412,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "23433:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26413,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "23440:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26414,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "23445:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26415,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "23459:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23472:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26411,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "23416:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 26417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23416:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26418,
                  "nodeType": "ExpressionStatement",
                  "src": "23416:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26420,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "23513:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26421,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "23520:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 26419,
                      "name": "setUpBatchWithdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33692,
                      "src": "23487:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 26422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23487:37:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26423,
                  "nodeType": "ExpressionStatement",
                  "src": "23487:37:60"
                },
                {
                  "assignments": [
                    26425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26425,
                      "mutability": "mutable",
                      "name": "batchWithdrawERC1155",
                      "nameLocation": "23548:20:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26530,
                      "src": "23535:33:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26424,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "23535:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26432,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26427,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "23617:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26428,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "23636:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26429,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "23636:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 26430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23658:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 26426,
                      "name": "initializeBatchWithdrawalERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34471,
                      "src": "23571:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 26431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23571:98:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23535:134:60"
                },
                {
                  "assignments": [
                    26437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26437,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "23694:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26530,
                      "src": "23679:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26435,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "23679:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26436,
                        "nodeType": "ArrayTypeName",
                        "src": "23679:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26443,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 26441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23713:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "23701:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26438,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "23705:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26439,
                        "nodeType": "ArrayTypeName",
                        "src": "23705:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 26442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23701:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23679:36:60"
                },
                {
                  "expression": {
                    "id": 26448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26444,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26437,
                        "src": "23725:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 26446,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 26445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23730:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23725:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26447,
                      "name": "batchWithdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26425,
                      "src": "23735:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "23725:30:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 26449,
                  "nodeType": "ExpressionStatement",
                  "src": "23725:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26455,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "23803:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26456,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "23803:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 26457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23813:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26452,
                                "name": "erc1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32223,
                                "src": "23784:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26451,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16946,
                              "src": "23775:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$16946_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 26453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23775:17:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$16946",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "id": 26454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16875,
                          "src": "23775:27:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 26458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23775:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23817:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 26450,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "23766:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23766:53:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26461,
                  "nodeType": "ExpressionStatement",
                  "src": "23766:53:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26467,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "23866:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26468,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "23866:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "32",
                            "id": 26469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23876:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26464,
                                "name": "erc1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32223,
                                "src": "23847:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26463,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16946,
                              "src": "23838:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$16946_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 26465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23838:17:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$16946",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "id": 26466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16875,
                          "src": "23838:27:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 26470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23838:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23880:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 26462,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "23829:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23829:53:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26473,
                  "nodeType": "ExpressionStatement",
                  "src": "23829:53:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26479,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "23929:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26480,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "23929:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "33",
                            "id": 26481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23939:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26476,
                                "name": "erc1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32223,
                                "src": "23910:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26475,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16946,
                              "src": "23901:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$16946_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 26477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23901:17:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$16946",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "id": 26478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16875,
                          "src": "23901:27:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 26482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23901:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23943:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 26474,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "23892:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23892:53:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26485,
                  "nodeType": "ExpressionStatement",
                  "src": "23892:53:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26491,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26437,
                        "src": "23983:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26486,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "23956:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26489,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "23956:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "23956:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 26492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23956:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 26493,
                  "nodeType": "ExpressionStatement",
                  "src": "23956:32:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26499,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "24036:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26500,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "24036:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 26501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24046:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26496,
                                "name": "erc1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32223,
                                "src": "24017:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26495,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16946,
                              "src": "24008:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$16946_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 26497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24008:17:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$16946",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "id": 26498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16875,
                          "src": "24008:27:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 26502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24008:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 26503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24050:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26494,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "23999:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23999:54:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26505,
                  "nodeType": "ExpressionStatement",
                  "src": "23999:54:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26511,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "24100:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26512,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "24100:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "32",
                            "id": 26513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24110:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26508,
                                "name": "erc1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32223,
                                "src": "24081:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26507,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16946,
                              "src": "24072:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$16946_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 26509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24072:17:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$16946",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "id": 26510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16875,
                          "src": "24072:27:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 26514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24072:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 26515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24114:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26506,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "24063:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24063:54:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26517,
                  "nodeType": "ExpressionStatement",
                  "src": "24063:54:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26523,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "24164:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26524,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "24164:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "33",
                            "id": 26525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24174:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26520,
                                "name": "erc1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32223,
                                "src": "24145:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26519,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16946,
                              "src": "24136:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$16946_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 26521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24136:17:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$16946",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "id": 26522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16875,
                          "src": "24136:27:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 26526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24136:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 26527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24178:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26518,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "24127:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24127:54:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26529,
                  "nodeType": "ExpressionStatement",
                  "src": "24127:54:60"
                }
              ]
            },
            "documentation": {
              "id": 26408,
              "nodeType": "StructuredDocumentation",
              "src": "23234:124:60",
              "text": "==================================\n ===== BATCH WITHDRAW ERC1155 =====\n =================================="
            },
            "functionSelector": "fad6689d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBatchWithdrawERC1155",
            "nameLocation": "23372:24:60",
            "parameters": {
              "id": 26409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23396:2:60"
            },
            "returnParameters": {
              "id": 26410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23406:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26627,
            "nodeType": "FunctionDefinition",
            "src": "24194:676:60",
            "body": {
              "id": 26626,
              "nodeType": "Block",
              "src": "24243:627:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26535,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "24270:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26536,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "24277:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26537,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "24282:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26538,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "24296:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24310:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26534,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "24253:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 26540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24253:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26541,
                  "nodeType": "ExpressionStatement",
                  "src": "24253:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26543,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "24337:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 26544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24344:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 26542,
                      "name": "mintERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33632,
                      "src": "24325:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 26545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24325:21:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26546,
                  "nodeType": "ExpressionStatement",
                  "src": "24325:21:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26552,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "24380:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26553,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "24387:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26547,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "24356:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26550,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "24356:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38065,
                      "src": "24356:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 26554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24356:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26555,
                  "nodeType": "ExpressionStatement",
                  "src": "24356:41:60"
                },
                {
                  "assignments": [
                    26557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26557,
                      "mutability": "mutable",
                      "name": "batchWithdrawERC1155",
                      "nameLocation": "24421:20:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26626,
                      "src": "24408:33:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26556,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "24408:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26564,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26559,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "24490:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26560,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "24509:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26561,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "24509:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 26562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24531:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 26558,
                      "name": "initializeBatchWithdrawalERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34471,
                      "src": "24444:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 26563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24444:98:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24408:134:60"
                },
                {
                  "assignments": [
                    26569
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26569,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "24567:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26626,
                      "src": "24552:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26567,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "24552:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26568,
                        "nodeType": "ArrayTypeName",
                        "src": "24552:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26575,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 26573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24586:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "24574:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26570,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "24578:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26571,
                        "nodeType": "ArrayTypeName",
                        "src": "24578:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 26574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24574:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24552:36:60"
                },
                {
                  "expression": {
                    "id": 26580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26576,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26569,
                        "src": "24598:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 26578,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 26577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24603:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24598:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26579,
                      "name": "batchWithdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26557,
                      "src": "24608:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "24598:30:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 26581,
                  "nodeType": "ExpressionStatement",
                  "src": "24598:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26587,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26569,
                        "src": "24666:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26582,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "24639:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26585,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "24639:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "24639:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 26588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24639:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 26589,
                  "nodeType": "ExpressionStatement",
                  "src": "24639:32:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26595,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "24718:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26596,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "24718:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "31",
                            "id": 26597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24728:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26592,
                                "name": "erc1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32223,
                                "src": "24699:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26591,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16946,
                              "src": "24690:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$16946_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 26593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24690:17:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$16946",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "id": 26594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16875,
                          "src": "24690:27:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 26598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24690:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 26599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24732:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26590,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "24681:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24681:54:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26601,
                  "nodeType": "ExpressionStatement",
                  "src": "24681:54:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26607,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "24782:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26608,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "24782:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "32",
                            "id": 26609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24792:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26604,
                                "name": "erc1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32223,
                                "src": "24763:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26603,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16946,
                              "src": "24754:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$16946_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 26605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24754:17:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$16946",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "id": 26606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16875,
                          "src": "24754:27:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 26610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24754:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 26611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24796:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26602,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "24745:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24745:54:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26613,
                  "nodeType": "ExpressionStatement",
                  "src": "24745:54:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26619,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "24846:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26620,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "24846:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "33",
                            "id": 26621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24856:1:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26616,
                                "name": "erc1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32223,
                                "src": "24827:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26615,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16946,
                              "src": "24818:8:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$16946_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            },
                            "id": 26617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24818:17:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1155_$16946",
                              "typeString": "contract IERC1155"
                            }
                          },
                          "id": 26618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16875,
                          "src": "24818:27:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 26622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24818:40:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 26623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24860:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26614,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "24809:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24809:54:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26625,
                  "nodeType": "ExpressionStatement",
                  "src": "24809:54:60"
                }
              ]
            },
            "functionSelector": "1dec4703",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBatchWithdrawERC1155Redeem",
            "nameLocation": "24203:30:60",
            "parameters": {
              "id": 26532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24233:2:60"
            },
            "returnParameters": {
              "id": 26533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24243:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26696,
            "nodeType": "FunctionDefinition",
            "src": "24876:634:60",
            "body": {
              "id": 26695,
              "nodeType": "Block",
              "src": "24934:576:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26631,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "24961:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26632,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "24968:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26633,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "24973:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26634,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "24987:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25000:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26630,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "24944:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 26636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24944:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26637,
                  "nodeType": "ExpressionStatement",
                  "src": "24944:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26639,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "25041:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26640,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "25048:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 26638,
                      "name": "setUpBatchWithdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33692,
                      "src": "25015:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 26641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25015:37:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26642,
                  "nodeType": "ExpressionStatement",
                  "src": "25015:37:60"
                },
                {
                  "assignments": [
                    26644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26644,
                      "mutability": "mutable",
                      "name": "batchWithdrawERC1155",
                      "nameLocation": "25076:20:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26695,
                      "src": "25063:33:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26643,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "25063:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26654,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26648,
                            "name": "baseVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32132,
                            "src": "25153:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          ],
                          "id": 26647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "25145:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26646,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "25145:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25145:18:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26650,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "25177:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26651,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "25177:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 26652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25199:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 26645,
                      "name": "initializeBatchWithdrawalERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34471,
                      "src": "25099:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 26653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25099:111:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25063:147:60"
                },
                {
                  "assignments": [
                    26659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26659,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "25235:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26695,
                      "src": "25220:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26657,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "25220:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26658,
                        "nodeType": "ArrayTypeName",
                        "src": "25220:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26665,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 26663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25254:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "25242:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26660,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "25246:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26661,
                        "nodeType": "ArrayTypeName",
                        "src": "25246:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 26664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25242:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25220:36:60"
                },
                {
                  "expression": {
                    "id": 26670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26666,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26659,
                        "src": "25266:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 26668,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 26667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25271:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "25266:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26669,
                      "name": "batchWithdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26644,
                      "src": "25276:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "25266:30:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 26671,
                  "nodeType": "ExpressionStatement",
                  "src": "25266:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 26677,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "25376:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 26678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16591,
                              "src": "25376:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 26679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "25376:25:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 26682,
                                "name": "baseVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32132,
                                "src": "25427:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              ],
                              "id": 26681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "25419:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26680,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "25419:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25419:18:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 26675,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "25336:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "25336:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 26684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25336:115:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 26672,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "25307:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "25307:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25307:154:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26686,
                  "nodeType": "ExpressionStatement",
                  "src": "25307:154:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26692,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26659,
                        "src": "25498:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26687,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "25471:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26690,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "25471:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "25471:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 26693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25471:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 26694,
                  "nodeType": "ExpressionStatement",
                  "src": "25471:32:60"
                }
              ]
            },
            "functionSelector": "1844df00",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBatchWithdrawERC1155RevertNotAVault",
            "nameLocation": "24885:39:60",
            "parameters": {
              "id": 26628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24924:2:60"
            },
            "returnParameters": {
              "id": 26629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24934:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26817,
            "nodeType": "FunctionDefinition",
            "src": "25516:826:60",
            "body": {
              "id": 26816,
              "nodeType": "Block",
              "src": "25578:764:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26700,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "25605:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26701,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "25612:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26702,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "25617:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26703,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "25631:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25644:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26699,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "25588:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 26705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25588:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26706,
                  "nodeType": "ExpressionStatement",
                  "src": "25588:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26714,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "25699:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 26707,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "25660:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 26710,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "25660:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 26711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "25660:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 26713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 26712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25690:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "25660:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 26715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25660:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26716,
                  "nodeType": "ExpressionStatement",
                  "src": "25660:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26724,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "25765:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 26725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25772:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 26717,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "25715:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 26720,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "25715:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 26721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "25715:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 26723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e32",
                          "id": 26722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25754:9:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "value": "0.2"
                        }
                      ],
                      "src": "25715:49:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 26726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25715:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26727,
                  "nodeType": "ExpressionStatement",
                  "src": "25715:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 26733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26731,
                          "name": "rejectionPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32241,
                          "src": "25795:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 26732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25813:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "25795:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 26728,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "25787:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3286,
                      "src": "25787:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 26734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25787:28:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26735,
                  "nodeType": "ExpressionStatement",
                  "src": "25787:28:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26741,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "25846:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26742,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "25853:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26736,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "25825:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26739,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "25825:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37896,
                      "src": "25825:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 26743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25825:38:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26744,
                  "nodeType": "ExpressionStatement",
                  "src": "25825:38:60"
                },
                {
                  "assignments": [
                    26749
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26749,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "25891:3:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26816,
                      "src": "25874:20:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26747,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25874:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 26748,
                        "nodeType": "ArrayTypeName",
                        "src": "25874:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26755,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 26753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25911:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 26752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "25897:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26750,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25901:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 26751,
                        "nodeType": "ArrayTypeName",
                        "src": "25901:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 26754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25897:16:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25874:39:60"
                },
                {
                  "assignments": [
                    26760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26760,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "25940:7:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26816,
                      "src": "25923:24:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26758,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25923:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 26759,
                        "nodeType": "ArrayTypeName",
                        "src": "25923:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26766,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 26764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25964:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 26763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "25950:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26761,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25954:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 26762,
                        "nodeType": "ArrayTypeName",
                        "src": "25954:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 26765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25950:16:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25923:43:60"
                },
                {
                  "body": {
                    "id": 26790,
                    "nodeType": "Block",
                    "src": "26004:68:60",
                    "statements": [
                      {
                        "expression": {
                          "id": 26782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 26776,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26749,
                              "src": "26018:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 26778,
                            "indexExpression": {
                              "id": 26777,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26768,
                              "src": "26022:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "26018:6:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 26781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 26779,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26768,
                              "src": "26027:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 26780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26031:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "26027:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26018:14:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 26783,
                        "nodeType": "ExpressionStatement",
                        "src": "26018:14:60"
                      },
                      {
                        "expression": {
                          "id": 26788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 26784,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26760,
                              "src": "26046:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 26786,
                            "indexExpression": {
                              "id": 26785,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26768,
                              "src": "26054:1:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "26046:10:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 26787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26059:2:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "26046:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 26789,
                        "nodeType": "ExpressionStatement",
                        "src": "26046:15:60"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 26770,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26768,
                      "src": "25992:1:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 26771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25996:1:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "25992:5:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26791,
                  "initializationExpression": {
                    "assignments": [
                      26768
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 26768,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "25989:1:60",
                        "nodeType": "VariableDeclaration",
                        "scope": 26791,
                        "src": "25981:9:60",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 26767,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25981:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 26769,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "25981:9:60"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 26774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "25999:3:60",
                      "subExpression": {
                        "id": 26773,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26768,
                        "src": "25999:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 26775,
                    "nodeType": "ExpressionStatement",
                    "src": "25999:3:60"
                  },
                  "nodeType": "ForStatement",
                  "src": "25976:96:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 26793,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "26100:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 26794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SUCCESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16550,
                        "src": "26100:13:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      },
                      {
                        "expression": {
                          "id": 26795,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "26115:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 26796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "INACTIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16548,
                        "src": "26115:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      ],
                      "id": 26792,
                      "name": "revertBuyoutState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34628,
                      "src": "26082:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_State_$16551_$_t_enum$_State_$16551_$returns$__$",
                        "typeString": "function (enum State,enum State)"
                      }
                    },
                    "id": 26797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26082:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26798,
                  "nodeType": "ExpressionStatement",
                  "src": "26082:48:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26804,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "26191:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26807,
                            "name": "erc1155",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32223,
                            "src": "26218:7:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 26806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "26210:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26805,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "26210:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26210:16:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26809,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "26240:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26810,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "26240:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26811,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26749,
                        "src": "26262:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 26812,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26760,
                        "src": "26279:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 26813,
                        "name": "erc1155BatchTransferProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32312,
                        "src": "26300:25:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26799,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "26140:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26802,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "26140:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchWithdrawERC1155",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37801,
                      "src": "26140:37:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes32[] memory) external"
                      }
                    },
                    "id": 26814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26140:195:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26815,
                  "nodeType": "ExpressionStatement",
                  "src": "26140:195:60"
                }
              ]
            },
            "functionSelector": "c4b49fe1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBatchWithdrawERC1155RevertStateINACTIVE",
            "nameLocation": "25525:43:60",
            "parameters": {
              "id": 26697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25568:2:60"
            },
            "returnParameters": {
              "id": 26698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25578:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26879,
            "nodeType": "FunctionDefinition",
            "src": "26348:539:60",
            "body": {
              "id": 26878,
              "nodeType": "Block",
              "src": "26407:480:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26821,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "26434:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26822,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "26441:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26823,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "26446:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26824,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "26460:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26473:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26820,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "26417:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 26826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26417:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26827,
                  "nodeType": "ExpressionStatement",
                  "src": "26417:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26829,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "26514:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26830,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "26521:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 26828,
                      "name": "setUpBatchWithdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33692,
                      "src": "26488:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 26831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26488:37:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26832,
                  "nodeType": "ExpressionStatement",
                  "src": "26488:37:60"
                },
                {
                  "assignments": [
                    26834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26834,
                      "mutability": "mutable",
                      "name": "batchWithdrawERC1155",
                      "nameLocation": "26549:20:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26878,
                      "src": "26536:33:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26833,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "26536:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26841,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26836,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "26618:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26837,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "26637:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26838,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "26637:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 26839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26661:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 26835,
                      "name": "initializeBatchWithdrawalERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34471,
                      "src": "26572:32:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 26840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26572:100:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26536:136:60"
                },
                {
                  "assignments": [
                    26846
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26846,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "26697:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26878,
                      "src": "26682:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26844,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "26682:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26845,
                        "nodeType": "ArrayTypeName",
                        "src": "26682:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26852,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 26850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26716:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "26704:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26847,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "26708:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26848,
                        "nodeType": "ArrayTypeName",
                        "src": "26708:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 26851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26704:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26682:36:60"
                },
                {
                  "expression": {
                    "id": 26857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26853,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26846,
                        "src": "26728:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 26855,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 26854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26733:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "26728:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26856,
                      "name": "batchWithdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26834,
                      "src": "26738:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "26728:30:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 26858,
                  "nodeType": "ExpressionStatement",
                  "src": "26728:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 26864,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "26808:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 26865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotWinner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16586,
                              "src": "26808:17:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 26866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "26808:26:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 26862,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "26785:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 26863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "26785:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 26867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26785:50:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 26859,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "26769:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "26769:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26769:67:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26869,
                  "nodeType": "ExpressionStatement",
                  "src": "26769:67:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26875,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26846,
                        "src": "26875:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26870,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "26846:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26873,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "26846:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "26846:28:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 26876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26846:34:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 26877,
                  "nodeType": "ExpressionStatement",
                  "src": "26846:34:60"
                }
              ]
            },
            "functionSelector": "68100f1e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBatchWithdrawERC1155RevertNotAllowed",
            "nameLocation": "26357:40:60",
            "parameters": {
              "id": 26818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26397:2:60"
            },
            "returnParameters": {
              "id": 26819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26407:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26960,
            "nodeType": "FunctionDefinition",
            "src": "27004:560:60",
            "body": {
              "id": 26959,
              "nodeType": "Block",
              "src": "27040:524:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26884,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "27067:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26885,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "27074:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26886,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "27079:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26887,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "27093:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27106:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26883,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "27050:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 26889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27050:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26890,
                  "nodeType": "ExpressionStatement",
                  "src": "27050:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26892,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "27140:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26893,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "27147:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 26891,
                      "name": "setUpWithdrawERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33755,
                      "src": "27121:18:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 26894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27121:30:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26895,
                  "nodeType": "ExpressionStatement",
                  "src": "27121:30:60"
                },
                {
                  "assignments": [
                    26897
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26897,
                      "mutability": "mutable",
                      "name": "withdrawERC20",
                      "nameLocation": "27175:13:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26959,
                      "src": "27162:26:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26896,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "27162:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26904,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26899,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "27230:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26900,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "27249:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26901,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "27249:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 26902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27271:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26898,
                      "name": "initializeWithdrawalERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34531,
                      "src": "27191:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 26903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27191:92:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27162:121:60"
                },
                {
                  "assignments": [
                    26909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26909,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "27308:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 26959,
                      "src": "27293:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26907,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "27293:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26908,
                        "nodeType": "ArrayTypeName",
                        "src": "27293:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26915,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 26913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27327:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "27315:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26910,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "27319:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 26911,
                        "nodeType": "ArrayTypeName",
                        "src": "27319:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 26914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27315:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27293:36:60"
                },
                {
                  "expression": {
                    "id": 26920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 26916,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26909,
                        "src": "27339:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 26918,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 26917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27344:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "27339:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26919,
                      "name": "withdrawERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26897,
                      "src": "27349:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "27339:23:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 26921,
                  "nodeType": "ExpressionStatement",
                  "src": "27339:23:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26926,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "27396:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 26923,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32219,
                            "src": "27379:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 26922,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17060,
                          "src": "27372:6:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$17060_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 26924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27372:13:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$17060",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 26925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16995,
                      "src": "27372:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 26927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27372:30:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26928,
                  "nodeType": "ExpressionStatement",
                  "src": "27372:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26934,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "27445:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26935,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "27445:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26931,
                                "name": "erc20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32219,
                                "src": "27428:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26930,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17060,
                              "src": "27421:6:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$17060_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 26932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27421:13:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$17060",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 26933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16995,
                          "src": "27421:23:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 26936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27421:33:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 26937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27456:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 26929,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "27412:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27412:46:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26939,
                  "nodeType": "ExpressionStatement",
                  "src": "27412:46:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26945,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26909,
                        "src": "27495:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26940,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "27468:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26943,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "27468:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "27468:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 26946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27468:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 26947,
                  "nodeType": "ExpressionStatement",
                  "src": "27468:32:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 26953,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "27543:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 26954,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "27543:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 26950,
                                "name": "erc20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32219,
                                "src": "27526:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 26949,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17060,
                              "src": "27519:6:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$17060_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 26951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27519:13:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$17060",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 26952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16995,
                          "src": "27519:23:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 26955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27519:33:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 26956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27554:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26948,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "27510:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27510:47:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26958,
                  "nodeType": "ExpressionStatement",
                  "src": "27510:47:60"
                }
              ]
            },
            "documentation": {
              "id": 26880,
              "nodeType": "StructuredDocumentation",
              "src": "26893:106:60",
              "text": "============================\n ===== WITHDRAW ERC20 =======\n ============================"
            },
            "functionSelector": "3ad2e8d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC20",
            "nameLocation": "27013:17:60",
            "parameters": {
              "id": 26881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27030:2:60"
            },
            "returnParameters": {
              "id": 26882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27040:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27041,
            "nodeType": "FunctionDefinition",
            "src": "27570:564:60",
            "body": {
              "id": 27040,
              "nodeType": "Block",
              "src": "27612:522:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26964,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "27639:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26965,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "27646:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 26966,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "27651:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26967,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "27665:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27679:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 26963,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "27622:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 26969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27622:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26970,
                  "nodeType": "ExpressionStatement",
                  "src": "27622:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26975,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "27716:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 26976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27723:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 26972,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32219,
                            "src": "27704:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 26971,
                          "name": "MockERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18449,
                          "src": "27694:9:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MockERC20_$18449_$",
                            "typeString": "type(contract MockERC20)"
                          }
                        },
                        "id": 26973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27694:16:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$18449",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 26974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18435,
                      "src": "27694:21:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 26977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27694:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26978,
                  "nodeType": "ExpressionStatement",
                  "src": "27694:32:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26984,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "27760:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 26985,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "27767:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 26979,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "27736:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26982,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "27736:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 26983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38065,
                      "src": "27736:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 26986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27736:41:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26987,
                  "nodeType": "ExpressionStatement",
                  "src": "27736:41:60"
                },
                {
                  "assignments": [
                    26989
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26989,
                      "mutability": "mutable",
                      "name": "withdrawERC20",
                      "nameLocation": "27801:13:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 27040,
                      "src": "27788:26:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 26988,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "27788:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26996,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26991,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "27856:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26992,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "27875:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 26993,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "27875:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 26994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27897:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 26990,
                      "name": "initializeWithdrawalERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34531,
                      "src": "27817:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 26995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27817:92:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27788:121:60"
                },
                {
                  "assignments": [
                    27001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27001,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "27934:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 27040,
                      "src": "27919:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 26999,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "27919:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 27000,
                        "nodeType": "ArrayTypeName",
                        "src": "27919:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27007,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27953:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 27004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "27941:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 27002,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "27945:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 27003,
                        "nodeType": "ArrayTypeName",
                        "src": "27945:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 27006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27941:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27919:36:60"
                },
                {
                  "expression": {
                    "id": 27012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 27008,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27001,
                        "src": "27965:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 27010,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 27009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27970:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "27965:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 27011,
                      "name": "withdrawERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26989,
                      "src": "27975:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "27965:23:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 27013,
                  "nodeType": "ExpressionStatement",
                  "src": "27965:23:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27018,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "28022:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 27015,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32219,
                            "src": "28005:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 27014,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17060,
                          "src": "27998:6:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$17060_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 27016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27998:13:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$17060",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 27017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16995,
                      "src": "27998:23:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 27019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27998:30:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27020,
                  "nodeType": "ExpressionStatement",
                  "src": "27998:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27026,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27001,
                        "src": "28065:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 27021,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "28038:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 27024,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "28038:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 27025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "28038:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 27027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28038:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 27028,
                  "nodeType": "ExpressionStatement",
                  "src": "28038:32:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 27034,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32212,
                              "src": "28113:3:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$32206_storage",
                                "typeString": "struct TestUtil.User storage ref"
                              }
                            },
                            "id": 27035,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32170,
                            "src": "28113:8:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 27031,
                                "name": "erc20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32219,
                                "src": "28096:5:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 27030,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17060,
                              "src": "28089:6:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$17060_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 27032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28089:13:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$17060",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 27033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16995,
                          "src": "28089:23:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28089:33:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 27037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28124:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 27029,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "28080:8:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 27038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28080:47:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27039,
                  "nodeType": "ExpressionStatement",
                  "src": "28080:47:60"
                }
              ]
            },
            "functionSelector": "f9167324",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC20Redeem",
            "nameLocation": "27579:23:60",
            "parameters": {
              "id": 26961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27602:2:60"
            },
            "returnParameters": {
              "id": 26962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27612:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27110,
            "nodeType": "FunctionDefinition",
            "src": "28140:602:60",
            "body": {
              "id": 27109,
              "nodeType": "Block",
              "src": "28191:551:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27045,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "28218:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 27046,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "28225:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 27047,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "28230:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 27048,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "28244:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 27049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28257:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 27044,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "28201:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 27050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28201:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27051,
                  "nodeType": "ExpressionStatement",
                  "src": "28201:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27053,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "28293:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 27054,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "28300:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 27052,
                      "name": "setUpWithdrawERC1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33602,
                      "src": "28272:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 27055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28272:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27056,
                  "nodeType": "ExpressionStatement",
                  "src": "28272:32:60"
                },
                {
                  "assignments": [
                    27058
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27058,
                      "mutability": "mutable",
                      "name": "withdrawERC20",
                      "nameLocation": "28328:13:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 27109,
                      "src": "28315:26:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 27057,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "28315:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27068,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27062,
                            "name": "baseVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32132,
                            "src": "28391:9:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseVault_$21905",
                              "typeString": "contract BaseVault"
                            }
                          ],
                          "id": 27061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "28383:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27060,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "28383:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28383:18:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 27064,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "28415:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 27065,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "28415:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 27066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28437:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 27059,
                      "name": "initializeWithdrawalERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34531,
                      "src": "28344:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 27067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28344:105:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28315:134:60"
                },
                {
                  "assignments": [
                    27073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27073,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "28474:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 27109,
                      "src": "28459:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 27071,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "28459:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 27072,
                        "nodeType": "ArrayTypeName",
                        "src": "28459:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27079,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28493:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 27076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "28481:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 27074,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "28485:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 27075,
                        "nodeType": "ArrayTypeName",
                        "src": "28485:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 27078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28481:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28459:36:60"
                },
                {
                  "expression": {
                    "id": 27084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 27080,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27073,
                        "src": "28505:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 27082,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 27081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28510:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "28505:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 27083,
                      "name": "withdrawERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27058,
                      "src": "28515:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "28505:23:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 27085,
                  "nodeType": "ExpressionStatement",
                  "src": "28505:23:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 27091,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "28608:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 27092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotVault",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16591,
                              "src": "28608:16:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 27093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "28608:25:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 27096,
                                "name": "baseVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32132,
                                "src": "28659:9:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BaseVault_$21905",
                                  "typeString": "contract BaseVault"
                                }
                              ],
                              "id": 27095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "28651:7:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 27094,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "28651:7:60",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 27097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28651:18:60",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27089,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "28568:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 27090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "28568:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 27098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28568:115:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 27086,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "28539:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "28539:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28539:154:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27100,
                  "nodeType": "ExpressionStatement",
                  "src": "28539:154:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27106,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27073,
                        "src": "28730:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 27101,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "28703:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 27104,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "28703:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 27105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "28703:26:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 27107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28703:32:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 27108,
                  "nodeType": "ExpressionStatement",
                  "src": "28703:32:60"
                }
              ]
            },
            "functionSelector": "0cc68cef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC20RevertNotAVault",
            "nameLocation": "28149:32:60",
            "parameters": {
              "id": 27042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28181:2:60"
            },
            "returnParameters": {
              "id": 27043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28191:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27183,
            "nodeType": "FunctionDefinition",
            "src": "28748:573:60",
            "body": {
              "id": 27182,
              "nodeType": "Block",
              "src": "28803:518:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27114,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "28830:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 27115,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "28837:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 27116,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "28842:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 27117,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "28856:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 27118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28869:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 27113,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "28813:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 27119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28813:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27120,
                  "nodeType": "ExpressionStatement",
                  "src": "28813:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27128,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "28924:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 27121,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32212,
                            "src": "28885:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 27124,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "28885:16:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 27125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "start",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38188,
                        "src": "28885:22:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 27127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 27126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28915:7:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "28885:38:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 27129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28885:45:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27130,
                  "nodeType": "ExpressionStatement",
                  "src": "28885:45:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27138,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "28990:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 27139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28997:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 27131,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32209,
                            "src": "28940:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$32206_storage",
                              "typeString": "struct TestUtil.User storage ref"
                            }
                          },
                          "id": 27134,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyoutModule",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32181,
                          "src": "28940:18:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                            "typeString": "contract BuyoutBS"
                          }
                        },
                        "id": 27135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyFractions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37824,
                        "src": "28940:31:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 27137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e32",
                          "id": 27136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28979:9:60",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000_by_1",
                            "typeString": "int_const 200000000000000000"
                          },
                          "value": "0.2"
                        }
                      ],
                      "src": "28940:49:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 27140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28940:62:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27141,
                  "nodeType": "ExpressionStatement",
                  "src": "28940:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 27145,
                          "name": "rejectionPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32241,
                          "src": "29020:15:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 27146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29038:1:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "29020:19:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 27142,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "29012:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3286,
                      "src": "29012:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 27148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29012:28:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27149,
                  "nodeType": "ExpressionStatement",
                  "src": "29012:28:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27155,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "29071:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 27156,
                        "name": "burnProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32280,
                        "src": "29078:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 27150,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "29050:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 27153,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "29050:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 27154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "end",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37896,
                      "src": "29050:20:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32[] memory) external"
                      }
                    },
                    "id": 27157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29050:38:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27158,
                  "nodeType": "ExpressionStatement",
                  "src": "29050:38:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 27160,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "29117:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 27161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SUCCESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16550,
                        "src": "29117:13:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      },
                      {
                        "expression": {
                          "id": 27162,
                          "name": "State",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16551,
                          "src": "29132:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_State_$16551_$",
                            "typeString": "type(enum State)"
                          }
                        },
                        "id": 27163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "INACTIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16548,
                        "src": "29132:14:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        },
                        {
                          "typeIdentifier": "t_enum$_State_$16551",
                          "typeString": "enum State"
                        }
                      ],
                      "id": 27159,
                      "name": "revertBuyoutState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34628,
                      "src": "29099:17:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_State_$16551_$_t_enum$_State_$16551_$returns$__$",
                        "typeString": "function (enum State,enum State)"
                      }
                    },
                    "id": 27164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29099:48:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27165,
                  "nodeType": "ExpressionStatement",
                  "src": "29099:48:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27171,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "29201:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27174,
                            "name": "erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32219,
                            "src": "29228:5:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 27173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "29220:7:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27172,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "29220:7:60",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29220:14:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 27176,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "29248:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 27177,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "29248:8:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 27178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29270:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "id": 27179,
                        "name": "erc20TransferProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32288,
                        "src": "29286:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 27166,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32212,
                          "src": "29157:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 27169,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "29157:16:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 27170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38283,
                      "src": "29157:30:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes32[] memory) external"
                      }
                    },
                    "id": 27180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29157:157:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27181,
                  "nodeType": "ExpressionStatement",
                  "src": "29157:157:60"
                }
              ]
            },
            "functionSelector": "abf3c835",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC20RevertStateINACTIVE",
            "nameLocation": "28757:36:60",
            "parameters": {
              "id": 27111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28793:2:60"
            },
            "returnParameters": {
              "id": 27112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28803:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27245,
            "nodeType": "FunctionDefinition",
            "src": "29327:505:60",
            "body": {
              "id": 27244,
              "nodeType": "Block",
              "src": "29379:453:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27187,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "29406:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 27188,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "29413:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 27189,
                        "name": "TOTAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32334,
                        "src": "29418:12:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 27190,
                        "name": "HALF_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "29432:11:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 27191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29445:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 27186,
                      "name": "initializeBuyout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34253,
                      "src": "29389:16:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 27192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29389:61:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27193,
                  "nodeType": "ExpressionStatement",
                  "src": "29389:61:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27195,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32209,
                        "src": "29479:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      },
                      {
                        "id": 27196,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32212,
                        "src": "29486:3:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_User_$32206_storage",
                          "typeString": "struct TestUtil.User storage ref"
                        }
                      ],
                      "id": 27194,
                      "name": "setUpWithdrawERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33755,
                      "src": "29460:18:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_User_$32206_memory_ptr_$_t_struct$_User_$32206_memory_ptr_$returns$__$",
                        "typeString": "function (struct TestUtil.User memory,struct TestUtil.User memory)"
                      }
                    },
                    "id": 27197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29460:30:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27198,
                  "nodeType": "ExpressionStatement",
                  "src": "29460:30:60"
                },
                {
                  "assignments": [
                    27200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27200,
                      "mutability": "mutable",
                      "name": "withdrawERC20",
                      "nameLocation": "29514:13:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 27244,
                      "src": "29501:26:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 27199,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "29501:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27207,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 27202,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32231,
                        "src": "29569:5:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 27203,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "29588:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 27204,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32170,
                        "src": "29588:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 27205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29612:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 27201,
                      "name": "initializeWithdrawalERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34531,
                      "src": "29530:25:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,address,uint256) view returns (bytes memory)"
                      }
                    },
                    "id": 27206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29530:94:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29501:123:60"
                },
                {
                  "assignments": [
                    27212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27212,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "29649:4:60",
                      "nodeType": "VariableDeclaration",
                      "scope": 27244,
                      "src": "29634:19:60",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 27210,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "29634:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 27211,
                        "nodeType": "ArrayTypeName",
                        "src": "29634:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27218,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 27216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29668:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 27215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "29656:11:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 27213,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "29660:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 27214,
                        "nodeType": "ArrayTypeName",
                        "src": "29660:7:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 27217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29656:14:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29634:36:60"
                },
                {
                  "expression": {
                    "id": 27223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 27219,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27212,
                        "src": "29680:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 27221,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 27220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29685:1:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "29680:7:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 27222,
                      "name": "withdrawERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27200,
                      "src": "29690:13:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "29680:23:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 27224,
                  "nodeType": "ExpressionStatement",
                  "src": "29680:23:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 27230,
                                "name": "IBuyout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16823,
                                "src": "29753:7:60",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBuyout_$16823_$",
                                  "typeString": "type(contract IBuyout)"
                                }
                              },
                              "id": 27231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NotWinner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16586,
                              "src": "29753:17:60",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 27232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "29753:26:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 27228,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "29730:3:60",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 27229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "29730:22:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 27233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29730:50:60",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 27225,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1807,
                        "src": "29714:2:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3460",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 27227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3388,
                      "src": "29714:15:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 27234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29714:67:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27235,
                  "nodeType": "ExpressionStatement",
                  "src": "29714:67:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27241,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27212,
                        "src": "29820:4:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 27236,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "29791:5:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$32206_storage",
                            "typeString": "struct TestUtil.User storage ref"
                          }
                        },
                        "id": 27239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyoutModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32181,
                        "src": "29791:18:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyoutBS_$38314",
                          "typeString": "contract BuyoutBS"
                        }
                      },
                      "id": 27240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multicall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37952,
                      "src": "29791:28:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory[] memory) external returns (bytes memory[] memory)"
                      }
                    },
                    "id": 27242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29791:34:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 27243,
                  "nodeType": "ExpressionStatement",
                  "src": "29791:34:60"
                }
              ]
            },
            "functionSelector": "b91369a1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdrawERC20RevertNotAllowed",
            "nameLocation": "29336:33:60",
            "parameters": {
              "id": 27184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29369:2:60"
            },
            "returnParameters": {
              "id": 27185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29379:0:60"
            },
            "scope": 27246,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23540,
              "name": "TestUtil",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34782,
              "src": "112:8:60"
            },
            "id": 23541,
            "nodeType": "InheritanceSpecifier",
            "src": "112:8:60"
          }
        ],
        "canonicalName": "BuyoutTest",
        "contractDependencies": [
          14155,
          16140,
          18408,
          18449,
          18526,
          18638,
          20060,
          21460,
          21588,
          21905,
          22125,
          22200,
          22700,
          22868,
          37412,
          37630,
          38314,
          39034,
          44801,
          45319,
          45692,
          46122,
          47802,
          48367,
          48948
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27246,
          34782,
          2223,
          1786
        ],
        "name": "BuyoutTest",
        "nameLocation": "98:10:60",
        "scope": 27247,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 60
}